{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v9.json", "dbt_version": "1.5.1", "generated_at": "2023-06-23T14:25:32.946336Z", "invocation_id": "f25364db-5a5c-4c9f-a651-52be6f5a9655", "env": {}, "project_id": "498a0412234b89d102571f1d604fbb02", "user_id": "3e17654c-4f2d-4b64-a22c-b11a1636eede", "send_anonymous_usage_stats": true, "adapter_type": "postgres"}, "nodes": {"model.AidboxProject.patient_age": {"database": "cdrdemo", "schema": "dbt_marts", "name": "patient_age", "resource_type": "model", "package_name": "AidboxProject", "path": "marts/patient_age.sql", "original_file_path": "models/marts/patient_age.sql", "unique_id": "model.AidboxProject.patient_age", "fqn": ["AidboxProject", "marts", "patient_age"], "alias": "patient_age", "checksum": {"name": "sha256", "checksum": "d2bbc6796fae4b8d36c2418e73379e586263978c8cc4e6fa10980684ccb4fe9c"}, "config": {"enabled": true, "alias": null, "schema": "marts", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "unlogged": true, "schema": "marts"}, "created_at": 1687530333.236465, "relation_name": "\"cdrdemo\".\"dbt_marts\".\"patient_age\"", "raw_code": "SELECT   age\n         , count(id)\n    FROM {{ ref('dim_patient') }}\n   WHERE alive\n         AND age is not null\nGROUP BY 1", "language": "sql", "refs": [{"name": "dim_patient", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.AidboxProject.dim_patient"]}, "compiled_path": "docs/compiled/AidboxProject/models/marts/patient_age.sql", "compiled": true, "compiled_code": "SELECT   age\n         , count(id)\n    FROM \"cdrdemo\".\"dbt\".\"dim_patient\"\n   WHERE alive\n         AND age is not null\nGROUP BY 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.administration": {"database": "cdrdemo", "schema": "dbt_marts", "name": "administration", "resource_type": "model", "package_name": "AidboxProject", "path": "marts/administration.sql", "original_file_path": "models/marts/administration.sql", "unique_id": "model.AidboxProject.administration", "fqn": ["AidboxProject", "marts", "administration"], "alias": "administration", "checksum": {"name": "sha256", "checksum": "b088e99208f46db202cd96b6f1c5c521340222a42419beb7421a22b1c45a387d"}, "config": {"enabled": true, "alias": null, "schema": "marts", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "unlogged": true, "schema": "marts"}, "created_at": 1687530333.2430139, "relation_name": "\"cdrdemo\".\"dbt_marts\".\"administration\"", "raw_code": "SELECT   {{ ref('dim_organization') }}.name organization\n         , {{ ref('dim_organization') }}.id organization_id\n         , {{ ref('dim_location') }}.name location_name\n         , {{ ref('dim_location') }}.state state\n         , {{ ref('fact_encounter') }}.class class\n         , {{ ref('fact_encounter') }}.type_code type_code\n         , {{ ref('fact_encounter') }}.type_display type_display\n         , date_trunc('month', date ({{ ref('fact_encounter') }}.start)) date\n         , avg({{ ref('fact_encounter') }}.duration) duration\n         , round(extract(epoch from (avg({{ ref('fact_encounter') }}.duration)))/60) duration_minutes\n         , count(*)\n    FROM {{ ref('fact_encounter') }}\n    JOIN {{ ref('dim_organization') }} on {{ ref('fact_encounter') }}.organization_synthea_id = {{ ref('dim_organization') }}.synthea_id\n    JOIN {{ ref('dim_location') }}     on {{ ref('fact_encounter') }}.location_synthea_id = {{ ref('dim_location') }}.synthea_id\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8", "language": "sql", "refs": [{"name": "dim_organization", "package": null, "version": null}, {"name": "dim_organization", "package": null, "version": null}, {"name": "dim_location", "package": null, "version": null}, {"name": "dim_location", "package": null, "version": null}, {"name": "fact_encounter", "package": null, "version": null}, {"name": "fact_encounter", "package": null, "version": null}, {"name": "fact_encounter", "package": null, "version": null}, {"name": "fact_encounter", "package": null, "version": null}, {"name": "fact_encounter", "package": null, "version": null}, {"name": "fact_encounter", "package": null, "version": null}, {"name": "fact_encounter", "package": null, "version": null}, {"name": "dim_organization", "package": null, "version": null}, {"name": "fact_encounter", "package": null, "version": null}, {"name": "dim_organization", "package": null, "version": null}, {"name": "dim_location", "package": null, "version": null}, {"name": "fact_encounter", "package": null, "version": null}, {"name": "dim_location", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.AidboxProject.dim_organization", "model.AidboxProject.dim_organization", "model.AidboxProject.dim_location", "model.AidboxProject.dim_location", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.dim_organization", "model.AidboxProject.fact_encounter", "model.AidboxProject.dim_organization", "model.AidboxProject.dim_location", "model.AidboxProject.fact_encounter", "model.AidboxProject.dim_location"]}, "compiled_path": "docs/compiled/AidboxProject/models/marts/administration.sql", "compiled": true, "compiled_code": "SELECT   \"cdrdemo\".\"dbt\".\"dim_organization\".name organization\n         , \"cdrdemo\".\"dbt\".\"dim_organization\".id organization_id\n         , \"cdrdemo\".\"dbt\".\"dim_location\".name location_name\n         , \"cdrdemo\".\"dbt\".\"dim_location\".state state\n         , \"cdrdemo\".\"dbt\".\"fact_encounter\".class class\n         , \"cdrdemo\".\"dbt\".\"fact_encounter\".type_code type_code\n         , \"cdrdemo\".\"dbt\".\"fact_encounter\".type_display type_display\n         , date_trunc('month', date (\"cdrdemo\".\"dbt\".\"fact_encounter\".start)) date\n         , avg(\"cdrdemo\".\"dbt\".\"fact_encounter\".duration) duration\n         , round(extract(epoch from (avg(\"cdrdemo\".\"dbt\".\"fact_encounter\".duration)))/60) duration_minutes\n         , count(*)\n    FROM \"cdrdemo\".\"dbt\".\"fact_encounter\"\n    JOIN \"cdrdemo\".\"dbt\".\"dim_organization\" on \"cdrdemo\".\"dbt\".\"fact_encounter\".organization_synthea_id = \"cdrdemo\".\"dbt\".\"dim_organization\".synthea_id\n    JOIN \"cdrdemo\".\"dbt\".\"dim_location\"     on \"cdrdemo\".\"dbt\".\"fact_encounter\".location_synthea_id = \"cdrdemo\".\"dbt\".\"dim_location\".synthea_id\nGROUP BY 1, 2, 3, 4, 5, 6, 7, 8", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.demographics": {"database": "cdrdemo", "schema": "dbt_marts", "name": "demographics", "resource_type": "model", "package_name": "AidboxProject", "path": "marts/demographics.sql", "original_file_path": "models/marts/demographics.sql", "unique_id": "model.AidboxProject.demographics", "fqn": ["AidboxProject", "marts", "demographics"], "alias": "demographics", "checksum": {"name": "sha256", "checksum": "24dc91fac7ffc78c06ebe0bdf2352a8d71852b9c345b0c0e99d0631f81c9fc16"}, "config": {"enabled": true, "alias": null, "schema": "marts", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "unlogged": true, "schema": "marts"}, "created_at": 1687530333.2450151, "relation_name": "\"cdrdemo\".\"dbt_marts\".\"demographics\"", "raw_code": "SELECT   op.year_date as year\n         , p.gender\n         , p.race\n         , p.state\n         , p.language_display\n         , p.ms_display\n         , count(p.id) filter (where p.birth_year    = extract('YEAR' from op.year_date)) as birth\n         , count(p.id) filter (where p.deceased_year = extract('YEAR' from op.year_date)) as deceased \n         , (SELECT count(pp.id) \n              FROM {{ ref('dim_patient') }} pp \n             WHERE pp.birthDate < (op.year_date + interval '1 YEAR')\n                   AND (pp.deceased is null OR pp.deceased > op.year_date)\n                   AND pp.race = p.race AND pp.gender = p.gender AND pp.state = p.state\n                   AND pp.ms_display = p.ms_display AND pp.language_display = p.language_display) population\n    FROM {{ ref('fact_observable_period') }} as op\n    JOIN {{ ref('dim_patient') }} as p\n      ON p.birth_year = op.year OR p.deceased_year = op.year\nGROUP BY 1, 2, 3, 4, 5, 6", "language": "sql", "refs": [{"name": "dim_patient", "package": null, "version": null}, {"name": "fact_observable_period", "package": null, "version": null}, {"name": "dim_patient", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.AidboxProject.dim_patient", "model.AidboxProject.fact_observable_period", "model.AidboxProject.dim_patient"]}, "compiled_path": "docs/compiled/AidboxProject/models/marts/demographics.sql", "compiled": true, "compiled_code": "SELECT   op.year_date as year\n         , p.gender\n         , p.race\n         , p.state\n         , p.language_display\n         , p.ms_display\n         , count(p.id) filter (where p.birth_year    = extract('YEAR' from op.year_date)) as birth\n         , count(p.id) filter (where p.deceased_year = extract('YEAR' from op.year_date)) as deceased \n         , (SELECT count(pp.id) \n              FROM \"cdrdemo\".\"dbt\".\"dim_patient\" pp \n             WHERE pp.birthDate < (op.year_date + interval '1 YEAR')\n                   AND (pp.deceased is null OR pp.deceased > op.year_date)\n                   AND pp.race = p.race AND pp.gender = p.gender AND pp.state = p.state\n                   AND pp.ms_display = p.ms_display AND pp.language_display = p.language_display) population\n    FROM \"cdrdemo\".\"dbt\".\"fact_observable_period\" as op\n    JOIN \"cdrdemo\".\"dbt\".\"dim_patient\" as p\n      ON p.birth_year = op.year OR p.deceased_year = op.year\nGROUP BY 1, 2, 3, 4, 5, 6", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.death_age": {"database": "cdrdemo", "schema": "dbt_marts", "name": "death_age", "resource_type": "model", "package_name": "AidboxProject", "path": "marts/death_age.sql", "original_file_path": "models/marts/death_age.sql", "unique_id": "model.AidboxProject.death_age", "fqn": ["AidboxProject", "marts", "death_age"], "alias": "death_age", "checksum": {"name": "sha256", "checksum": "791c7619c9a93113325b800db45efda061c96a2b93a3856c5674879745bd9082"}, "config": {"enabled": true, "alias": null, "schema": "marts", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "unlogged": true, "schema": "marts"}, "created_at": 1687530333.246985, "relation_name": "\"cdrdemo\".\"dbt_marts\".\"death_age\"", "raw_code": "SELECT extract('year' FROM age(deceased, birthdate)) death_age\n         , count(id) count\n    FROM {{ ref('dim_patient') }}\n   WHERE NOT alive\n         AND deceased is not null\n         AND birthdate is not null\nGROUP BY 1", "language": "sql", "refs": [{"name": "dim_patient", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.AidboxProject.dim_patient"]}, "compiled_path": "docs/compiled/AidboxProject/models/marts/death_age.sql", "compiled": true, "compiled_code": "SELECT extract('year' FROM age(deceased, birthdate)) death_age\n         , count(id) count\n    FROM \"cdrdemo\".\"dbt\".\"dim_patient\"\n   WHERE NOT alive\n         AND deceased is not null\n         AND birthdate is not null\nGROUP BY 1", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.dim_location": {"database": "cdrdemo", "schema": "dbt", "name": "dim_location", "resource_type": "model", "package_name": "AidboxProject", "path": "views/dim_location.sql", "original_file_path": "models/views/dim_location.sql", "unique_id": "model.AidboxProject.dim_location", "fqn": ["AidboxProject", "views", "dim_location"], "alias": "dim_location", "checksum": {"name": "sha256", "checksum": "ebac8d0839aa173930280057f4a67dce1f9da4b617d9ea11cbb40aed23a879f4"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "unlogged": true}, "created_at": 1687530333.248626, "relation_name": "\"cdrdemo\".\"dbt\".\"dim_location\"", "raw_code": "select   id \n       , {{ aidbox.path(\"name\") }} as name\n       , {{ aidbox.identifier('synthea', \"resource->'managingOrganization'\") }} organization_synthea_id\n       , {{ aidbox.identifier('synthea') }} synthea_id\n       , {{ aidbox.path('status') }}  status\n       , {{ aidbox.path('address,city') }} city\n       , {{ aidbox.path('address,state') }}  state\n       , {{ aidbox.path('address,country') }}  country\nfrom {{ ref('aidbox', 'Location')}}", "language": "sql", "refs": [{"name": "seed_identifiers", "package": null, "version": null}, {"name": "seed_identifiers", "package": null, "version": null}, {"name": "Location", "package": "aidbox", "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.path", "macro.aidbox.identifier"], "nodes": ["seed.AidboxProject.seed_identifiers", "seed.AidboxProject.seed_identifiers", "model.aidbox.Location"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/dim_location.sql", "compiled": true, "compiled_code": "select   id \n       , (\"resource\"#>>'{ name }') as name\n       , (trim('\"' FROM (jsonb_path_query_first(resource->'managingOrganization', concat('$.identifier ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_identifiers\" WHERE alias = 'synthea' limit 1), '\").value')::jsonpath))::text)) organization_synthea_id\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.identifier ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_identifiers\" WHERE alias = 'synthea' limit 1), '\").value')::jsonpath))::text)) synthea_id\n       , (\"resource\"#>>'{ status }')  status\n       , (\"resource\"#>>'{ address,city }') city\n       , (\"resource\"#>>'{ address,state }')  state\n       , (\"resource\"#>>'{ address,country }')  country\nfrom \"cdrdemo\".\"dbt_fhir\".\"Location\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.fact_condition": {"database": "cdrdemo", "schema": "dbt", "name": "fact_condition", "resource_type": "model", "package_name": "AidboxProject", "path": "views/fact_condition.sql", "original_file_path": "models/views/fact_condition.sql", "unique_id": "model.AidboxProject.fact_condition", "fqn": ["AidboxProject", "views", "fact_condition"], "alias": "fact_condition", "checksum": {"name": "sha256", "checksum": "4ec7f4e7f45bf98c877f8504d2fa1d0490956ad17ddd1b64fff8f4b66306279b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}], "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unlogged": true, "unique_key": "id", "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}]}, "created_at": 1687530333.2544289, "relation_name": "\"cdrdemo\".\"dbt\".\"fact_condition\"", "raw_code": "{{\n     config(\n          materialized='incremental',\n          unique_key='id',\n          indexes=[{'columns': ['id']},\n                   {'columns': ['ts']}]\n    )\n}}\n\nSELECT   id::uuid\n       , ts\n\n       , {{ aidbox.path('onset,dateTime')}}::date onset \n       , {{ aidbox.path('abatement,dateTime')}}::date abatement\n       , {{ aidbox.path('recordedDate')}}::date recorded\n\n       , {{ aidbox.path('subject,id')}}::uuid patient_id\n       , {{ aidbox.path('encounter,id')}}::uuid encounter_id \n\n       , {{ aidbox.codesystem_code('code', 'SNOMED CT-INT')}} code_code\n       , {{ aidbox.codesystem_display('code', 'SNOMED CT-INT')}} code_display \n       , {{ aidbox.codesystem_code('category', 'condition-category')}} category_code\n       , {{ aidbox.codesystem_display('category', 'condition-category')}} category_display \n       , {{ aidbox.codesystem_code('clinicalStatus', 'condition-clinical')}} clinical_status\n       , {{ aidbox.codesystem_code('verificationStatus', 'condition-verstatus')}} verification_status\n\n  FROM {{ ref('aidbox', 'Condition') }}\n\n{% if is_incremental() %}\n WHERE ts > (select max(ts) from {{ this }})\n{% endif %}\n\n-- -------------------------------------------------------------------------------------------\n--  {                                                                                        +\n--      \"onset\": {                                                                           +\n--          \"dateTime\": \"2004-06-07T09:34:57+00:00\"                                          +\n--      },                                                                                   +\n--      \"abatement\": {                                                                       +\n--          \"dateTime\": \"2005-06-13T10:04:36+00:00\"                                          +\n--      },                                                                                   +\n--      \"recordedDate\": \"2004-06-07T09:34:57+00:00\",                                         +\n--  }", "language": "sql", "refs": [{"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "Condition", "package": "aidbox", "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.path", "macro.aidbox.codesystem_code", "macro.aidbox.codesystem_display", "macro.dbt.is_incremental"], "nodes": ["seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "model.aidbox.Condition"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/fact_condition.sql", "compiled": true, "compiled_code": "\n\nSELECT   id::uuid\n       , ts\n\n       , (\"resource\"#>>'{ onset,dateTime }')::date onset \n       , (\"resource\"#>>'{ abatement,dateTime }')::date abatement\n       , (\"resource\"#>>'{ recordedDate }')::date recorded\n\n       , (\"resource\"#>>'{ subject,id }')::uuid patient_id\n       , (\"resource\"#>>'{ encounter,id }')::uuid encounter_id \n\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'SNOMED CT-INT' limit 1), '\").code')::jsonpath))::text)) code_code\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'SNOMED CT-INT' limit 1), '\").display')::jsonpath))::text)) code_display \n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.category.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'condition-category' limit 1), '\").code')::jsonpath))::text)) category_code\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.category.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'condition-category' limit 1), '\").display')::jsonpath))::text)) category_display \n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.clinicalStatus.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'condition-clinical' limit 1), '\").code')::jsonpath))::text)) clinical_status\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.verificationStatus.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'condition-verstatus' limit 1), '\").code')::jsonpath))::text)) verification_status\n\n  FROM \"cdrdemo\".\"dbt_fhir\".\"Condition\"\n\n\n WHERE ts > (select max(ts) from \"cdrdemo\".\"dbt\".\"fact_condition\")\n\n\n-- -------------------------------------------------------------------------------------------\n--  {                                                                                        +\n--      \"onset\": {                                                                           +\n--          \"dateTime\": \"2004-06-07T09:34:57+00:00\"                                          +\n--      },                                                                                   +\n--      \"abatement\": {                                                                       +\n--          \"dateTime\": \"2005-06-13T10:04:36+00:00\"                                          +\n--      },                                                                                   +\n--      \"recordedDate\": \"2004-06-07T09:34:57+00:00\",                                         +\n--  }", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.fact_observable_period": {"database": "cdrdemo", "schema": "dbt", "name": "fact_observable_period", "resource_type": "model", "package_name": "AidboxProject", "path": "views/fact_observable_period.sql", "original_file_path": "models/views/fact_observable_period.sql", "unique_id": "model.AidboxProject.fact_observable_period", "fqn": ["AidboxProject", "views", "fact_observable_period"], "alias": "fact_observable_period", "checksum": {"name": "sha256", "checksum": "1405a30505d5c1eadd7da0454e0217dfe58fe4f6ef1239ca566026dc051316cd"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "unlogged": true}, "created_at": 1687530333.2628338, "relation_name": "\"cdrdemo\".\"dbt\".\"fact_observable_period\"", "raw_code": "WITH year_min AS (\n    select extract('YEAR' from (select min(birthDate) from {{ ref('dim_patient') }})::date) y\n), year_max AS ( \n    select extract('YEAR' from (select max(birthDate) from {{ ref('dim_patient') }})::date) y\n)\n  SELECT   to_date(y::text, 'YYYY') as year_date\n         , y as year\n    FROM generate_series((select y from year_min), (select y from year_max), 1) as y", "language": "sql", "refs": [{"name": "dim_patient", "package": null, "version": null}, {"name": "dim_patient", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": ["model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/fact_observable_period.sql", "compiled": true, "compiled_code": "WITH year_min AS (\n    select extract('YEAR' from (select min(birthDate) from \"cdrdemo\".\"dbt\".\"dim_patient\")::date) y\n), year_max AS ( \n    select extract('YEAR' from (select max(birthDate) from \"cdrdemo\".\"dbt\".\"dim_patient\")::date) y\n)\n  SELECT   to_date(y::text, 'YYYY') as year_date\n         , y as year\n    FROM generate_series((select y from year_min), (select y from year_max), 1) as y", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.fact_procedure": {"database": "cdrdemo", "schema": "dbt", "name": "fact_procedure", "resource_type": "model", "package_name": "AidboxProject", "path": "views/fact_procedure.sql", "original_file_path": "models/views/fact_procedure.sql", "unique_id": "model.AidboxProject.fact_procedure", "fqn": ["AidboxProject", "views", "fact_procedure"], "alias": "fact_procedure", "checksum": {"name": "sha256", "checksum": "c1efa272babc16d7290ecd27701a901af1d21e2cca529a6c189abd275232ebf3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}], "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unlogged": true, "unique_key": "id", "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}]}, "created_at": 1687530333.2646809, "relation_name": "\"cdrdemo\".\"dbt\".\"fact_procedure\"", "raw_code": "{{\n     config(\n          materialized='incremental',\n          unique_key='id',\n          indexes=[{'columns': ['id']},\n                   {'columns': ['ts']}]\n    )\n}}\n\nSELECT   id\n       , ts\n       , {{ aidbox.path('status')}} status\n       , {{ aidbox.path('subject,id')}} patient_id\n       , {{ aidbox.path('encounter,id')}} encounter_id \n       , {{ aidbox.path('performed,Period,start')}}::date start \n       , {{ aidbox.identifier_from_uri('location,uri')}} location_synthea_id\n       , {{ aidbox.codesystem_code('code', 'SNOMED CT-INT')}} type_code\n       , {{ aidbox.codesystem_display('code', 'SNOMED CT-INT')}} type_display\n       , {{ aidbox.path('performed,Period,end') }}::timestamp - {{ aidbox.path('performed,Period,start') }}::timestamp duration\n  FROM {{ ref('aidbox', 'Procedure') }}\n\n{% if is_incremental() -%}\n     WHERE ts > (select max(ts) from {{ this }})\n{%- endif %}", "language": "sql", "refs": [{"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "Procedure", "package": "aidbox", "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.path", "macro.aidbox.identifier_from_uri", "macro.aidbox.codesystem_code", "macro.aidbox.codesystem_display", "macro.dbt.is_incremental"], "nodes": ["seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "model.aidbox.Procedure"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/fact_procedure.sql", "compiled": true, "compiled_code": "\n\nSELECT   id\n       , ts\n       , (\"resource\"#>>'{ status }') status\n       , (\"resource\"#>>'{ subject,id }') patient_id\n       , (\"resource\"#>>'{ encounter,id }') encounter_id \n       , (\"resource\"#>>'{ performed,Period,start }')::date start \n       , (substring (\"resource\"#>>'{ location,uri }' FROM '.+\\|(.+)$')) location_synthea_id\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'SNOMED CT-INT' limit 1), '\").code')::jsonpath))::text)) type_code\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'SNOMED CT-INT' limit 1), '\").display')::jsonpath))::text)) type_display\n       , (\"resource\"#>>'{ performed,Period,end }')::timestamp - (\"resource\"#>>'{ performed,Period,start }')::timestamp duration\n  FROM \"cdrdemo\".\"dbt_fhir\".\"Procedure\"\n\nWHERE ts > (select max(ts) from \"cdrdemo\".\"dbt\".\"fact_procedure\")", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.fact_encounter": {"database": "cdrdemo", "schema": "dbt", "name": "fact_encounter", "resource_type": "model", "package_name": "AidboxProject", "path": "views/fact_encounter.sql", "original_file_path": "models/views/fact_encounter.sql", "unique_id": "model.AidboxProject.fact_encounter", "fqn": ["AidboxProject", "views", "fact_encounter"], "alias": "fact_encounter", "checksum": {"name": "sha256", "checksum": "4010ad849e9503b441baec441c8fab29735b3cc008b543139143363e288fbc6d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}], "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unlogged": true, "unique_key": "id", "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}]}, "created_at": 1687530333.2699149, "relation_name": "\"cdrdemo\".\"dbt\".\"fact_encounter\"", "raw_code": "{{\n     config(\n          materialized='incremental',\n          unique_key='id',\n          indexes=[ {'columns': ['id']},\n                    {'columns': ['ts']}]\n    )\n}}\n\nSELECT id\n       , ts\n       , {{ aidbox.path('status')}} status\n       , {{ aidbox.codesystem_code('type', 'SNOMED CT-INT')}} type_code\n       , {{ aidbox.codesystem_display('type', 'SNOMED CT-INT')}} type_display\n       , {{ aidbox.path('class,code') }} class\n       , {{ aidbox.path('period,start') }} start\n       , {{ aidbox.path('period,end') }} end\n       , {{ aidbox.path('subject,id')}} patient_id\n       , {{ aidbox.identifier('synthea') }} synthea_id\n       , {{ aidbox.path('period,end') }}::timestamp - {{ aidbox.path('period,start') }}::timestamp duration\n       , {{ aidbox.identifier_from_uri('location,0,location,uri')}} location_synthea_id\n       , {{ aidbox.identifier_from_uri('serviceProvider,uri')}} organization_synthea_id\n       , {{ aidbox.identifier_from_uri('participant,0,individual,uri')}} practitioner_npi\n  FROM {{ ref('aidbox', 'Encounter') }}\n\n{% if is_incremental() %}\n  WHERE ts > (select max(ts) from {{ this }})\n{% endif %}", "language": "sql", "refs": [{"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_identifiers", "package": null, "version": null}, {"name": "Encounter", "package": "aidbox", "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.path", "macro.aidbox.codesystem_code", "macro.aidbox.codesystem_display", "macro.aidbox.identifier", "macro.aidbox.identifier_from_uri", "macro.dbt.is_incremental"], "nodes": ["seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_identifiers", "model.aidbox.Encounter"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/fact_encounter.sql", "compiled": true, "compiled_code": "\n\nSELECT id\n       , ts\n       , (\"resource\"#>>'{ status }') status\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.type.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'SNOMED CT-INT' limit 1), '\").code')::jsonpath))::text)) type_code\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.type.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'SNOMED CT-INT' limit 1), '\").display')::jsonpath))::text)) type_display\n       , (\"resource\"#>>'{ class,code }') class\n       , (\"resource\"#>>'{ period,start }') start\n       , (\"resource\"#>>'{ period,end }') end\n       , (\"resource\"#>>'{ subject,id }') patient_id\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.identifier ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_identifiers\" WHERE alias = 'synthea' limit 1), '\").value')::jsonpath))::text)) synthea_id\n       , (\"resource\"#>>'{ period,end }')::timestamp - (\"resource\"#>>'{ period,start }')::timestamp duration\n       , (substring (\"resource\"#>>'{ location,0,location,uri }' FROM '.+\\|(.+)$')) location_synthea_id\n       , (substring (\"resource\"#>>'{ serviceProvider,uri }' FROM '.+\\|(.+)$')) organization_synthea_id\n       , (substring (\"resource\"#>>'{ participant,0,individual,uri }' FROM '.+\\|(.+)$')) practitioner_npi\n  FROM \"cdrdemo\".\"dbt_fhir\".\"Encounter\"\n\n\n  WHERE ts > (select max(ts) from \"cdrdemo\".\"dbt\".\"fact_encounter\")\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.dim_practitioner": {"database": "cdrdemo", "schema": "dbt", "name": "dim_practitioner", "resource_type": "model", "package_name": "AidboxProject", "path": "views/dim_practitioner.sql", "original_file_path": "models/views/dim_practitioner.sql", "unique_id": "model.AidboxProject.dim_practitioner", "fqn": ["AidboxProject", "views", "dim_practitioner"], "alias": "dim_practitioner", "checksum": {"name": "sha256", "checksum": "cc4c0b21eb0faa56bb3ee4ec0ac13c0377cf6bd6577ffff5bba18a04ee57d32b"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "table", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "table", "unlogged": true}, "created_at": 1687530333.2753248, "relation_name": "\"cdrdemo\".\"dbt\".\"dim_practitioner\"", "raw_code": "SELECT id\n       , {{ aidbox.identifier('npi')}} npi\n       , {{ aidbox.path('active') }} active\n       , {{ aidbox.path('gender') }} gender\n       , {{ aidbox.path('address,0,state') }} state\n       , {{ aidbox.path('address,0,country') }} country\n       , {{ aidbox.path('address,0,city') }} city\n  FROM {{ ref('aidbox', 'Practitioner') }}", "language": "sql", "refs": [{"name": "seed_identifiers", "package": null, "version": null}, {"name": "Practitioner", "package": "aidbox", "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.identifier", "macro.aidbox.path"], "nodes": ["seed.AidboxProject.seed_identifiers", "model.aidbox.Practitioner"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/dim_practitioner.sql", "compiled": true, "compiled_code": "SELECT id\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.identifier ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_identifiers\" WHERE alias = 'npi' limit 1), '\").value')::jsonpath))::text)) npi\n       , (\"resource\"#>>'{ active }') active\n       , (\"resource\"#>>'{ gender }') gender\n       , (\"resource\"#>>'{ address,0,state }') state\n       , (\"resource\"#>>'{ address,0,country }') country\n       , (\"resource\"#>>'{ address,0,city }') city\n  FROM \"cdrdemo\".\"dbt_fhir\".\"Practitioner\"", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.fact_allergyintolerance": {"database": "cdrdemo", "schema": "dbt", "name": "fact_allergyintolerance", "resource_type": "model", "package_name": "AidboxProject", "path": "views/fact_allergyintolerance.sql", "original_file_path": "models/views/fact_allergyintolerance.sql", "unique_id": "model.AidboxProject.fact_allergyintolerance", "fqn": ["AidboxProject", "views", "fact_allergyintolerance"], "alias": "fact_allergyintolerance", "checksum": {"name": "sha256", "checksum": "2e1adc027120cbec13ac9b5376176bffe1d24a50bf9892d9f7c2a9a7ad905ec2"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}], "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unlogged": true, "unique_key": "id", "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}]}, "created_at": 1687530333.278968, "relation_name": "\"cdrdemo\".\"dbt\".\"fact_allergyintolerance\"", "raw_code": "{{\n     config(\n          materialized='incremental',\n          unique_key='id',\n          indexes=[{'columns': ['id']},\n                   {'columns': ['ts']}]\n    )\n}}\n\nSELECT   id::uuid\n       , ts\n       , {{ aidbox.path('type')}} type\n       , {{ aidbox.path('criticality')}} criticality\n       , {{ aidbox.path('patient,id')}}::uuid patient_id\n       , {{ aidbox.path('recordedDate')}}::date recorded\n       , COALESCE({{ aidbox.codesystem_code('code', 'SNOMED CT-INT')}}, \n                  {{ aidbox.codesystem_code('code', 'rxnorm')}})  code_code\n       , COALESCE({{ aidbox.codesystem_display('code', 'SNOMED CT-INT')}}, \n                  {{ aidbox.codesystem_display('code', 'rxnorm')}})  code_display\n       , {{ aidbox.codesystem_code('clinicalStatus', 'allergyintolerance-clinical')}} clinical_status\n       , {{ aidbox.codesystem_code('verificationStatus', 'allergyintolerance-verstatus')}} verification_status\n\n  FROM {{ ref('aidbox', 'AllergyIntolerance') }}\n\n{% if is_incremental() %}\n WHERE ts > (select max(ts) from {{ this }})\n{% endif %}\n\n--  {                                                                                                +\n--      \"category\": [                                                                                +\n--          \"environment\"                                                                            +\n--      ],                                                                                           +\n\n--      \"reaction\": [                                                                                +\n--          {                                                                                        +\n--              \"manifestation\": [                                                                   +\n--                  {                                                                                +\n--                      \"text\": \"Allergic skin rash\",                                                +\n--                      \"coding\": [                                                                  +\n--                          {                                                                        +\n--                              \"code\": \"21626009\",                                                  +\n--                              \"system\": \"http://snomed.info/sct\",                                  +\n--                              \"display\": \"Allergic skin rash\"                                      +\n--                          }                                                                        +\n--                      ]                                                                            +\n--                  }                                                                                +\n--              ]                                                                                    +\n--          },                                                                                       +\n--          {                                                                                        +\n--              \"manifestation\": [                                                                   +\n--                  {                                                                                +\n--                      \"text\": \"Sneezing\",                                                          +\n--                      \"coding\": [                                                                  +\n--                          {                                                                        +\n--                              \"code\": \"76067001\",                                                  +\n--                              \"system\": \"http://snomed.info/sct\",                                  +\n--                              \"display\": \"Sneezing\"                                                +\n--                          }                                                                        +\n--                      ]                                                                            +\n--                  }                                                                                +\n--              ]                                                                                    +\n--          }                                                                                        +\n--      ],                                                                                           +\n--  }", "language": "sql", "refs": [{"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "AllergyIntolerance", "package": "aidbox", "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.path", "macro.aidbox.codesystem_code", "macro.aidbox.codesystem_display", "macro.dbt.is_incremental"], "nodes": ["seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "model.aidbox.AllergyIntolerance"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/fact_allergyintolerance.sql", "compiled": true, "compiled_code": "\n\nSELECT   id::uuid\n       , ts\n       , (\"resource\"#>>'{ type }') type\n       , (\"resource\"#>>'{ criticality }') criticality\n       , (\"resource\"#>>'{ patient,id }')::uuid patient_id\n       , (\"resource\"#>>'{ recordedDate }')::date recorded\n       , COALESCE((trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'SNOMED CT-INT' limit 1), '\").code')::jsonpath))::text)), \n                  (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'rxnorm' limit 1), '\").code')::jsonpath))::text)))  code_code\n       , COALESCE((trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'SNOMED CT-INT' limit 1), '\").display')::jsonpath))::text)), \n                  (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'rxnorm' limit 1), '\").display')::jsonpath))::text)))  code_display\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.clinicalStatus.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'allergyintolerance-clinical' limit 1), '\").code')::jsonpath))::text)) clinical_status\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.verificationStatus.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'allergyintolerance-verstatus' limit 1), '\").code')::jsonpath))::text)) verification_status\n\n  FROM \"cdrdemo\".\"dbt_fhir\".\"AllergyIntolerance\"\n\n\n WHERE ts > (select max(ts) from \"cdrdemo\".\"dbt\".\"fact_allergyintolerance\")\n\n\n--  {                                                                                                +\n--      \"category\": [                                                                                +\n--          \"environment\"                                                                            +\n--      ],                                                                                           +\n\n--      \"reaction\": [                                                                                +\n--          {                                                                                        +\n--              \"manifestation\": [                                                                   +\n--                  {                                                                                +\n--                      \"text\": \"Allergic skin rash\",                                                +\n--                      \"coding\": [                                                                  +\n--                          {                                                                        +\n--                              \"code\": \"21626009\",                                                  +\n--                              \"system\": \"http://snomed.info/sct\",                                  +\n--                              \"display\": \"Allergic skin rash\"                                      +\n--                          }                                                                        +\n--                      ]                                                                            +\n--                  }                                                                                +\n--              ]                                                                                    +\n--          },                                                                                       +\n--          {                                                                                        +\n--              \"manifestation\": [                                                                   +\n--                  {                                                                                +\n--                      \"text\": \"Sneezing\",                                                          +\n--                      \"coding\": [                                                                  +\n--                          {                                                                        +\n--                              \"code\": \"76067001\",                                                  +\n--                              \"system\": \"http://snomed.info/sct\",                                  +\n--                              \"display\": \"Sneezing\"                                                +\n--                          }                                                                        +\n--                      ]                                                                            +\n--                  }                                                                                +\n--              ]                                                                                    +\n--          }                                                                                        +\n--      ],                                                                                           +\n--  }", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.fact_observation_quantity": {"database": "cdrdemo", "schema": "dbt", "name": "fact_observation_quantity", "resource_type": "model", "package_name": "AidboxProject", "path": "views/fact_observation_quantity.sql", "original_file_path": "models/views/fact_observation_quantity.sql", "unique_id": "model.AidboxProject.fact_observation_quantity", "fqn": ["AidboxProject", "views", "fact_observation_quantity"], "alias": "fact_observation_quantity", "checksum": {"name": "sha256", "checksum": "822adb566752a666b3d38d4a99c18fa174ac585835ea8d4928800542886261b3"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}], "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unlogged": true, "unique_key": "id", "indexes": [{"columns": ["id"]}, {"columns": ["ts"]}]}, "created_at": 1687530333.2842371, "relation_name": "\"cdrdemo\".\"dbt\".\"fact_observation_quantity\"", "raw_code": "{{\n     config(\n          materialized='incremental',\n          unique_key='id',\n          indexes=[{'columns': ['id']},\n                   {'columns': ['ts']}]\n    )\n}}\n\nSELECT   id::uuid\n       , ts\n       , {{ aidbox.path('status')}} status\n       , {{ aidbox.path('issued')}}::timestamp issued\n       , {{ aidbox.path('effective,dateTime')}}::timestamp effective\n       , {{ aidbox.path('subject,id')}}::uuid patient_id\n       , {{ aidbox.path('encounter,id')}}::uuid encounter_id \n       , {{ aidbox.codesystem_code('code', 'loinc')}} code\n       , {{ aidbox.codesystem_display('code', 'loinc')}} code_display\n       , {{ aidbox.codesystem_code('category', 'observation-category')}} category\n       , {{ aidbox.path('value,Quantity,unit')}} unit\n       , {{ aidbox.path('value,Quantity,value')}} value \n  FROM {{ ref('aidbox','Observation') }}\n WHERE {{ aidbox.path('value,Quantity')}} is not null\n\n{% if is_incremental() %}\n   AND ts > (select max(ts) from {{ this }})\n{% endif %}\n\n-- TODO:\n--  + value.Quantity\n--  - value.CodeableConcept\n--  - component", "language": "sql", "refs": [{"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "Observation", "package": "aidbox", "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.path", "macro.aidbox.codesystem_code", "macro.aidbox.codesystem_display", "macro.dbt.is_incremental"], "nodes": ["seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "model.aidbox.Observation"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/fact_observation_quantity.sql", "compiled": true, "compiled_code": "\n\nSELECT   id::uuid\n       , ts\n       , (\"resource\"#>>'{ status }') status\n       , (\"resource\"#>>'{ issued }')::timestamp issued\n       , (\"resource\"#>>'{ effective,dateTime }')::timestamp effective\n       , (\"resource\"#>>'{ subject,id }')::uuid patient_id\n       , (\"resource\"#>>'{ encounter,id }')::uuid encounter_id \n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'loinc' limit 1), '\").code')::jsonpath))::text)) code\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.code.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'loinc' limit 1), '\").display')::jsonpath))::text)) code_display\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.category.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'observation-category' limit 1), '\").code')::jsonpath))::text)) category\n       , (\"resource\"#>>'{ value,Quantity,unit }') unit\n       , (\"resource\"#>>'{ value,Quantity,value }') value \n  FROM \"cdrdemo\".\"dbt_fhir\".\"Observation\"\n WHERE (\"resource\"#>>'{ value,Quantity }') is not null\n\n\n   AND ts > (select max(ts) from \"cdrdemo\".\"dbt\".\"fact_observation_quantity\")\n\n\n-- TODO:\n--  + value.Quantity\n--  - value.CodeableConcept\n--  - component", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.dim_patient": {"database": "cdrdemo", "schema": "dbt", "name": "dim_patient", "resource_type": "model", "package_name": "AidboxProject", "path": "views/dim_patient.sql", "original_file_path": "models/views/dim_patient.sql", "unique_id": "model.AidboxProject.dim_patient", "fqn": ["AidboxProject", "views", "dim_patient"], "alias": "dim_patient", "checksum": {"name": "sha256", "checksum": "09b4261bafe15eb467b426aa1ff385671950b1ea6f32277cb4f4206515317672"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "indexes": [{"columns": ["id", "ts"]}, {"columns": ["birthdate", "birth_year", "deceased", "deceased_year"]}, {"columns": ["birth_year", "deceased_year"]}, {"columns": ["state", "gender", "race", "birthdate", "ms_display", "language_display"]}], "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unlogged": true, "unique_key": "id", "indexes": [{"columns": ["id", "ts"]}, {"columns": ["birthdate", "birth_year", "deceased", "deceased_year"]}, {"columns": ["birth_year", "deceased_year"]}, {"columns": ["state", "gender", "race", "birthdate", "ms_display", "language_display"]}]}, "created_at": 1687530333.290003, "relation_name": "\"cdrdemo\".\"dbt\".\"dim_patient\"", "raw_code": "{{ \n     config(\n          materialized='incremental',\n          unique_key='id',\n          indexes=[{'columns': ['id', 'ts']},\n                   {'columns': ['birthdate', 'birth_year', 'deceased', 'deceased_year']},\n                   {'columns': ['birth_year', 'deceased_year']},\n                   {'columns': ['state', 'gender', 'race', 'birthdate', 'ms_display', 'language_display']} ])\n  }}\n\n  SELECT id\n         , ts\n         , {{ aidbox.age() }} age\n         , {{ aidbox.identifier('synthea') }} synthea_id\n         , {{ aidbox.identifier('ssn') }} ssn\n         , {{ aidbox.identifier('mrn') }} mrn\n         , {{ aidbox.gender() }} gender\n         , {{ aidbox.alive() }} alive\n         , {{ aidbox.race() }} race\n         , {{ aidbox.ethnicity() }} ethnicity\n         , {{ aidbox.extension('us-birthsex', 'valueCode') }} birthsex\n         , {{ aidbox.path('birthDate') }}::date birthdate\n         , extract('YEAR' from {{ aidbox.path('birthDate') }}::date) birth_year\n         , {{ aidbox.path('deceased,dateTime') }}::date deceased \n         , extract('YEAR' from {{ aidbox.path('deceased,dateTime') }}::date) deceased_year\n         , {{ aidbox.path('address,0,state') }} state \n         , {{ aidbox.codesystem_code('maritalStatus', 'MaritalStatus') }} ms_code\n         , {{ aidbox.codesystem_display('maritalStatus', 'MaritalStatus') }} ms_display\n         , {{ aidbox.codesystem_code('communication.language', 'language') }} language_code\n         , {{ aidbox.codesystem_display('communication.language', 'language') }} language_display\n    FROM {{ ref('aidbox', 'Patient') }} p\n\n{% if is_incremental() %}\n   WHERE ts > (select max(ts) from {{ this }})\n{% endif %}", "language": "sql", "refs": [{"name": "seed_identifiers", "package": null, "version": null}, {"name": "seed_identifiers", "package": null, "version": null}, {"name": "seed_identifiers", "package": null, "version": null}, {"name": "seed_extension", "package": null, "version": null}, {"name": "seed_extension", "package": null, "version": null}, {"name": "seed_extension", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "Patient", "package": "aidbox", "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.age", "macro.aidbox.identifier", "macro.aidbox.gender", "macro.aidbox.alive", "macro.aidbox.race", "macro.aidbox.ethnicity", "macro.aidbox.extension", "macro.aidbox.path", "macro.aidbox.codesystem_code", "macro.aidbox.codesystem_display", "macro.dbt.is_incremental"], "nodes": ["seed.AidboxProject.seed_identifiers", "seed.AidboxProject.seed_identifiers", "seed.AidboxProject.seed_identifiers", "seed.AidboxProject.seed_extension", "seed.AidboxProject.seed_extension", "seed.AidboxProject.seed_extension", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "model.aidbox.Patient"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/dim_patient.sql", "compiled": true, "compiled_code": "\n\n  SELECT id\n         , ts\n         , DATE_PART('year', AGE(date(\"resource\" #>>'{birthDate}'))) age\n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.identifier ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_identifiers\" WHERE alias = 'synthea' limit 1), '\").value')::jsonpath))::text)) synthea_id\n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.identifier ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_identifiers\" WHERE alias = 'ssn' limit 1), '\").value')::jsonpath))::text)) ssn\n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.identifier ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_identifiers\" WHERE alias = 'mrn' limit 1), '\").value')::jsonpath))::text)) mrn\n         , (\"resource\" #>>'{gender}' ) gender\n         , (COALESCE(((\"resource\"#>>'{deceased, dateTime}')::timestamp > NOW()),\n              (not((\"resource\"#>>'{deceased, boolean}')::boolean)),\n              true)) alive\n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.extension ? (@.url == \"', (SELECT url FROM \"cdrdemo\".\"dbt\".\"seed_extension\" WHERE alias = 'us-race' limit 1), '\").extension.valueString')::jsonpath))::TEXT)) race\n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.extension ? (@.url == \"', (SELECT url FROM \"cdrdemo\".\"dbt\".\"seed_extension\" WHERE alias = 'us-ethnicity' limit 1), '\").extension.valueString')::jsonpath))::TEXT)) ethnicity\n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.extension ? (@.url == \"', (SELECT url FROM \"cdrdemo\".\"dbt\".\"seed_extension\" WHERE alias = 'us-birthsex' limit 1), '\").valueCode')::jsonpath))::TEXT)) birthsex\n         , (\"resource\"#>>'{ birthDate }')::date birthdate\n         , extract('YEAR' from (\"resource\"#>>'{ birthDate }')::date) birth_year\n         , (\"resource\"#>>'{ deceased,dateTime }')::date deceased \n         , extract('YEAR' from (\"resource\"#>>'{ deceased,dateTime }')::date) deceased_year\n         , (\"resource\"#>>'{ address,0,state }') state \n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.maritalStatus.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'MaritalStatus' limit 1), '\").code')::jsonpath))::text)) ms_code\n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.maritalStatus.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'MaritalStatus' limit 1), '\").display')::jsonpath))::text)) ms_display\n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.communication.language.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'language' limit 1), '\").code')::jsonpath))::text)) language_code\n         , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.communication.language.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'language' limit 1), '\").display')::jsonpath))::text)) language_display\n    FROM \"cdrdemo\".\"dbt_fhir\".\"Patient\" p\n\n\n   WHERE ts > (select max(ts) from \"cdrdemo\".\"dbt\".\"dim_patient\")\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.AidboxProject.dim_organization": {"database": "cdrdemo", "schema": "dbt", "name": "dim_organization", "resource_type": "model", "package_name": "AidboxProject", "path": "views/dim_organization.sql", "original_file_path": "models/views/dim_organization.sql", "unique_id": "model.AidboxProject.dim_organization", "fqn": ["AidboxProject", "views", "dim_organization"], "alias": "dim_organization", "checksum": {"name": "sha256", "checksum": "51a15533dc4bdd38067cdfe5faeff35966fadc71bdadbacfa71afdfa253efbf6"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "incremental", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": "id", "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "unlogged": true, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "incremental", "unlogged": true, "unique_key": "id"}, "created_at": 1687530333.299744, "relation_name": "\"cdrdemo\".\"dbt\".\"dim_organization\"", "raw_code": "{{\n     config(\n          materialized='incremental',\n          unique_key='id'\n    )\n}}\n\nSELECT id\n       , ts\n       , {{ aidbox.path('name') }} name\n       , {{ aidbox.path('active') }} active\n       , {{ aidbox.path('address,0,city') }}  city\n       , {{ aidbox.path('address,0,state') }}  state\n       , {{ aidbox.path('address,0,country') }}  country\n       , {{ aidbox.identifier('synthea') }} synthea_id\n       , {{ aidbox.codesystem_code('type', 'organization-type')}} type_code\n       , {{ aidbox.codesystem_display('type', 'organization-type')}} type_display\n  FROM {{ ref('aidbox', 'Organization') }}\n\n{% if is_incremental() %}\n  where ts > (select max(ts) from {{ this }})\n{% endif %}", "language": "sql", "refs": [{"name": "seed_identifiers", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "seed_codesystems", "package": null, "version": null}, {"name": "Organization", "package": "aidbox", "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.path", "macro.aidbox.identifier", "macro.aidbox.codesystem_code", "macro.aidbox.codesystem_display", "macro.dbt.is_incremental"], "nodes": ["seed.AidboxProject.seed_identifiers", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "model.aidbox.Organization"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/dim_organization.sql", "compiled": true, "compiled_code": "\n\nSELECT id\n       , ts\n       , (\"resource\"#>>'{ name }') name\n       , (\"resource\"#>>'{ active }') active\n       , (\"resource\"#>>'{ address,0,city }')  city\n       , (\"resource\"#>>'{ address,0,state }')  state\n       , (\"resource\"#>>'{ address,0,country }')  country\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.identifier ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_identifiers\" WHERE alias = 'synthea' limit 1), '\").value')::jsonpath))::text)) synthea_id\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.type.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'organization-type' limit 1), '\").code')::jsonpath))::text)) type_code\n       , (trim('\"' FROM (jsonb_path_query_first(\"resource\", concat('$.type.coding ?(@.system==\"', (SELECT system FROM \"cdrdemo\".\"dbt\".\"seed_codesystems\" WHERE alias = 'organization-type' limit 1), '\").display')::jsonpath))::text)) type_display\n  FROM \"cdrdemo\".\"dbt_fhir\".\"Organization\"\n\n\n  where ts > (select max(ts) from \"cdrdemo\".\"dbt\".\"dim_organization\")\n", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "seed.AidboxProject.seed_identifiers": {"database": "cdrdemo", "schema": "dbt", "name": "seed_identifiers", "resource_type": "seed", "package_name": "AidboxProject", "path": "seed_identifiers.csv", "original_file_path": "seeds/seed_identifiers.csv", "unique_id": "seed.AidboxProject.seed_identifiers", "fqn": ["AidboxProject", "seed_identifiers"], "alias": "seed_identifiers", "checksum": {"name": "sha256", "checksum": "107165aa83bbca1b3114846295da8307de6474e870dc36ee680e9304c1bfa440"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.310487, "relation_name": "\"cdrdemo\".\"dbt\".\"seed_identifiers\"", "raw_code": "", "root_path": "/Users/aitem/Work/dbt-sample-project", "depends_on": {"macros": []}}, "seed.AidboxProject.seed_extension": {"database": "cdrdemo", "schema": "dbt", "name": "seed_extension", "resource_type": "seed", "package_name": "AidboxProject", "path": "seed_extension.csv", "original_file_path": "seeds/seed_extension.csv", "unique_id": "seed.AidboxProject.seed_extension", "fqn": ["AidboxProject", "seed_extension"], "alias": "seed_extension", "checksum": {"name": "sha256", "checksum": "6ab184e7d5914df074405a9a74dd4f74aaec0b18698343d22bb8310a6434801d"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.311852, "relation_name": "\"cdrdemo\".\"dbt\".\"seed_extension\"", "raw_code": "", "root_path": "/Users/aitem/Work/dbt-sample-project", "depends_on": {"macros": []}}, "seed.AidboxProject.seed_codesystems": {"database": "cdrdemo", "schema": "dbt", "name": "seed_codesystems", "resource_type": "seed", "package_name": "AidboxProject", "path": "seed_codesystems.csv", "original_file_path": "seeds/seed_codesystems.csv", "unique_id": "seed.AidboxProject.seed_codesystems", "fqn": ["AidboxProject", "seed_codesystems"], "alias": "seed_codesystems", "checksum": {"name": "sha256", "checksum": "d09bd9dbdf3d0753ee77755c4ef359fac41f05e895021b85ef9bd1d38cf3d963"}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "group": null, "materialized": "seed", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "quote_columns": null, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.313191, "relation_name": "\"cdrdemo\".\"dbt\".\"seed_codesystems\"", "raw_code": "", "root_path": "/Users/aitem/Work/dbt-sample-project", "depends_on": {"macros": []}}, "model.aidbox.MedicinalProductAuthorization": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProductAuthorization", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProductAuthorization.sql", "original_file_path": "models/FHIR/MedicinalProductAuthorization.sql", "unique_id": "model.aidbox.MedicinalProductAuthorization", "fqn": ["aidbox", "FHIR", "MedicinalProductAuthorization"], "alias": "MedicinalProductAuthorization", "checksum": {"name": "sha256", "checksum": "4ca0585d219fab4318aa54c6b4eef3a9d9a6f751b7cb02540a039802acbce8b7"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.321119, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProductAuthorization\"", "raw_code": "select * from MedicinalProductAuthorization", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProductAuthorization.sql", "compiled": true, "compiled_code": "select * from MedicinalProductAuthorization", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ChargeItem": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ChargeItem", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ChargeItem.sql", "original_file_path": "models/FHIR/ChargeItem.sql", "unique_id": "model.aidbox.ChargeItem", "fqn": ["aidbox", "FHIR", "ChargeItem"], "alias": "ChargeItem", "checksum": {"name": "sha256", "checksum": "c63262a7f79edcb246d9a0bc3f7f75878674397eaec8dd6c6fbb190287a0bc90"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.322934, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ChargeItem\"", "raw_code": "select * from ChargeItem", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ChargeItem.sql", "compiled": true, "compiled_code": "select * from ChargeItem", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.SubstanceNucleicAcid": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "SubstanceNucleicAcid", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/SubstanceNucleicAcid.sql", "original_file_path": "models/FHIR/SubstanceNucleicAcid.sql", "unique_id": "model.aidbox.SubstanceNucleicAcid", "fqn": ["aidbox", "FHIR", "SubstanceNucleicAcid"], "alias": "SubstanceNucleicAcid", "checksum": {"name": "sha256", "checksum": "592e64f86f94a90ccaf4b9cf1bd990c2eb3b5dd73ddc76773c924aa9db2a582a"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.324718, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"SubstanceNucleicAcid\"", "raw_code": "select * from SubstanceNucleicAcid", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/SubstanceNucleicAcid.sql", "compiled": true, "compiled_code": "select * from SubstanceNucleicAcid", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.FamilyMemberHistory": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "FamilyMemberHistory", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/FamilyMemberHistory.sql", "original_file_path": "models/FHIR/FamilyMemberHistory.sql", "unique_id": "model.aidbox.FamilyMemberHistory", "fqn": ["aidbox", "FHIR", "FamilyMemberHistory"], "alias": "FamilyMemberHistory", "checksum": {"name": "sha256", "checksum": "803d7858728fb9de2aaf3e97f64d7675a6f459d1acd88d9141ba402e0674cf12"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.326368, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"FamilyMemberHistory\"", "raw_code": "select * from FamilyMemberHistory", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/FamilyMemberHistory.sql", "compiled": true, "compiled_code": "select * from FamilyMemberHistory", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.AuditEvent": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "AuditEvent", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/AuditEvent.sql", "original_file_path": "models/FHIR/AuditEvent.sql", "unique_id": "model.aidbox.AuditEvent", "fqn": ["aidbox", "FHIR", "AuditEvent"], "alias": "AuditEvent", "checksum": {"name": "sha256", "checksum": "3e5a80f2fd20ba6ef6387785cb1877ea7c7fd4f0026b7e09422e36a7da63fae4"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.328019, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"AuditEvent\"", "raw_code": "select * from AuditEvent", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/AuditEvent.sql", "compiled": true, "compiled_code": "select * from AuditEvent", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.CoverageEligibilityRequest": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "CoverageEligibilityRequest", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/CoverageEligibilityRequest.sql", "original_file_path": "models/FHIR/CoverageEligibilityRequest.sql", "unique_id": "model.aidbox.CoverageEligibilityRequest", "fqn": ["aidbox", "FHIR", "CoverageEligibilityRequest"], "alias": "CoverageEligibilityRequest", "checksum": {"name": "sha256", "checksum": "e4e38e86124ddd8dd27d6b61e9cc574d86b0a397bbaa462dcf0de160f18be09f"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.329657, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"CoverageEligibilityRequest\"", "raw_code": "select * from CoverageEligibilityRequest", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/CoverageEligibilityRequest.sql", "compiled": true, "compiled_code": "select * from CoverageEligibilityRequest", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ClinicalImpression": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ClinicalImpression", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ClinicalImpression.sql", "original_file_path": "models/FHIR/ClinicalImpression.sql", "unique_id": "model.aidbox.ClinicalImpression", "fqn": ["aidbox", "FHIR", "ClinicalImpression"], "alias": "ClinicalImpression", "checksum": {"name": "sha256", "checksum": "0e2ce384e52d5c929c2b9200ae6ede4c09c326c61bd8e9271b2d217cc4392b43"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.33138, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ClinicalImpression\"", "raw_code": "select * from ClinicalImpression", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ClinicalImpression.sql", "compiled": true, "compiled_code": "select * from ClinicalImpression", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.SubstanceSourceMaterial": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "SubstanceSourceMaterial", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/SubstanceSourceMaterial.sql", "original_file_path": "models/FHIR/SubstanceSourceMaterial.sql", "unique_id": "model.aidbox.SubstanceSourceMaterial", "fqn": ["aidbox", "FHIR", "SubstanceSourceMaterial"], "alias": "SubstanceSourceMaterial", "checksum": {"name": "sha256", "checksum": "5fea1baf43e39dd91d39e6f4c745a6081b76fc593d042b34fdfd80b28df28954"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.333024, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"SubstanceSourceMaterial\"", "raw_code": "select * from SubstanceSourceMaterial", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/SubstanceSourceMaterial.sql", "compiled": true, "compiled_code": "select * from SubstanceSourceMaterial", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.AppointmentResponse": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "AppointmentResponse", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/AppointmentResponse.sql", "original_file_path": "models/FHIR/AppointmentResponse.sql", "unique_id": "model.aidbox.AppointmentResponse", "fqn": ["aidbox", "FHIR", "AppointmentResponse"], "alias": "AppointmentResponse", "checksum": {"name": "sha256", "checksum": "8e0227b076ec4e3fae602ed973815d7d05682c10724b536e16fdfd1301feba50"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.334652, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"AppointmentResponse\"", "raw_code": "select * from AppointmentResponse", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/AppointmentResponse.sql", "compiled": true, "compiled_code": "select * from AppointmentResponse", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Procedure": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Procedure", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Procedure.sql", "original_file_path": "models/FHIR/Procedure.sql", "unique_id": "model.aidbox.Procedure", "fqn": ["aidbox", "FHIR", "Procedure"], "alias": "Procedure", "checksum": {"name": "sha256", "checksum": "cecf0e91a2d05c0fd2ca5c4afac1f7bff61a692fabde12e362751c7b9eac935c"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"resource#>>'{performed,Period,end}'": {"name": "resource#>>'{performed,Period,end}'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resource#>>'{performed,Period,start}'": {"name": "resource#>>'{performed,Period,start}'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "AidboxProject://models/views/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5621278, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Procedure\"", "raw_code": "select * from Procedure", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Procedure.sql", "compiled": true, "compiled_code": "select * from Procedure", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.CatalogEntry": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "CatalogEntry", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/CatalogEntry.sql", "original_file_path": "models/FHIR/CatalogEntry.sql", "unique_id": "model.aidbox.CatalogEntry", "fqn": ["aidbox", "FHIR", "CatalogEntry"], "alias": "CatalogEntry", "checksum": {"name": "sha256", "checksum": "b0d77f8d43bb1157748b815cd5ea2306cec8062fd9710b480544f82cb3a1af34"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.338045, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"CatalogEntry\"", "raw_code": "select * from CatalogEntry", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/CatalogEntry.sql", "compiled": true, "compiled_code": "select * from CatalogEntry", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicinalProductIngredient": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProductIngredient", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProductIngredient.sql", "original_file_path": "models/FHIR/MedicinalProductIngredient.sql", "unique_id": "model.aidbox.MedicinalProductIngredient", "fqn": ["aidbox", "FHIR", "MedicinalProductIngredient"], "alias": "MedicinalProductIngredient", "checksum": {"name": "sha256", "checksum": "f046fd17f7c6cd3c3ba76f150264d934dd90b9cb15f29d2589a0f36a7c9e7e1e"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.3396428, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProductIngredient\"", "raw_code": "select * from MedicinalProductIngredient", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProductIngredient.sql", "compiled": true, "compiled_code": "select * from MedicinalProductIngredient", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.SupplyDelivery": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "SupplyDelivery", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/SupplyDelivery.sql", "original_file_path": "models/FHIR/SupplyDelivery.sql", "unique_id": "model.aidbox.SupplyDelivery", "fqn": ["aidbox", "FHIR", "SupplyDelivery"], "alias": "SupplyDelivery", "checksum": {"name": "sha256", "checksum": "8752b5406d3d4ed6f8e0918f625b3e2e940d9e9c87fbc33ec44f717d37b098e9"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.341419, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"SupplyDelivery\"", "raw_code": "select * from SupplyDelivery", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/SupplyDelivery.sql", "compiled": true, "compiled_code": "select * from SupplyDelivery", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicationStatement": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicationStatement", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicationStatement.sql", "original_file_path": "models/FHIR/MedicationStatement.sql", "unique_id": "model.aidbox.MedicationStatement", "fqn": ["aidbox", "FHIR", "MedicationStatement"], "alias": "MedicationStatement", "checksum": {"name": "sha256", "checksum": "5087cfea7889fd3b2fceb5dcdbd8b02773c783af4a2b0b2eb02c7c822d08da6c"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.343065, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicationStatement\"", "raw_code": "select * from MedicationStatement", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicationStatement.sql", "compiled": true, "compiled_code": "select * from MedicationStatement", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ConceptMap": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ConceptMap", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ConceptMap.sql", "original_file_path": "models/FHIR/ConceptMap.sql", "unique_id": "model.aidbox.ConceptMap", "fqn": ["aidbox", "FHIR", "ConceptMap"], "alias": "ConceptMap", "checksum": {"name": "sha256", "checksum": "9955043afec12194b7dab16e58217328063f9c3f9338e594bf1a969547034ff1"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.344695, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ConceptMap\"", "raw_code": "select * from ConceptMap", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ConceptMap.sql", "compiled": true, "compiled_code": "select * from ConceptMap", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ExampleScenario": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ExampleScenario", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ExampleScenario.sql", "original_file_path": "models/FHIR/ExampleScenario.sql", "unique_id": "model.aidbox.ExampleScenario", "fqn": ["aidbox", "FHIR", "ExampleScenario"], "alias": "ExampleScenario", "checksum": {"name": "sha256", "checksum": "e65b47ed45a8da25d4b3cc910266e58dd5aa9c8e2da83aec5ce60c6f35d814ec"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.34641, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ExampleScenario\"", "raw_code": "select * from ExampleScenario", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ExampleScenario.sql", "compiled": true, "compiled_code": "select * from ExampleScenario", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.EnrollmentRequest": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "EnrollmentRequest", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/EnrollmentRequest.sql", "original_file_path": "models/FHIR/EnrollmentRequest.sql", "unique_id": "model.aidbox.EnrollmentRequest", "fqn": ["aidbox", "FHIR", "EnrollmentRequest"], "alias": "EnrollmentRequest", "checksum": {"name": "sha256", "checksum": "604215ee8b4fd265fba6684fce2a98c514ec406dae59fdaa0481b643e5fce811"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.34802, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"EnrollmentRequest\"", "raw_code": "select * from EnrollmentRequest", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/EnrollmentRequest.sql", "compiled": true, "compiled_code": "select * from EnrollmentRequest", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Practitioner": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Practitioner", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Practitioner.sql", "original_file_path": "models/FHIR/Practitioner.sql", "unique_id": "model.aidbox.Practitioner", "fqn": ["aidbox", "FHIR", "Practitioner"], "alias": "Practitioner", "checksum": {"name": "sha256", "checksum": "0ee59a131a965aae84f1f90fc93516e8b98c28625956086485f5fd47a757fe12"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.349629, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Practitioner\"", "raw_code": "select * from Practitioner", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Practitioner.sql", "compiled": true, "compiled_code": "select * from Practitioner", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Invoice": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Invoice", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Invoice.sql", "original_file_path": "models/FHIR/Invoice.sql", "unique_id": "model.aidbox.Invoice", "fqn": ["aidbox", "FHIR", "Invoice"], "alias": "Invoice", "checksum": {"name": "sha256", "checksum": "eb04c3d3066c48168d9ecfc634a67aed28c572eec8b519081c82e74e0be1c60d"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.351346, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Invoice\"", "raw_code": "select * from Invoice", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Invoice.sql", "compiled": true, "compiled_code": "select * from Invoice", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Communication": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Communication", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Communication.sql", "original_file_path": "models/FHIR/Communication.sql", "unique_id": "model.aidbox.Communication", "fqn": ["aidbox", "FHIR", "Communication"], "alias": "Communication", "checksum": {"name": "sha256", "checksum": "ee4eecb159a4929b4f65f4f79bc9231680890e62c48f36dc192e9faa6c9d9d39"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.352961, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Communication\"", "raw_code": "select * from Communication", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Communication.sql", "compiled": true, "compiled_code": "select * from Communication", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.SubstanceProtein": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "SubstanceProtein", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/SubstanceProtein.sql", "original_file_path": "models/FHIR/SubstanceProtein.sql", "unique_id": "model.aidbox.SubstanceProtein", "fqn": ["aidbox", "FHIR", "SubstanceProtein"], "alias": "SubstanceProtein", "checksum": {"name": "sha256", "checksum": "156ee6b67fa7b18f06da45a6581f27081c87613d55413aa5a4f6490c8132de09"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.3545668, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"SubstanceProtein\"", "raw_code": "select * from SubstanceProtein", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/SubstanceProtein.sql", "compiled": true, "compiled_code": "select * from SubstanceProtein", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.DeviceDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "DeviceDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/DeviceDefinition.sql", "original_file_path": "models/FHIR/DeviceDefinition.sql", "unique_id": "model.aidbox.DeviceDefinition", "fqn": ["aidbox", "FHIR", "DeviceDefinition"], "alias": "DeviceDefinition", "checksum": {"name": "sha256", "checksum": "b4432eed8cbed75a21a493a06723d38718355bff9baef5c7e4a20b2d593dbb18"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.3561778, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"DeviceDefinition\"", "raw_code": "select * from DeviceDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/DeviceDefinition.sql", "compiled": true, "compiled_code": "select * from DeviceDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Encounter": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Encounter", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Encounter.sql", "original_file_path": "models/FHIR/Encounter.sql", "unique_id": "model.aidbox.Encounter", "fqn": ["aidbox", "FHIR", "Encounter"], "alias": "Encounter", "checksum": {"name": "sha256", "checksum": "d39b0ddab7208e9061449773e8b19556e4fbbb1de3fa0f538d742b2709b954da"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"resource#>>'{period,start}'": {"name": "resource#>>'{period,start}'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resource#>>'{period,end}'": {"name": "resource#>>'{period,end}'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "AidboxProject://models/views/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.561604, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Encounter\"", "raw_code": "select * from Encounter", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Encounter.sql", "compiled": true, "compiled_code": "select * from Encounter", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ImmunizationEvaluation": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ImmunizationEvaluation", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ImmunizationEvaluation.sql", "original_file_path": "models/FHIR/ImmunizationEvaluation.sql", "unique_id": "model.aidbox.ImmunizationEvaluation", "fqn": ["aidbox", "FHIR", "ImmunizationEvaluation"], "alias": "ImmunizationEvaluation", "checksum": {"name": "sha256", "checksum": "892c4d527d340a7c657ef5024e6cbd0d18ace8b044062ea1dda7ecfa19244389"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.359489, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ImmunizationEvaluation\"", "raw_code": "select * from ImmunizationEvaluation", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ImmunizationEvaluation.sql", "compiled": true, "compiled_code": "select * from ImmunizationEvaluation", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Consent": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Consent", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Consent.sql", "original_file_path": "models/FHIR/Consent.sql", "unique_id": "model.aidbox.Consent", "fqn": ["aidbox", "FHIR", "Consent"], "alias": "Consent", "checksum": {"name": "sha256", "checksum": "04b79e1d06003bf6b994c28d6fa39f2924908fcd6dba852b9ef0e8b6437f574e"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.361086, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Consent\"", "raw_code": "select * from Consent", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Consent.sql", "compiled": true, "compiled_code": "select * from Consent", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.EpisodeOfCare": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "EpisodeOfCare", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/EpisodeOfCare.sql", "original_file_path": "models/FHIR/EpisodeOfCare.sql", "unique_id": "model.aidbox.EpisodeOfCare", "fqn": ["aidbox", "FHIR", "EpisodeOfCare"], "alias": "EpisodeOfCare", "checksum": {"name": "sha256", "checksum": "ab268cb1e51b502ac5ae63b5251bedbb22686c3dc4172018bc2b9dc4f7088d6c"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.363311, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"EpisodeOfCare\"", "raw_code": "select * from EpisodeOfCare", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/EpisodeOfCare.sql", "compiled": true, "compiled_code": "select * from EpisodeOfCare", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.CommunicationRequest": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "CommunicationRequest", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/CommunicationRequest.sql", "original_file_path": "models/FHIR/CommunicationRequest.sql", "unique_id": "model.aidbox.CommunicationRequest", "fqn": ["aidbox", "FHIR", "CommunicationRequest"], "alias": "CommunicationRequest", "checksum": {"name": "sha256", "checksum": "ede81b1f96b5d927fb37c0ef51ca86ac3cfc160e62c02df7fc6e48fa61000d31"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.3649511, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"CommunicationRequest\"", "raw_code": "select * from CommunicationRequest", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/CommunicationRequest.sql", "compiled": true, "compiled_code": "select * from CommunicationRequest", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Schedule": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Schedule", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Schedule.sql", "original_file_path": "models/FHIR/Schedule.sql", "unique_id": "model.aidbox.Schedule", "fqn": ["aidbox", "FHIR", "Schedule"], "alias": "Schedule", "checksum": {"name": "sha256", "checksum": "3d6412d86fd29e09636b1f50fab5a70f4ffbd8f1b99a3528b5fe25338988de73"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.36658, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Schedule\"", "raw_code": "select * from Schedule", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Schedule.sql", "compiled": true, "compiled_code": "select * from Schedule", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.OrganizationAffiliation": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "OrganizationAffiliation", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/OrganizationAffiliation.sql", "original_file_path": "models/FHIR/OrganizationAffiliation.sql", "unique_id": "model.aidbox.OrganizationAffiliation", "fqn": ["aidbox", "FHIR", "OrganizationAffiliation"], "alias": "OrganizationAffiliation", "checksum": {"name": "sha256", "checksum": "485e6c54c0b25fb252970559f2123b34026e0b3fada610ef05f26b28c34324c9"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.368188, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"OrganizationAffiliation\"", "raw_code": "select * from OrganizationAffiliation", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/OrganizationAffiliation.sql", "compiled": true, "compiled_code": "select * from OrganizationAffiliation", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.SubstanceSpecification": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "SubstanceSpecification", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/SubstanceSpecification.sql", "original_file_path": "models/FHIR/SubstanceSpecification.sql", "unique_id": "model.aidbox.SubstanceSpecification", "fqn": ["aidbox", "FHIR", "SubstanceSpecification"], "alias": "SubstanceSpecification", "checksum": {"name": "sha256", "checksum": "568bf95486bfe7b91ddb63b5e02825fd07403faa6a85a784db0ac4e73c571f58"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.369924, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"SubstanceSpecification\"", "raw_code": "select * from SubstanceSpecification", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/SubstanceSpecification.sql", "compiled": true, "compiled_code": "select * from SubstanceSpecification", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Location": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Location", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Location.sql", "original_file_path": "models/FHIR/Location.sql", "unique_id": "model.aidbox.Location", "fqn": ["aidbox", "FHIR", "Location"], "alias": "Location", "checksum": {"name": "sha256", "checksum": "a99c6ab42de0a95f9301a4ec0816a2da4103f028f01778beb9c8ea84a6e937be"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.371545, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Location\"", "raw_code": "select * from Location", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Location.sql", "compiled": true, "compiled_code": "select * from Location", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.NutritionOrder": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "NutritionOrder", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/NutritionOrder.sql", "original_file_path": "models/FHIR/NutritionOrder.sql", "unique_id": "model.aidbox.NutritionOrder", "fqn": ["aidbox", "FHIR", "NutritionOrder"], "alias": "NutritionOrder", "checksum": {"name": "sha256", "checksum": "478341b8989be625738a01b6d6af10c70ef09785478503771dcde2c060fc0013"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.373159, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"NutritionOrder\"", "raw_code": "select * from NutritionOrder", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/NutritionOrder.sql", "compiled": true, "compiled_code": "select * from NutritionOrder", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Device": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Device", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Device.sql", "original_file_path": "models/FHIR/Device.sql", "unique_id": "model.aidbox.Device", "fqn": ["aidbox", "FHIR", "Device"], "alias": "Device", "checksum": {"name": "sha256", "checksum": "bf1fbb0c87201f1e4fa494a842298bcbecfa265370c3e02336f38bb0d7d8b396"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.374896, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Device\"", "raw_code": "select * from Device", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Device.sql", "compiled": true, "compiled_code": "select * from Device", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.PaymentNotice": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "PaymentNotice", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/PaymentNotice.sql", "original_file_path": "models/FHIR/PaymentNotice.sql", "unique_id": "model.aidbox.PaymentNotice", "fqn": ["aidbox", "FHIR", "PaymentNotice"], "alias": "PaymentNotice", "checksum": {"name": "sha256", "checksum": "1983b58bef19da8a46058bf16b7e1e210c01f606f4a11b65cddebe8be05bb650"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.37651, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"PaymentNotice\"", "raw_code": "select * from PaymentNotice", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/PaymentNotice.sql", "compiled": true, "compiled_code": "select * from PaymentNotice", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Endpoint": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Endpoint", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Endpoint.sql", "original_file_path": "models/FHIR/Endpoint.sql", "unique_id": "model.aidbox.Endpoint", "fqn": ["aidbox", "FHIR", "Endpoint"], "alias": "Endpoint", "checksum": {"name": "sha256", "checksum": "88df97c4761c191e243af3d42b50e02a5b6d96c1fb7821c4b6f76a66b52af35d"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.378121, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Endpoint\"", "raw_code": "select * from Endpoint", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Endpoint.sql", "compiled": true, "compiled_code": "select * from Endpoint", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.EffectEvidenceSynthesis": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "EffectEvidenceSynthesis", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/EffectEvidenceSynthesis.sql", "original_file_path": "models/FHIR/EffectEvidenceSynthesis.sql", "unique_id": "model.aidbox.EffectEvidenceSynthesis", "fqn": ["aidbox", "FHIR", "EffectEvidenceSynthesis"], "alias": "EffectEvidenceSynthesis", "checksum": {"name": "sha256", "checksum": "9f0854044a7921a1114e93785342e3f338f88802f0e0de8b96784036b5406756"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.379712, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"EffectEvidenceSynthesis\"", "raw_code": "select * from EffectEvidenceSynthesis", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/EffectEvidenceSynthesis.sql", "compiled": true, "compiled_code": "select * from EffectEvidenceSynthesis", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Composition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Composition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Composition.sql", "original_file_path": "models/FHIR/Composition.sql", "unique_id": "model.aidbox.Composition", "fqn": ["aidbox", "FHIR", "Composition"], "alias": "Composition", "checksum": {"name": "sha256", "checksum": "75b3f5f78d27ba499b62a015658f8b74c389da79ffedb35c5d56631452625d08"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.381435, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Composition\"", "raw_code": "select * from Composition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Composition.sql", "compiled": true, "compiled_code": "select * from Composition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Evidence": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Evidence", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Evidence.sql", "original_file_path": "models/FHIR/Evidence.sql", "unique_id": "model.aidbox.Evidence", "fqn": ["aidbox", "FHIR", "Evidence"], "alias": "Evidence", "checksum": {"name": "sha256", "checksum": "175c7ed958a4e9dc42288643b99f4ab323f4c6579a11c0ff786dd340af8572e5"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.3830478, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Evidence\"", "raw_code": "select * from Evidence", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Evidence.sql", "compiled": true, "compiled_code": "select * from Evidence", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.DeviceMetric": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "DeviceMetric", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/DeviceMetric.sql", "original_file_path": "models/FHIR/DeviceMetric.sql", "unique_id": "model.aidbox.DeviceMetric", "fqn": ["aidbox", "FHIR", "DeviceMetric"], "alias": "DeviceMetric", "checksum": {"name": "sha256", "checksum": "4b211e3c5c1685ec10093057b23cb53ad329930b1b249d4336658e609af24f9a"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.384634, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"DeviceMetric\"", "raw_code": "select * from DeviceMetric", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/DeviceMetric.sql", "compiled": true, "compiled_code": "select * from DeviceMetric", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.CodeSystem": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "CodeSystem", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/CodeSystem.sql", "original_file_path": "models/FHIR/CodeSystem.sql", "unique_id": "model.aidbox.CodeSystem", "fqn": ["aidbox", "FHIR", "CodeSystem"], "alias": "CodeSystem", "checksum": {"name": "sha256", "checksum": "93d4400b3d315b30b8c21fac21c1d58f8b664504f381ddf633e383652c047900"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.386357, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"CodeSystem\"", "raw_code": "select * from CodeSystem", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/CodeSystem.sql", "compiled": true, "compiled_code": "select * from CodeSystem", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Provenance": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Provenance", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Provenance.sql", "original_file_path": "models/FHIR/Provenance.sql", "unique_id": "model.aidbox.Provenance", "fqn": ["aidbox", "FHIR", "Provenance"], "alias": "Provenance", "checksum": {"name": "sha256", "checksum": "553a0e1a22492526d1f8667bb36548921f2f19057dcd180fff481364453cf618"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.387978, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Provenance\"", "raw_code": "select * from Provenance", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Provenance.sql", "compiled": true, "compiled_code": "select * from Provenance", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Coverage": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Coverage", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Coverage.sql", "original_file_path": "models/FHIR/Coverage.sql", "unique_id": "model.aidbox.Coverage", "fqn": ["aidbox", "FHIR", "Coverage"], "alias": "Coverage", "checksum": {"name": "sha256", "checksum": "397f74082e668d2f73b78b07e29a4729b961bd03be8e4d70c73ab2ae68125588"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.389577, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Coverage\"", "raw_code": "select * from Coverage", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Coverage.sql", "compiled": true, "compiled_code": "select * from Coverage", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.NamingSystem": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "NamingSystem", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/NamingSystem.sql", "original_file_path": "models/FHIR/NamingSystem.sql", "unique_id": "model.aidbox.NamingSystem", "fqn": ["aidbox", "FHIR", "NamingSystem"], "alias": "NamingSystem", "checksum": {"name": "sha256", "checksum": "d7e5950792463847f9c4e1ec3bf80f1a1683dcd5e4b51d34dace43253acd9104"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.3912919, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"NamingSystem\"", "raw_code": "select * from NamingSystem", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/NamingSystem.sql", "compiled": true, "compiled_code": "select * from NamingSystem", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.PractitionerRole": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "PractitionerRole", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/PractitionerRole.sql", "original_file_path": "models/FHIR/PractitionerRole.sql", "unique_id": "model.aidbox.PractitionerRole", "fqn": ["aidbox", "FHIR", "PractitionerRole"], "alias": "PractitionerRole", "checksum": {"name": "sha256", "checksum": "9b41040e1b840f3daa5ba661894391c0bcc47fabf9ca7b1cee36d09f999c29ce"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.392912, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"PractitionerRole\"", "raw_code": "select * from PractitionerRole", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/PractitionerRole.sql", "compiled": true, "compiled_code": "select * from PractitionerRole", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Patient": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Patient", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Patient.sql", "original_file_path": "models/FHIR/Patient.sql", "unique_id": "model.aidbox.Patient", "fqn": ["aidbox", "FHIR", "Patient"], "alias": "Patient", "checksum": {"name": "sha256", "checksum": "d716f936d6c001e4f3e9791dc67f2f5e80a12df0db23b633b8d6b8d5b6de8031"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "AidboxProject://models/views/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.559978, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Patient\"", "raw_code": "select * from Patient", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Patient.sql", "compiled": true, "compiled_code": "select * from Patient", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Measure": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Measure", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Measure.sql", "original_file_path": "models/FHIR/Measure.sql", "unique_id": "model.aidbox.Measure", "fqn": ["aidbox", "FHIR", "Measure"], "alias": "Measure", "checksum": {"name": "sha256", "checksum": "0038299f4712194b7e966f83d27a50eb81bd885b7f75042b36bb8a80552fddbb"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.396205, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Measure\"", "raw_code": "select * from Measure", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Measure.sql", "compiled": true, "compiled_code": "select * from Measure", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ImagingStudy": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ImagingStudy", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ImagingStudy.sql", "original_file_path": "models/FHIR/ImagingStudy.sql", "unique_id": "model.aidbox.ImagingStudy", "fqn": ["aidbox", "FHIR", "ImagingStudy"], "alias": "ImagingStudy", "checksum": {"name": "sha256", "checksum": "4883df62a16e293c5eec0319e719636e4cb53c3f0f45d1af7fd149e521200838"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.398199, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ImagingStudy\"", "raw_code": "select * from ImagingStudy", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ImagingStudy.sql", "compiled": true, "compiled_code": "select * from ImagingStudy", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Substance": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Substance", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Substance.sql", "original_file_path": "models/FHIR/Substance.sql", "unique_id": "model.aidbox.Substance", "fqn": ["aidbox", "FHIR", "Substance"], "alias": "Substance", "checksum": {"name": "sha256", "checksum": "b7d5a627c64ab32020c9ff6b1946b862a30edbfee23bbc90ce84243169db591b"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.399969, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Substance\"", "raw_code": "select * from Substance", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Substance.sql", "compiled": true, "compiled_code": "select * from Substance", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MolecularSequence": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MolecularSequence", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MolecularSequence.sql", "original_file_path": "models/FHIR/MolecularSequence.sql", "unique_id": "model.aidbox.MolecularSequence", "fqn": ["aidbox", "FHIR", "MolecularSequence"], "alias": "MolecularSequence", "checksum": {"name": "sha256", "checksum": "6fe1316b7418db38ca47685207d39f314a36ed11295c18dde4b972e924d731dd"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.401622, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MolecularSequence\"", "raw_code": "select * from MolecularSequence", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MolecularSequence.sql", "compiled": true, "compiled_code": "select * from MolecularSequence", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Media": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Media", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Media.sql", "original_file_path": "models/FHIR/Media.sql", "unique_id": "model.aidbox.Media", "fqn": ["aidbox", "FHIR", "Media"], "alias": "Media", "checksum": {"name": "sha256", "checksum": "3383e25bf5778d88f31e43199a77956f250a4135fc72ebb6dd45ef10ad2d5557"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.403391, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Media\"", "raw_code": "select * from Media", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Media.sql", "compiled": true, "compiled_code": "select * from Media", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Parameters": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Parameters", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Parameters.sql", "original_file_path": "models/FHIR/Parameters.sql", "unique_id": "model.aidbox.Parameters", "fqn": ["aidbox", "FHIR", "Parameters"], "alias": "Parameters", "checksum": {"name": "sha256", "checksum": "eb5b318662a06446860e01ef4595baf802335a58f5e9af91dbac5abe9d527806"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.405041, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Parameters\"", "raw_code": "select * from Parameters", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Parameters.sql", "compiled": true, "compiled_code": "select * from Parameters", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Condition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Condition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Condition.sql", "original_file_path": "models/FHIR/Condition.sql", "unique_id": "model.aidbox.Condition", "fqn": ["aidbox", "FHIR", "Condition"], "alias": "Condition", "checksum": {"name": "sha256", "checksum": "3d6d7674eb359d2f148acb4ee6ceeb13c57d32a7c549e5fca81b9229353ffa74"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"resource#>>'{onset,dateTime}'": {"name": "resource#>>'{onset,dateTime}'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resource#>>'{abatement,dateTime}'": {"name": "resource#>>'{abatement,dateTime}'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resource#>>'{recordedDate}'": {"name": "resource#>>'{recordedDate}'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "AidboxProject://models/views/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.562855, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Condition\"", "raw_code": "select * from Condition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Condition.sql", "compiled": true, "compiled_code": "select * from Condition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.CarePlan": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "CarePlan", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/CarePlan.sql", "original_file_path": "models/FHIR/CarePlan.sql", "unique_id": "model.aidbox.CarePlan", "fqn": ["aidbox", "FHIR", "CarePlan"], "alias": "CarePlan", "checksum": {"name": "sha256", "checksum": "6a86648e9edf3fa1e14018a0f06f7059cbba66eeeb812fa6e0b5604d6c568723"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.408653, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"CarePlan\"", "raw_code": "select * from CarePlan", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/CarePlan.sql", "compiled": true, "compiled_code": "select * from CarePlan", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Medication": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Medication", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Medication.sql", "original_file_path": "models/FHIR/Medication.sql", "unique_id": "model.aidbox.Medication", "fqn": ["aidbox", "FHIR", "Medication"], "alias": "Medication", "checksum": {"name": "sha256", "checksum": "9af7ed7e2f8e7332f5175674ea299a78853249d7f0588b7ccbd4ff7c948484d3"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4107652, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Medication\"", "raw_code": "select * from Medication", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Medication.sql", "compiled": true, "compiled_code": "select * from Medication", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicinalProductInteraction": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProductInteraction", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProductInteraction.sql", "original_file_path": "models/FHIR/MedicinalProductInteraction.sql", "unique_id": "model.aidbox.MedicinalProductInteraction", "fqn": ["aidbox", "FHIR", "MedicinalProductInteraction"], "alias": "MedicinalProductInteraction", "checksum": {"name": "sha256", "checksum": "8227d7af6e65e72455dbe03b21a71e4411aee0b87ef3489800a70a503d5293b2"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.412457, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProductInteraction\"", "raw_code": "select * from MedicinalProductInteraction", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProductInteraction.sql", "compiled": true, "compiled_code": "select * from MedicinalProductInteraction", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ClaimResponse": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ClaimResponse", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ClaimResponse.sql", "original_file_path": "models/FHIR/ClaimResponse.sql", "unique_id": "model.aidbox.ClaimResponse", "fqn": ["aidbox", "FHIR", "ClaimResponse"], "alias": "ClaimResponse", "checksum": {"name": "sha256", "checksum": "5752f60dada75c3ec22ff8b9e0473ba12ce9378c092a700153f67203524573b5"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4141178, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ClaimResponse\"", "raw_code": "select * from ClaimResponse", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ClaimResponse.sql", "compiled": true, "compiled_code": "select * from ClaimResponse", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.CoverageEligibilityResponse": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "CoverageEligibilityResponse", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/CoverageEligibilityResponse.sql", "original_file_path": "models/FHIR/CoverageEligibilityResponse.sql", "unique_id": "model.aidbox.CoverageEligibilityResponse", "fqn": ["aidbox", "FHIR", "CoverageEligibilityResponse"], "alias": "CoverageEligibilityResponse", "checksum": {"name": "sha256", "checksum": "94c526ef4d779eead77bdd85637ef0d405a113507e7c4fac2d6354ba1b297734"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.415874, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"CoverageEligibilityResponse\"", "raw_code": "select * from CoverageEligibilityResponse", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/CoverageEligibilityResponse.sql", "compiled": true, "compiled_code": "select * from CoverageEligibilityResponse", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ActivityDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ActivityDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ActivityDefinition.sql", "original_file_path": "models/FHIR/ActivityDefinition.sql", "unique_id": "model.aidbox.ActivityDefinition", "fqn": ["aidbox", "FHIR", "ActivityDefinition"], "alias": "ActivityDefinition", "checksum": {"name": "sha256", "checksum": "025c4655cdabf211959981ea4d6a5a5f6203fd74ff088230026fda71bc1f26f7"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.417509, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ActivityDefinition\"", "raw_code": "select * from ActivityDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ActivityDefinition.sql", "compiled": true, "compiled_code": "select * from ActivityDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Contract": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Contract", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Contract.sql", "original_file_path": "models/FHIR/Contract.sql", "unique_id": "model.aidbox.Contract", "fqn": ["aidbox", "FHIR", "Contract"], "alias": "Contract", "checksum": {"name": "sha256", "checksum": "338a900acae28f07d7c7398ca877372a1dd8558927685d5807c9b5b5ae6a3fab"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.419358, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Contract\"", "raw_code": "select * from Contract", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Contract.sql", "compiled": true, "compiled_code": "select * from Contract", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.EnrollmentResponse": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "EnrollmentResponse", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/EnrollmentResponse.sql", "original_file_path": "models/FHIR/EnrollmentResponse.sql", "unique_id": "model.aidbox.EnrollmentResponse", "fqn": ["aidbox", "FHIR", "EnrollmentResponse"], "alias": "EnrollmentResponse", "checksum": {"name": "sha256", "checksum": "e8d1199d2a7c4c09c3e33da8154f2a4c1cce9e1aba4e7ecb97a68831b6d4c568"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.421397, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"EnrollmentResponse\"", "raw_code": "select * from EnrollmentResponse", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/EnrollmentResponse.sql", "compiled": true, "compiled_code": "select * from EnrollmentResponse", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.DiagnosticReport": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "DiagnosticReport", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/DiagnosticReport.sql", "original_file_path": "models/FHIR/DiagnosticReport.sql", "unique_id": "model.aidbox.DiagnosticReport", "fqn": ["aidbox", "FHIR", "DiagnosticReport"], "alias": "DiagnosticReport", "checksum": {"name": "sha256", "checksum": "eae49cbfd08509bed7f0b6dd4bef8fe5885278855820f62d8350037c206bb4db"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.423083, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"DiagnosticReport\"", "raw_code": "select * from DiagnosticReport", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/DiagnosticReport.sql", "compiled": true, "compiled_code": "select * from DiagnosticReport", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.RequestGroup": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "RequestGroup", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/RequestGroup.sql", "original_file_path": "models/FHIR/RequestGroup.sql", "unique_id": "model.aidbox.RequestGroup", "fqn": ["aidbox", "FHIR", "RequestGroup"], "alias": "RequestGroup", "checksum": {"name": "sha256", "checksum": "1622c9e9c8aea2515407bec0b8f214bd912f91404b7d29039503fbed18525c6a"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.424763, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"RequestGroup\"", "raw_code": "select * from RequestGroup", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/RequestGroup.sql", "compiled": true, "compiled_code": "select * from RequestGroup", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.PlanDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "PlanDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/PlanDefinition.sql", "original_file_path": "models/FHIR/PlanDefinition.sql", "unique_id": "model.aidbox.PlanDefinition", "fqn": ["aidbox", "FHIR", "PlanDefinition"], "alias": "PlanDefinition", "checksum": {"name": "sha256", "checksum": "b0e8d6246cdbdb845034c316c3ab4a2596f44121665144f5cee51aec671514fb"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.426411, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"PlanDefinition\"", "raw_code": "select * from PlanDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/PlanDefinition.sql", "compiled": true, "compiled_code": "select * from PlanDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ImmunizationRecommendation": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ImmunizationRecommendation", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ImmunizationRecommendation.sql", "original_file_path": "models/FHIR/ImmunizationRecommendation.sql", "unique_id": "model.aidbox.ImmunizationRecommendation", "fqn": ["aidbox", "FHIR", "ImmunizationRecommendation"], "alias": "ImmunizationRecommendation", "checksum": {"name": "sha256", "checksum": "d502400db68fe07b3ae65c7f0b788bc5d820995919162fb1aad13f25782ffc7d"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.428169, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ImmunizationRecommendation\"", "raw_code": "select * from ImmunizationRecommendation", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ImmunizationRecommendation.sql", "compiled": true, "compiled_code": "select * from ImmunizationRecommendation", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Basic": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Basic", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Basic.sql", "original_file_path": "models/FHIR/Basic.sql", "unique_id": "model.aidbox.Basic", "fqn": ["aidbox", "FHIR", "Basic"], "alias": "Basic", "checksum": {"name": "sha256", "checksum": "b34c5802b22731f4a05eea66d38635e17c6628fa7f3c946776e4c9f3f94de9f6"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.429785, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Basic\"", "raw_code": "select * from Basic", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Basic.sql", "compiled": true, "compiled_code": "select * from Basic", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Specimen": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Specimen", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Specimen.sql", "original_file_path": "models/FHIR/Specimen.sql", "unique_id": "model.aidbox.Specimen", "fqn": ["aidbox", "FHIR", "Specimen"], "alias": "Specimen", "checksum": {"name": "sha256", "checksum": "057a0b33acbe0af2da1e1a9bd06c5f11e008855b9efc8e21ee01b422a158dfa4"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.431401, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Specimen\"", "raw_code": "select * from Specimen", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Specimen.sql", "compiled": true, "compiled_code": "select * from Specimen", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.SubstancePolymer": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "SubstancePolymer", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/SubstancePolymer.sql", "original_file_path": "models/FHIR/SubstancePolymer.sql", "unique_id": "model.aidbox.SubstancePolymer", "fqn": ["aidbox", "FHIR", "SubstancePolymer"], "alias": "SubstancePolymer", "checksum": {"name": "sha256", "checksum": "db737e2ef836794e8a65818dc280aee2d097ed1e659ecd21f0c0719f13407497"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4334972, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"SubstancePolymer\"", "raw_code": "select * from SubstancePolymer", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/SubstancePolymer.sql", "compiled": true, "compiled_code": "select * from SubstancePolymer", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.GuidanceResponse": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "GuidanceResponse", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/GuidanceResponse.sql", "original_file_path": "models/FHIR/GuidanceResponse.sql", "unique_id": "model.aidbox.GuidanceResponse", "fqn": ["aidbox", "FHIR", "GuidanceResponse"], "alias": "GuidanceResponse", "checksum": {"name": "sha256", "checksum": "b9fdc2220c33cd6c18d1fa18a4a8cf79439a13038df2f3e376a8c8fb8894da8f"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4351308, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"GuidanceResponse\"", "raw_code": "select * from GuidanceResponse", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/GuidanceResponse.sql", "compiled": true, "compiled_code": "select * from GuidanceResponse", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Linkage": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Linkage", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Linkage.sql", "original_file_path": "models/FHIR/Linkage.sql", "unique_id": "model.aidbox.Linkage", "fqn": ["aidbox", "FHIR", "Linkage"], "alias": "Linkage", "checksum": {"name": "sha256", "checksum": "89dde9144ee0d2cb34934533562c720b181595cb5900904ae0f08613baf700c5"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4367309, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Linkage\"", "raw_code": "select * from Linkage", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Linkage.sql", "compiled": true, "compiled_code": "select * from Linkage", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicinalProductIndication": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProductIndication", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProductIndication.sql", "original_file_path": "models/FHIR/MedicinalProductIndication.sql", "unique_id": "model.aidbox.MedicinalProductIndication", "fqn": ["aidbox", "FHIR", "MedicinalProductIndication"], "alias": "MedicinalProductIndication", "checksum": {"name": "sha256", "checksum": "e82d04bb0c66940030983bc1f3df2fb8b368b8450d6a8a929de89edaded92d9f"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.438331, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProductIndication\"", "raw_code": "select * from MedicinalProductIndication", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProductIndication.sql", "compiled": true, "compiled_code": "select * from MedicinalProductIndication", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Organization": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Organization", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Organization.sql", "original_file_path": "models/FHIR/Organization.sql", "unique_id": "model.aidbox.Organization", "fqn": ["aidbox", "FHIR", "Organization"], "alias": "Organization", "checksum": {"name": "sha256", "checksum": "cc26ff3f2257969902626d254162ed8c38fe08670d107d0743dd083070fa5e80"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.440053, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Organization\"", "raw_code": "select * from Organization", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Organization.sql", "compiled": true, "compiled_code": "select * from Organization", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ResearchSubject": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ResearchSubject", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ResearchSubject.sql", "original_file_path": "models/FHIR/ResearchSubject.sql", "unique_id": "model.aidbox.ResearchSubject", "fqn": ["aidbox", "FHIR", "ResearchSubject"], "alias": "ResearchSubject", "checksum": {"name": "sha256", "checksum": "c663b863f58e01d67e3254953a9415ad93e34b7d3d62f04c1858ee06f39c87d0"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.441656, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ResearchSubject\"", "raw_code": "select * from ResearchSubject", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ResearchSubject.sql", "compiled": true, "compiled_code": "select * from ResearchSubject", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.VisionPrescription": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "VisionPrescription", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/VisionPrescription.sql", "original_file_path": "models/FHIR/VisionPrescription.sql", "unique_id": "model.aidbox.VisionPrescription", "fqn": ["aidbox", "FHIR", "VisionPrescription"], "alias": "VisionPrescription", "checksum": {"name": "sha256", "checksum": "ec74fc7c9529b67a3303d2af679e3dd1b4e0c3bebcab964ac35814bfe1b307c4"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.443267, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"VisionPrescription\"", "raw_code": "select * from VisionPrescription", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/VisionPrescription.sql", "compiled": true, "compiled_code": "select * from VisionPrescription", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.DeviceRequest": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "DeviceRequest", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/DeviceRequest.sql", "original_file_path": "models/FHIR/DeviceRequest.sql", "unique_id": "model.aidbox.DeviceRequest", "fqn": ["aidbox", "FHIR", "DeviceRequest"], "alias": "DeviceRequest", "checksum": {"name": "sha256", "checksum": "6ca74e6b20139b2557b12d293ee8628509e23f11e1523f3679c3413e9f45b499"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.444984, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"DeviceRequest\"", "raw_code": "select * from DeviceRequest", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/DeviceRequest.sql", "compiled": true, "compiled_code": "select * from DeviceRequest", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.AdverseEvent": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "AdverseEvent", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/AdverseEvent.sql", "original_file_path": "models/FHIR/AdverseEvent.sql", "unique_id": "model.aidbox.AdverseEvent", "fqn": ["aidbox", "FHIR", "AdverseEvent"], "alias": "AdverseEvent", "checksum": {"name": "sha256", "checksum": "f5d5eb85e99661d029adcb26599081ad316742e17463861b928f9288b690f7be"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.446582, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"AdverseEvent\"", "raw_code": "select * from AdverseEvent", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/AdverseEvent.sql", "compiled": true, "compiled_code": "select * from AdverseEvent", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.DetectedIssue": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "DetectedIssue", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/DetectedIssue.sql", "original_file_path": "models/FHIR/DetectedIssue.sql", "unique_id": "model.aidbox.DetectedIssue", "fqn": ["aidbox", "FHIR", "DetectedIssue"], "alias": "DetectedIssue", "checksum": {"name": "sha256", "checksum": "745ea059d2b8b740a6871bf6c8f3eab50aa05b96f0eff38c8cb31a2c63ead63a"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4481761, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"DetectedIssue\"", "raw_code": "select * from DetectedIssue", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/DetectedIssue.sql", "compiled": true, "compiled_code": "select * from DetectedIssue", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.DocumentReference": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "DocumentReference", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/DocumentReference.sql", "original_file_path": "models/FHIR/DocumentReference.sql", "unique_id": "model.aidbox.DocumentReference", "fqn": ["aidbox", "FHIR", "DocumentReference"], "alias": "DocumentReference", "checksum": {"name": "sha256", "checksum": "381098ad770f387f160d4af429d02cd533fc3f75aeb6a54f3f634b2f2617c813"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.449902, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"DocumentReference\"", "raw_code": "select * from DocumentReference", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/DocumentReference.sql", "compiled": true, "compiled_code": "select * from DocumentReference", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicinalProductUndesirableEffect": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProductUndesirableEffect", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProductUndesirableEffect.sql", "original_file_path": "models/FHIR/MedicinalProductUndesirableEffect.sql", "unique_id": "model.aidbox.MedicinalProductUndesirableEffect", "fqn": ["aidbox", "FHIR", "MedicinalProductUndesirableEffect"], "alias": "MedicinalProductUndesirableEffect", "checksum": {"name": "sha256", "checksum": "a9fc214229f23d260b1e5eba5f1dfd35a16e3b51e4910f63441079113bf46391"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.451497, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProductUndesirableEffect\"", "raw_code": "select * from MedicinalProductUndesirableEffect", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProductUndesirableEffect.sql", "compiled": true, "compiled_code": "select * from MedicinalProductUndesirableEffect", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ValueSet": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ValueSet", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ValueSet.sql", "original_file_path": "models/FHIR/ValueSet.sql", "unique_id": "model.aidbox.ValueSet", "fqn": ["aidbox", "FHIR", "ValueSet"], "alias": "ValueSet", "checksum": {"name": "sha256", "checksum": "9bb6e2ecb3ee0c2886e1471a8fd9e108d6c58e67a436d906a12a08976832b3d3"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.453104, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ValueSet\"", "raw_code": "select * from ValueSet", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ValueSet.sql", "compiled": true, "compiled_code": "select * from ValueSet", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicinalProduct": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProduct", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProduct.sql", "original_file_path": "models/FHIR/MedicinalProduct.sql", "unique_id": "model.aidbox.MedicinalProduct", "fqn": ["aidbox", "FHIR", "MedicinalProduct"], "alias": "MedicinalProduct", "checksum": {"name": "sha256", "checksum": "27d666dd0de0fc544eeeeb3b1612912756c506b8f452953b7a4cdb02b3352260"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.454685, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProduct\"", "raw_code": "select * from MedicinalProduct", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProduct.sql", "compiled": true, "compiled_code": "select * from MedicinalProduct", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Observation": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Observation", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Observation.sql", "original_file_path": "models/FHIR/Observation.sql", "unique_id": "model.aidbox.Observation", "fqn": ["aidbox", "FHIR", "Observation"], "alias": "Observation", "checksum": {"name": "sha256", "checksum": "70f3f830bfed2846d6478b6b7d69c3122946ab490a5240fdeaad743263cb09d8"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {"resource#>>'{ issued }'": {"name": "resource#>>'{ issued }'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resource#>>'{ effective,dateTime }'": {"name": "resource#>>'{ effective,dateTime }'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "id": {"name": "id", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resource#>>'{ subject,id }'": {"name": "resource#>>'{ subject,id }'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}, "resource#>>'{ encounter,id }'": {"name": "resource#>>'{ encounter,id }'", "description": "", "meta": {}, "data_type": null, "constraints": [], "quote": null, "tags": []}}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": "AidboxProject://models/views/schema.yml", "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.561043, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Observation\"", "raw_code": "select * from Observation", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Observation.sql", "compiled": true, "compiled_code": "select * from Observation", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.SpecimenDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "SpecimenDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/SpecimenDefinition.sql", "original_file_path": "models/FHIR/SpecimenDefinition.sql", "unique_id": "model.aidbox.SpecimenDefinition", "fqn": ["aidbox", "FHIR", "SpecimenDefinition"], "alias": "SpecimenDefinition", "checksum": {"name": "sha256", "checksum": "ecdaf16be487e44a369ceccb437f36b64e29adadab30a7c7b13ce313481062e3"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.457986, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"SpecimenDefinition\"", "raw_code": "select * from SpecimenDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/SpecimenDefinition.sql", "compiled": true, "compiled_code": "select * from SpecimenDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Flag": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Flag", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Flag.sql", "original_file_path": "models/FHIR/Flag.sql", "unique_id": "model.aidbox.Flag", "fqn": ["aidbox", "FHIR", "Flag"], "alias": "Flag", "checksum": {"name": "sha256", "checksum": "3aa792deb435d39891c71854260c446b51eaca63d1ba23cf09355e40e8654d6d"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.459572, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Flag\"", "raw_code": "select * from Flag", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Flag.sql", "compiled": true, "compiled_code": "select * from Flag", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ChargeItemDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ChargeItemDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ChargeItemDefinition.sql", "original_file_path": "models/FHIR/ChargeItemDefinition.sql", "unique_id": "model.aidbox.ChargeItemDefinition", "fqn": ["aidbox", "FHIR", "ChargeItemDefinition"], "alias": "ChargeItemDefinition", "checksum": {"name": "sha256", "checksum": "fae65f31790b3fd620c6eeda144ecb3d7368b8192ede25e60fa08c02009f79f6"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.461293, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ChargeItemDefinition\"", "raw_code": "select * from ChargeItemDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ChargeItemDefinition.sql", "compiled": true, "compiled_code": "select * from ChargeItemDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.RelatedPerson": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "RelatedPerson", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/RelatedPerson.sql", "original_file_path": "models/FHIR/RelatedPerson.sql", "unique_id": "model.aidbox.RelatedPerson", "fqn": ["aidbox", "FHIR", "RelatedPerson"], "alias": "RelatedPerson", "checksum": {"name": "sha256", "checksum": "2dfd9d233039382cfc324f8fde13859d84f0c04f1a72cb647095bf136b3b7a19"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.462881, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"RelatedPerson\"", "raw_code": "select * from RelatedPerson", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/RelatedPerson.sql", "compiled": true, "compiled_code": "select * from RelatedPerson", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Goal": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Goal", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Goal.sql", "original_file_path": "models/FHIR/Goal.sql", "unique_id": "model.aidbox.Goal", "fqn": ["aidbox", "FHIR", "Goal"], "alias": "Goal", "checksum": {"name": "sha256", "checksum": "300644fa957546ae803f9449824704caeeb60302b3fc620a195d3dcd0fc318f3"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.464458, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Goal\"", "raw_code": "select * from Goal", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Goal.sql", "compiled": true, "compiled_code": "select * from Goal", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Immunization": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Immunization", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Immunization.sql", "original_file_path": "models/FHIR/Immunization.sql", "unique_id": "model.aidbox.Immunization", "fqn": ["aidbox", "FHIR", "Immunization"], "alias": "Immunization", "checksum": {"name": "sha256", "checksum": "456a10dec537989aec812609ebda1f9f929c3f7cd6da0739f0441d0a18c654d9"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.466028, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Immunization\"", "raw_code": "select * from Immunization", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Immunization.sql", "compiled": true, "compiled_code": "select * from Immunization", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.BodyStructure": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "BodyStructure", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/BodyStructure.sql", "original_file_path": "models/FHIR/BodyStructure.sql", "unique_id": "model.aidbox.BodyStructure", "fqn": ["aidbox", "FHIR", "BodyStructure"], "alias": "BodyStructure", "checksum": {"name": "sha256", "checksum": "da36e466f7d5fcfa23614b3c7334b6b122cb99fa60f58260ecd5bc9a4937408c"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.467724, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"BodyStructure\"", "raw_code": "select * from BodyStructure", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/BodyStructure.sql", "compiled": true, "compiled_code": "select * from BodyStructure", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MessageDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MessageDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MessageDefinition.sql", "original_file_path": "models/FHIR/MessageDefinition.sql", "unique_id": "model.aidbox.MessageDefinition", "fqn": ["aidbox", "FHIR", "MessageDefinition"], "alias": "MessageDefinition", "checksum": {"name": "sha256", "checksum": "669cd11b5ccd92e2c2ea70ada79b9151d30d2b68e734e29b2d3dd27587821707"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4693272, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MessageDefinition\"", "raw_code": "select * from MessageDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MessageDefinition.sql", "compiled": true, "compiled_code": "select * from MessageDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ResearchDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ResearchDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ResearchDefinition.sql", "original_file_path": "models/FHIR/ResearchDefinition.sql", "unique_id": "model.aidbox.ResearchDefinition", "fqn": ["aidbox", "FHIR", "ResearchDefinition"], "alias": "ResearchDefinition", "checksum": {"name": "sha256", "checksum": "9caf9fff1ead842de58a54bc1b8d2d7fdb729907560d6cc18ce718b62fc13b25"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.470911, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ResearchDefinition\"", "raw_code": "select * from ResearchDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ResearchDefinition.sql", "compiled": true, "compiled_code": "select * from ResearchDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MeasureReport": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MeasureReport", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MeasureReport.sql", "original_file_path": "models/FHIR/MeasureReport.sql", "unique_id": "model.aidbox.MeasureReport", "fqn": ["aidbox", "FHIR", "MeasureReport"], "alias": "MeasureReport", "checksum": {"name": "sha256", "checksum": "1c8bac8b36e1385e7dc6327469b1f531e352504edcd7232c140a0afea6dee249"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4726121, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MeasureReport\"", "raw_code": "select * from MeasureReport", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MeasureReport.sql", "compiled": true, "compiled_code": "select * from MeasureReport", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicinalProductManufactured": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProductManufactured", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProductManufactured.sql", "original_file_path": "models/FHIR/MedicinalProductManufactured.sql", "unique_id": "model.aidbox.MedicinalProductManufactured", "fqn": ["aidbox", "FHIR", "MedicinalProductManufactured"], "alias": "MedicinalProductManufactured", "checksum": {"name": "sha256", "checksum": "c4c8ed71b67c90e337705c194aceb6d61f3199d941ed27dfff7c68dedee9cf53"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4742, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProductManufactured\"", "raw_code": "select * from MedicinalProductManufactured", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProductManufactured.sql", "compiled": true, "compiled_code": "select * from MedicinalProductManufactured", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ServiceRequest": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ServiceRequest", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ServiceRequest.sql", "original_file_path": "models/FHIR/ServiceRequest.sql", "unique_id": "model.aidbox.ServiceRequest", "fqn": ["aidbox", "FHIR", "ServiceRequest"], "alias": "ServiceRequest", "checksum": {"name": "sha256", "checksum": "4d51cdb3b47814976842f772bb66538df0b2214b39ed75d02d6426cab6c30971"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4757912, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ServiceRequest\"", "raw_code": "select * from ServiceRequest", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ServiceRequest.sql", "compiled": true, "compiled_code": "select * from ServiceRequest", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ResearchElementDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ResearchElementDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ResearchElementDefinition.sql", "original_file_path": "models/FHIR/ResearchElementDefinition.sql", "unique_id": "model.aidbox.ResearchElementDefinition", "fqn": ["aidbox", "FHIR", "ResearchElementDefinition"], "alias": "ResearchElementDefinition", "checksum": {"name": "sha256", "checksum": "8edac91b4f0309eabc0d48a4d605d68a296a4633d36489ad36aab4b3262a43df"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.477497, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ResearchElementDefinition\"", "raw_code": "select * from ResearchElementDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ResearchElementDefinition.sql", "compiled": true, "compiled_code": "select * from ResearchElementDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicationKnowledge": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicationKnowledge", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicationKnowledge.sql", "original_file_path": "models/FHIR/MedicationKnowledge.sql", "unique_id": "model.aidbox.MedicationKnowledge", "fqn": ["aidbox", "FHIR", "MedicationKnowledge"], "alias": "MedicationKnowledge", "checksum": {"name": "sha256", "checksum": "3e64a7c92109c6a185b1527670de62b632c7df1a57b7674b4cea15e8639c9d68"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.479109, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicationKnowledge\"", "raw_code": "select * from MedicationKnowledge", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicationKnowledge.sql", "compiled": true, "compiled_code": "select * from MedicationKnowledge", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.AllergyIntolerance": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "AllergyIntolerance", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/AllergyIntolerance.sql", "original_file_path": "models/FHIR/AllergyIntolerance.sql", "unique_id": "model.aidbox.AllergyIntolerance", "fqn": ["aidbox", "FHIR", "AllergyIntolerance"], "alias": "AllergyIntolerance", "checksum": {"name": "sha256", "checksum": "29da9637beaa433b44752be04f232ae78f31cec6e49020bf9b84911dffb7bab9"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.480711, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"AllergyIntolerance\"", "raw_code": "select * from AllergyIntolerance", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/AllergyIntolerance.sql", "compiled": true, "compiled_code": "select * from AllergyIntolerance", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.CompartmentDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "CompartmentDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/CompartmentDefinition.sql", "original_file_path": "models/FHIR/CompartmentDefinition.sql", "unique_id": "model.aidbox.CompartmentDefinition", "fqn": ["aidbox", "FHIR", "CompartmentDefinition"], "alias": "CompartmentDefinition", "checksum": {"name": "sha256", "checksum": "2e5e146f16abf33bf22464ca0b89fcfd5486b50c1d1971e8a5c29ba2e3fb3ad5"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4822998, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"CompartmentDefinition\"", "raw_code": "select * from CompartmentDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/CompartmentDefinition.sql", "compiled": true, "compiled_code": "select * from CompartmentDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Questionnaire": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Questionnaire", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Questionnaire.sql", "original_file_path": "models/FHIR/Questionnaire.sql", "unique_id": "model.aidbox.Questionnaire", "fqn": ["aidbox", "FHIR", "Questionnaire"], "alias": "Questionnaire", "checksum": {"name": "sha256", "checksum": "be049cc6c59fe5319e6f856e422911481e8b695890fb614a61259dcc5ab787de"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4840078, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Questionnaire\"", "raw_code": "select * from Questionnaire", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Questionnaire.sql", "compiled": true, "compiled_code": "select * from Questionnaire", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ImplementationGuide": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ImplementationGuide", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ImplementationGuide.sql", "original_file_path": "models/FHIR/ImplementationGuide.sql", "unique_id": "model.aidbox.ImplementationGuide", "fqn": ["aidbox", "FHIR", "ImplementationGuide"], "alias": "ImplementationGuide", "checksum": {"name": "sha256", "checksum": "5059584c849459c0f4710630ba270d8dabdbdb72f0cda46c58e764963b427de2"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.485597, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ImplementationGuide\"", "raw_code": "select * from ImplementationGuide", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ImplementationGuide.sql", "compiled": true, "compiled_code": "select * from ImplementationGuide", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.StructureMap": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "StructureMap", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/StructureMap.sql", "original_file_path": "models/FHIR/StructureMap.sql", "unique_id": "model.aidbox.StructureMap", "fqn": ["aidbox", "FHIR", "StructureMap"], "alias": "StructureMap", "checksum": {"name": "sha256", "checksum": "f014df42d2e65339ac0661bf063124c65c9802083f328b4df4d92e49d8f6c490"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.487186, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"StructureMap\"", "raw_code": "select * from StructureMap", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/StructureMap.sql", "compiled": true, "compiled_code": "select * from StructureMap", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ResearchStudy": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ResearchStudy", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ResearchStudy.sql", "original_file_path": "models/FHIR/ResearchStudy.sql", "unique_id": "model.aidbox.ResearchStudy", "fqn": ["aidbox", "FHIR", "ResearchStudy"], "alias": "ResearchStudy", "checksum": {"name": "sha256", "checksum": "cf719fb47de76b05171a6ca45d0b832e9732314fc3a7d4dd3f0d4944aa7754df"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4889169, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ResearchStudy\"", "raw_code": "select * from ResearchStudy", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ResearchStudy.sql", "compiled": true, "compiled_code": "select * from ResearchStudy", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.CareTeam": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "CareTeam", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/CareTeam.sql", "original_file_path": "models/FHIR/CareTeam.sql", "unique_id": "model.aidbox.CareTeam", "fqn": ["aidbox", "FHIR", "CareTeam"], "alias": "CareTeam", "checksum": {"name": "sha256", "checksum": "4f0a8b68948545638e8ca5e5724e156d1225c2dc4a9f5a3b9cbd318781e89a9c"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.490516, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"CareTeam\"", "raw_code": "select * from CareTeam", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/CareTeam.sql", "compiled": true, "compiled_code": "select * from CareTeam", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Appointment": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Appointment", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Appointment.sql", "original_file_path": "models/FHIR/Appointment.sql", "unique_id": "model.aidbox.Appointment", "fqn": ["aidbox", "FHIR", "Appointment"], "alias": "Appointment", "checksum": {"name": "sha256", "checksum": "29bfc969f9568e107a5b720eb1f6ee80e3e8f66292c89c8d78ff73f75e6c99ea"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.492119, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Appointment\"", "raw_code": "select * from Appointment", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Appointment.sql", "compiled": true, "compiled_code": "select * from Appointment", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.InsurancePlan": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "InsurancePlan", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/InsurancePlan.sql", "original_file_path": "models/FHIR/InsurancePlan.sql", "unique_id": "model.aidbox.InsurancePlan", "fqn": ["aidbox", "FHIR", "InsurancePlan"], "alias": "InsurancePlan", "checksum": {"name": "sha256", "checksum": "57676e1e5a05114bcc573b16c7e07b11b4ad63517ddda6117bbd4db5429b4cb3"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.493729, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"InsurancePlan\"", "raw_code": "select * from InsurancePlan", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/InsurancePlan.sql", "compiled": true, "compiled_code": "select * from InsurancePlan", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.VerificationResult": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "VerificationResult", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/VerificationResult.sql", "original_file_path": "models/FHIR/VerificationResult.sql", "unique_id": "model.aidbox.VerificationResult", "fqn": ["aidbox", "FHIR", "VerificationResult"], "alias": "VerificationResult", "checksum": {"name": "sha256", "checksum": "eb1475923f5662b096bedb5ac899542dda6f13d5087df03297e546bccb8ad582"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.495442, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"VerificationResult\"", "raw_code": "select * from VerificationResult", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/VerificationResult.sql", "compiled": true, "compiled_code": "select * from VerificationResult", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.SubstanceReferenceInformation": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "SubstanceReferenceInformation", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/SubstanceReferenceInformation.sql", "original_file_path": "models/FHIR/SubstanceReferenceInformation.sql", "unique_id": "model.aidbox.SubstanceReferenceInformation", "fqn": ["aidbox", "FHIR", "SubstanceReferenceInformation"], "alias": "SubstanceReferenceInformation", "checksum": {"name": "sha256", "checksum": "2e187ef5bc72f125490193d2c2662afa8d6e00c4fb45a78696b01884ae46b706"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4970272, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"SubstanceReferenceInformation\"", "raw_code": "select * from SubstanceReferenceInformation", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/SubstanceReferenceInformation.sql", "compiled": true, "compiled_code": "select * from SubstanceReferenceInformation", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.RiskEvidenceSynthesis": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "RiskEvidenceSynthesis", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/RiskEvidenceSynthesis.sql", "original_file_path": "models/FHIR/RiskEvidenceSynthesis.sql", "unique_id": "model.aidbox.RiskEvidenceSynthesis", "fqn": ["aidbox", "FHIR", "RiskEvidenceSynthesis"], "alias": "RiskEvidenceSynthesis", "checksum": {"name": "sha256", "checksum": "ee299cd31aac9183bb0f338b4e021bd683f09b441257fecc8507ed2f71663baf"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.4986172, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"RiskEvidenceSynthesis\"", "raw_code": "select * from RiskEvidenceSynthesis", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/RiskEvidenceSynthesis.sql", "compiled": true, "compiled_code": "select * from RiskEvidenceSynthesis", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Claim": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Claim", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Claim.sql", "original_file_path": "models/FHIR/Claim.sql", "unique_id": "model.aidbox.Claim", "fqn": ["aidbox", "FHIR", "Claim"], "alias": "Claim", "checksum": {"name": "sha256", "checksum": "dc71016047ddd29c82bed37823777f877a4a34107fe5c1475d96b9ce5792c414"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.500512, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Claim\"", "raw_code": "select * from Claim", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Claim.sql", "compiled": true, "compiled_code": "select * from Claim", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.EvidenceVariable": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "EvidenceVariable", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/EvidenceVariable.sql", "original_file_path": "models/FHIR/EvidenceVariable.sql", "unique_id": "model.aidbox.EvidenceVariable", "fqn": ["aidbox", "FHIR", "EvidenceVariable"], "alias": "EvidenceVariable", "checksum": {"name": "sha256", "checksum": "18217ac4cc9dedbba17815586c9c700198ce89efe085ff21acf9c33244b10daf"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5021088, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"EvidenceVariable\"", "raw_code": "select * from EvidenceVariable", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/EvidenceVariable.sql", "compiled": true, "compiled_code": "select * from EvidenceVariable", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.EventDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "EventDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/EventDefinition.sql", "original_file_path": "models/FHIR/EventDefinition.sql", "unique_id": "model.aidbox.EventDefinition", "fqn": ["aidbox", "FHIR", "EventDefinition"], "alias": "EventDefinition", "checksum": {"name": "sha256", "checksum": "f999d4189891c9cb61a7e99c01af0bb09c8f1af5503341eeff7b3de9e4b06f1c"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.503932, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"EventDefinition\"", "raw_code": "select * from EventDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/EventDefinition.sql", "compiled": true, "compiled_code": "select * from EventDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.OperationDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "OperationDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/OperationDefinition.sql", "original_file_path": "models/FHIR/OperationDefinition.sql", "unique_id": "model.aidbox.OperationDefinition", "fqn": ["aidbox", "FHIR", "OperationDefinition"], "alias": "OperationDefinition", "checksum": {"name": "sha256", "checksum": "890ac55f19bc4449f1e1f3679ead7c6ef96c6436b432d91e0859860a6f0a767a"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5059452, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"OperationDefinition\"", "raw_code": "select * from OperationDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/OperationDefinition.sql", "compiled": true, "compiled_code": "select * from OperationDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicationAdministration": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicationAdministration", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicationAdministration.sql", "original_file_path": "models/FHIR/MedicationAdministration.sql", "unique_id": "model.aidbox.MedicationAdministration", "fqn": ["aidbox", "FHIR", "MedicationAdministration"], "alias": "MedicationAdministration", "checksum": {"name": "sha256", "checksum": "8779bd21842416a8e1fbebf637ffe0e9293f9c7d809f3130b7cf358de494c84a"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.507647, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicationAdministration\"", "raw_code": "select * from MedicationAdministration", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicationAdministration.sql", "compiled": true, "compiled_code": "select * from MedicationAdministration", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.RiskAssessment": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "RiskAssessment", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/RiskAssessment.sql", "original_file_path": "models/FHIR/RiskAssessment.sql", "unique_id": "model.aidbox.RiskAssessment", "fqn": ["aidbox", "FHIR", "RiskAssessment"], "alias": "RiskAssessment", "checksum": {"name": "sha256", "checksum": "c9397b0bdded630da5878f3f4a2ab282efcd26ea0a4a888063a114177f8f9511"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.509303, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"RiskAssessment\"", "raw_code": "select * from RiskAssessment", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/RiskAssessment.sql", "compiled": true, "compiled_code": "select * from RiskAssessment", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.QuestionnaireResponse": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "QuestionnaireResponse", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/QuestionnaireResponse.sql", "original_file_path": "models/FHIR/QuestionnaireResponse.sql", "unique_id": "model.aidbox.QuestionnaireResponse", "fqn": ["aidbox", "FHIR", "QuestionnaireResponse"], "alias": "QuestionnaireResponse", "checksum": {"name": "sha256", "checksum": "fb8e19bf3834f6ae1fee1e3b1fe0332e1ed9f7a35c1b42fbbf1bec244e795fd1"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.510956, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"QuestionnaireResponse\"", "raw_code": "select * from QuestionnaireResponse", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/QuestionnaireResponse.sql", "compiled": true, "compiled_code": "select * from QuestionnaireResponse", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.DocumentManifest": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "DocumentManifest", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/DocumentManifest.sql", "original_file_path": "models/FHIR/DocumentManifest.sql", "unique_id": "model.aidbox.DocumentManifest", "fqn": ["aidbox", "FHIR", "DocumentManifest"], "alias": "DocumentManifest", "checksum": {"name": "sha256", "checksum": "604da5f320ec0fd0c058de08d2a7a22bc14a89029855158169a1badecd8dd607"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.512697, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"DocumentManifest\"", "raw_code": "select * from DocumentManifest", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/DocumentManifest.sql", "compiled": true, "compiled_code": "select * from DocumentManifest", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Library": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Library", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Library.sql", "original_file_path": "models/FHIR/Library.sql", "unique_id": "model.aidbox.Library", "fqn": ["aidbox", "FHIR", "Library"], "alias": "Library", "checksum": {"name": "sha256", "checksum": "bef26bee68a071ee1ddac48c949b61da4f58f681650447ad4c5379af6a9d938d"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5147069, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Library\"", "raw_code": "select * from Library", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Library.sql", "compiled": true, "compiled_code": "select * from Library", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.HealthcareService": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "HealthcareService", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/HealthcareService.sql", "original_file_path": "models/FHIR/HealthcareService.sql", "unique_id": "model.aidbox.HealthcareService", "fqn": ["aidbox", "FHIR", "HealthcareService"], "alias": "HealthcareService", "checksum": {"name": "sha256", "checksum": "788d67d287de3e838cd50b3f48fa4f7db8b4ac295317801f02ca9dead9193d32"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5165608, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"HealthcareService\"", "raw_code": "select * from HealthcareService", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/HealthcareService.sql", "compiled": true, "compiled_code": "select * from HealthcareService", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicinalProductPackaged": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProductPackaged", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProductPackaged.sql", "original_file_path": "models/FHIR/MedicinalProductPackaged.sql", "unique_id": "model.aidbox.MedicinalProductPackaged", "fqn": ["aidbox", "FHIR", "MedicinalProductPackaged"], "alias": "MedicinalProductPackaged", "checksum": {"name": "sha256", "checksum": "0c9170d96707316bf641448aa3d642b2fdbe0b2f68ec47995d1efff5fb395791"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.518448, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProductPackaged\"", "raw_code": "select * from MedicinalProductPackaged", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProductPackaged.sql", "compiled": true, "compiled_code": "select * from MedicinalProductPackaged", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.PaymentReconciliation": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "PaymentReconciliation", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/PaymentReconciliation.sql", "original_file_path": "models/FHIR/PaymentReconciliation.sql", "unique_id": "model.aidbox.PaymentReconciliation", "fqn": ["aidbox", "FHIR", "PaymentReconciliation"], "alias": "PaymentReconciliation", "checksum": {"name": "sha256", "checksum": "2940aa8213495e74eab3024e92d0ed849ced861cb92e8e0579690a18e73415b9"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.520274, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"PaymentReconciliation\"", "raw_code": "select * from PaymentReconciliation", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/PaymentReconciliation.sql", "compiled": true, "compiled_code": "select * from PaymentReconciliation", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Bundle": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Bundle", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Bundle.sql", "original_file_path": "models/FHIR/Bundle.sql", "unique_id": "model.aidbox.Bundle", "fqn": ["aidbox", "FHIR", "Bundle"], "alias": "Bundle", "checksum": {"name": "sha256", "checksum": "a643c4dd9e17b8569fca44a68963a380e1976b4074c29baab095151773dbe7b9"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.522068, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Bundle\"", "raw_code": "select * from Bundle", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Bundle.sql", "compiled": true, "compiled_code": "select * from Bundle", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Person": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Person", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Person.sql", "original_file_path": "models/FHIR/Person.sql", "unique_id": "model.aidbox.Person", "fqn": ["aidbox", "FHIR", "Person"], "alias": "Person", "checksum": {"name": "sha256", "checksum": "a1c7ff106dfc47d7f9949f6e5f049345398a485b5a10596fb0b619a256a1e21d"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5237849, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Person\"", "raw_code": "select * from Person", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Person.sql", "compiled": true, "compiled_code": "select * from Person", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MessageHeader": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MessageHeader", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MessageHeader.sql", "original_file_path": "models/FHIR/MessageHeader.sql", "unique_id": "model.aidbox.MessageHeader", "fqn": ["aidbox", "FHIR", "MessageHeader"], "alias": "MessageHeader", "checksum": {"name": "sha256", "checksum": "18f3ca7cc5e839c273eaf7873d5cadc1b606fbbbf6cd7c84c88a5afaf22a7253"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5256221, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MessageHeader\"", "raw_code": "select * from MessageHeader", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MessageHeader.sql", "compiled": true, "compiled_code": "select * from MessageHeader", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Slot": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Slot", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Slot.sql", "original_file_path": "models/FHIR/Slot.sql", "unique_id": "model.aidbox.Slot", "fqn": ["aidbox", "FHIR", "Slot"], "alias": "Slot", "checksum": {"name": "sha256", "checksum": "06c52019e56d3a2f3719b35f10c66dc0fea3d93e414fb89507af6b1410c5c9b5"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5273411, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Slot\"", "raw_code": "select * from Slot", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Slot.sql", "compiled": true, "compiled_code": "select * from Slot", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Account": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Account", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Account.sql", "original_file_path": "models/FHIR/Account.sql", "unique_id": "model.aidbox.Account", "fqn": ["aidbox", "FHIR", "Account"], "alias": "Account", "checksum": {"name": "sha256", "checksum": "2bd4373bd792252fe74789bd11d356c13b4cb776873d7c92c684b9c6daeb6327"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.529276, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Account\"", "raw_code": "select * from Account", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Account.sql", "compiled": true, "compiled_code": "select * from Account", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.SupplyRequest": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "SupplyRequest", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/SupplyRequest.sql", "original_file_path": "models/FHIR/SupplyRequest.sql", "unique_id": "model.aidbox.SupplyRequest", "fqn": ["aidbox", "FHIR", "SupplyRequest"], "alias": "SupplyRequest", "checksum": {"name": "sha256", "checksum": "56a01edd1e2c118fe7d1e51407536b2ea8c8725badc2dc0592a67578eb50b609"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.531134, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"SupplyRequest\"", "raw_code": "select * from SupplyRequest", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/SupplyRequest.sql", "compiled": true, "compiled_code": "select * from SupplyRequest", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ExplanationOfBenefit": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ExplanationOfBenefit", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ExplanationOfBenefit.sql", "original_file_path": "models/FHIR/ExplanationOfBenefit.sql", "unique_id": "model.aidbox.ExplanationOfBenefit", "fqn": ["aidbox", "FHIR", "ExplanationOfBenefit"], "alias": "ExplanationOfBenefit", "checksum": {"name": "sha256", "checksum": "031191fd9eccded3a0ac0102ae7d32f59f5575ecc9ff356823669eac0b9b2986"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.532809, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ExplanationOfBenefit\"", "raw_code": "select * from ExplanationOfBenefit", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ExplanationOfBenefit.sql", "compiled": true, "compiled_code": "select * from ExplanationOfBenefit", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.DeviceUseStatement": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "DeviceUseStatement", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/DeviceUseStatement.sql", "original_file_path": "models/FHIR/DeviceUseStatement.sql", "unique_id": "model.aidbox.DeviceUseStatement", "fqn": ["aidbox", "FHIR", "DeviceUseStatement"], "alias": "DeviceUseStatement", "checksum": {"name": "sha256", "checksum": "5b12ba4d1442f6592177bba05a157a5bf1f1aa9cc9352e024a080679925dbc71"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5344582, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"DeviceUseStatement\"", "raw_code": "select * from DeviceUseStatement", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/DeviceUseStatement.sql", "compiled": true, "compiled_code": "select * from DeviceUseStatement", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Attribute": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Attribute", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Attribute.sql", "original_file_path": "models/FHIR/Attribute.sql", "unique_id": "model.aidbox.Attribute", "fqn": ["aidbox", "FHIR", "Attribute"], "alias": "Attribute", "checksum": {"name": "sha256", "checksum": "3c8973ed54c6cf1bd537d5b745bc28300464596e43698d22390c4ac91f2411d4"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.536455, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Attribute\"", "raw_code": "select * from Attribute", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Attribute.sql", "compiled": true, "compiled_code": "select * from Attribute", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicinalProductContraindication": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProductContraindication", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProductContraindication.sql", "original_file_path": "models/FHIR/MedicinalProductContraindication.sql", "unique_id": "model.aidbox.MedicinalProductContraindication", "fqn": ["aidbox", "FHIR", "MedicinalProductContraindication"], "alias": "MedicinalProductContraindication", "checksum": {"name": "sha256", "checksum": "f9033768ffebe146d636a79d6877f31bbe64597579e2e948742c45184aebb76f"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.538343, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProductContraindication\"", "raw_code": "select * from MedicinalProductContraindication", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProductContraindication.sql", "compiled": true, "compiled_code": "select * from MedicinalProductContraindication", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicinalProductPharmaceutical": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicinalProductPharmaceutical", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicinalProductPharmaceutical.sql", "original_file_path": "models/FHIR/MedicinalProductPharmaceutical.sql", "unique_id": "model.aidbox.MedicinalProductPharmaceutical", "fqn": ["aidbox", "FHIR", "MedicinalProductPharmaceutical"], "alias": "MedicinalProductPharmaceutical", "checksum": {"name": "sha256", "checksum": "f2bc1dc53aa80c469aa06a73ca174a78900a17729233920c74903ddde1d6c2f1"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.540043, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicinalProductPharmaceutical\"", "raw_code": "select * from MedicinalProductPharmaceutical", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicinalProductPharmaceutical.sql", "compiled": true, "compiled_code": "select * from MedicinalProductPharmaceutical", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicationDispense": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicationDispense", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicationDispense.sql", "original_file_path": "models/FHIR/MedicationDispense.sql", "unique_id": "model.aidbox.MedicationDispense", "fqn": ["aidbox", "FHIR", "MedicationDispense"], "alias": "MedicationDispense", "checksum": {"name": "sha256", "checksum": "8948fc6ff5e18d5cfab983f20753373bdd1b8e3ec7d62ceae8d66e7a7da97f1e"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.5417228, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicationDispense\"", "raw_code": "select * from MedicationDispense", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicationDispense.sql", "compiled": true, "compiled_code": "select * from MedicationDispense", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.ObservationDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "ObservationDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/ObservationDefinition.sql", "original_file_path": "models/FHIR/ObservationDefinition.sql", "unique_id": "model.aidbox.ObservationDefinition", "fqn": ["aidbox", "FHIR", "ObservationDefinition"], "alias": "ObservationDefinition", "checksum": {"name": "sha256", "checksum": "0d2952fde5aff789f2dfc94ac8377f96594e11b107337ac6655f819826263436"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.54349, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"ObservationDefinition\"", "raw_code": "select * from ObservationDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/ObservationDefinition.sql", "compiled": true, "compiled_code": "select * from ObservationDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.MedicationRequest": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "MedicationRequest", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/MedicationRequest.sql", "original_file_path": "models/FHIR/MedicationRequest.sql", "unique_id": "model.aidbox.MedicationRequest", "fqn": ["aidbox", "FHIR", "MedicationRequest"], "alias": "MedicationRequest", "checksum": {"name": "sha256", "checksum": "757cdfdf27d050025894cad2767f27fac0ed6a87190ddfc2eee6e4f2ab5d6695"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.545114, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"MedicationRequest\"", "raw_code": "select * from MedicationRequest", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/MedicationRequest.sql", "compiled": true, "compiled_code": "select * from MedicationRequest", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.GraphDefinition": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "GraphDefinition", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/GraphDefinition.sql", "original_file_path": "models/FHIR/GraphDefinition.sql", "unique_id": "model.aidbox.GraphDefinition", "fqn": ["aidbox", "FHIR", "GraphDefinition"], "alias": "GraphDefinition", "checksum": {"name": "sha256", "checksum": "6a0d82e0de88d5b7548fa9ddf9d8d36c97924ea0728d3d053aefbbed8bfe76a1"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.547013, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"GraphDefinition\"", "raw_code": "select * from GraphDefinition", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/GraphDefinition.sql", "compiled": true, "compiled_code": "select * from GraphDefinition", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.List": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "List", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/List.sql", "original_file_path": "models/FHIR/List.sql", "unique_id": "model.aidbox.List", "fqn": ["aidbox", "FHIR", "List"], "alias": "List", "checksum": {"name": "sha256", "checksum": "40ea88d249bc79da057b5686196d6b86aaa2b73622af5506e81b35ed2c09a255"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.549008, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"List\"", "raw_code": "select * from List", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/List.sql", "compiled": true, "compiled_code": "select * from List", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.BiologicallyDerivedProduct": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "BiologicallyDerivedProduct", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/BiologicallyDerivedProduct.sql", "original_file_path": "models/FHIR/BiologicallyDerivedProduct.sql", "unique_id": "model.aidbox.BiologicallyDerivedProduct", "fqn": ["aidbox", "FHIR", "BiologicallyDerivedProduct"], "alias": "BiologicallyDerivedProduct", "checksum": {"name": "sha256", "checksum": "7c6f4dd04664510d0fc83b0d103ad6b3d9490f72997126caf01a1cf409d3ace0"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.550739, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"BiologicallyDerivedProduct\"", "raw_code": "select * from BiologicallyDerivedProduct", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/BiologicallyDerivedProduct.sql", "compiled": true, "compiled_code": "select * from BiologicallyDerivedProduct", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "model.aidbox.Task": {"database": "cdrdemo", "schema": "dbt_fhir", "name": "Task", "resource_type": "model", "package_name": "aidbox", "path": "FHIR/Task.sql", "original_file_path": "models/FHIR/Task.sql", "unique_id": "model.aidbox.Task", "fqn": ["aidbox", "FHIR", "Task"], "alias": "Task", "checksum": {"name": "sha256", "checksum": "b87c6bfacaf8951beb02ee3f214878298f39158cfbeee2886dae8689921db5cf"}, "config": {"enabled": true, "alias": null, "schema": "fhir", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "view", "incremental_strategy": null, "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "grants": {}, "packages": [], "docs": {"show": true, "node_color": null}, "contract": {"enforced": false}, "post-hook": [], "pre-hook": []}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {"materialized": "view", "schema": "fhir"}, "created_at": 1687530333.552421, "relation_name": "\"cdrdemo\".\"dbt_fhir\".\"Task\"", "raw_code": "select * from Task", "language": "sql", "refs": [], "sources": [], "metrics": [], "depends_on": {"macros": [], "nodes": []}, "compiled_path": "docs/compiled/aidbox/models/FHIR/Task.sql", "compiled": true, "compiled_code": "select * from Task", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "access": "protected", "constraints": [], "version": null, "latest_version": null}, "test.AidboxProject.aidbox_fhir_uuid_Patient_id.7a9ba10641": {"test_metadata": {"name": "fhir_uuid", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('Patient')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_uuid_Patient_id", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_uuid_Patient_id.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_uuid_Patient_id.7a9ba10641", "fqn": ["AidboxProject", "views", "aidbox_fhir_uuid_Patient_id"], "alias": "aidbox_fhir_uuid_Patient_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.568388, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_uuid(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Patient", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_uuid", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Patient"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_uuid_Patient_id.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Patient\"  \n     where (id)::text NOT SIMILAR TO  '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.Patient", "attached_node": "model.aidbox.Patient"}, "test.AidboxProject.aidbox_fhir_date_Observation_resource_issued_.d42bc11b5b": {"test_metadata": {"name": "fhir_date", "kwargs": {"column_name": "resource#>>'{ issued }'", "model": "{{ get_where_subquery(ref('Observation')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_date_Observation_resource_issued_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_date_Observation_resource_issued_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_date_Observation_resource_issued_.d42bc11b5b", "fqn": ["AidboxProject", "views", "aidbox_fhir_date_Observation_resource_issued_"], "alias": "aidbox_fhir_date_Observation_resource_issued_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.5728471, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_date(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Observation", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_date", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Observation"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_date_Observation_resource_issued_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Observation\"  \n     where (resource#>>'{ issued }')::text NOT SIMILAR TO  '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{ issued }'", "file_key_name": "models.Observation", "attached_node": "model.aidbox.Observation"}, "test.AidboxProject.aidbox_fhir_date_Observation_resource_effective_dateTime_.47838c609f": {"test_metadata": {"name": "fhir_date", "kwargs": {"column_name": "resource#>>'{ effective,dateTime }'", "model": "{{ get_where_subquery(ref('Observation')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_date_Observation_resource_effective_dateTime_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_date_Observation_resource_effective_dateTime_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_date_Observation_resource_effective_dateTime_.47838c609f", "fqn": ["AidboxProject", "views", "aidbox_fhir_date_Observation_resource_effective_dateTime_"], "alias": "aidbox_fhir_date_Observation_resource_effective_dateTime_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.575453, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_date(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Observation", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_date", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Observation"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_date_Observation_resource_effective_dateTime_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Observation\"  \n     where (resource#>>'{ effective,dateTime }')::text NOT SIMILAR TO  '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{ effective,dateTime }'", "file_key_name": "models.Observation", "attached_node": "model.aidbox.Observation"}, "test.AidboxProject.aidbox_fhir_uuid_Observation_id.1cd2e987b3": {"test_metadata": {"name": "fhir_uuid", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('Observation')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_uuid_Observation_id", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_uuid_Observation_id.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_uuid_Observation_id.1cd2e987b3", "fqn": ["AidboxProject", "views", "aidbox_fhir_uuid_Observation_id"], "alias": "aidbox_fhir_uuid_Observation_id", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.577601, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_uuid(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Observation", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_uuid", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Observation"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_uuid_Observation_id.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Observation\"  \n     where (id)::text NOT SIMILAR TO  '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "id", "file_key_name": "models.Observation", "attached_node": "model.aidbox.Observation"}, "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_subject_id_.3dca4d07d3": {"test_metadata": {"name": "fhir_uuid", "kwargs": {"column_name": "resource#>>'{ subject,id }'", "model": "{{ get_where_subquery(ref('Observation')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_uuid_Observation_resource_subject_id_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_uuid_Observation_resource_subject_id_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_subject_id_.3dca4d07d3", "fqn": ["AidboxProject", "views", "aidbox_fhir_uuid_Observation_resource_subject_id_"], "alias": "aidbox_fhir_uuid_Observation_resource_subject_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.5795891, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_uuid(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Observation", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_uuid", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Observation"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_uuid_Observation_resource_subject_id_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Observation\"  \n     where (resource#>>'{ subject,id }')::text NOT SIMILAR TO  '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{ subject,id }'", "file_key_name": "models.Observation", "attached_node": "model.aidbox.Observation"}, "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_encounter_id_.b1bb43a423": {"test_metadata": {"name": "fhir_uuid", "kwargs": {"column_name": "resource#>>'{ encounter,id }'", "model": "{{ get_where_subquery(ref('Observation')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_uuid_Observation_resource_encounter_id_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_uuid_Observation_resource_encounter_id_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_encounter_id_.b1bb43a423", "fqn": ["AidboxProject", "views", "aidbox_fhir_uuid_Observation_resource_encounter_id_"], "alias": "aidbox_fhir_uuid_Observation_resource_encounter_id_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.581702, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_uuid(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Observation", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_uuid", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Observation"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_uuid_Observation_resource_encounter_id_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Observation\"  \n     where (resource#>>'{ encounter,id }')::text NOT SIMILAR TO  '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{ encounter,id }'", "file_key_name": "models.Observation", "attached_node": "model.aidbox.Observation"}, "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_start_.4ad69321d0": {"test_metadata": {"name": "fhir_date", "kwargs": {"column_name": "resource#>>'{period,start}'", "model": "{{ get_where_subquery(ref('Encounter')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_date_Encounter_resource_period_start_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_date_Encounter_resource_period_start_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_start_.4ad69321d0", "fqn": ["AidboxProject", "views", "aidbox_fhir_date_Encounter_resource_period_start_"], "alias": "aidbox_fhir_date_Encounter_resource_period_start_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.583909, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_date(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Encounter", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_date", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Encounter"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_date_Encounter_resource_period_start_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Encounter\"  \n     where (resource#>>'{period,start}')::text NOT SIMILAR TO  '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{period,start}'", "file_key_name": "models.Encounter", "attached_node": "model.aidbox.Encounter"}, "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_end_.32a824a49b": {"test_metadata": {"name": "fhir_date", "kwargs": {"column_name": "resource#>>'{period,end}'", "model": "{{ get_where_subquery(ref('Encounter')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_date_Encounter_resource_period_end_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_date_Encounter_resource_period_end_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_end_.32a824a49b", "fqn": ["AidboxProject", "views", "aidbox_fhir_date_Encounter_resource_period_end_"], "alias": "aidbox_fhir_date_Encounter_resource_period_end_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.5859468, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_date(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Encounter", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_date", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Encounter"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_date_Encounter_resource_period_end_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Encounter\"  \n     where (resource#>>'{period,end}')::text NOT SIMILAR TO  '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{period,end}'", "file_key_name": "models.Encounter", "attached_node": "model.aidbox.Encounter"}, "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_end_.5afca47e34": {"test_metadata": {"name": "fhir_date", "kwargs": {"column_name": "resource#>>'{performed,Period,end}'", "model": "{{ get_where_subquery(ref('Procedure')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_date_Procedure_resource_performed_Period_end_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_date_Procedure_resource_performed_Period_end_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_end_.5afca47e34", "fqn": ["AidboxProject", "views", "aidbox_fhir_date_Procedure_resource_performed_Period_end_"], "alias": "aidbox_fhir_date_Procedure_resource_performed_Period_end_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.588183, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_date(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Procedure", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_date", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Procedure"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_date_Procedure_resource_performed_Period_end_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Procedure\"  \n     where (resource#>>'{performed,Period,end}')::text NOT SIMILAR TO  '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{performed,Period,end}'", "file_key_name": "models.Procedure", "attached_node": "model.aidbox.Procedure"}, "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_start_.bda7848306": {"test_metadata": {"name": "fhir_date", "kwargs": {"column_name": "resource#>>'{performed,Period,start}'", "model": "{{ get_where_subquery(ref('Procedure')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_date_Procedure_resource_performed_Period_start_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_date_Procedure_resource_performed_Period_start_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_start_.bda7848306", "fqn": ["AidboxProject", "views", "aidbox_fhir_date_Procedure_resource_performed_Period_start_"], "alias": "aidbox_fhir_date_Procedure_resource_performed_Period_start_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.59039, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_date(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Procedure", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_date", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Procedure"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_date_Procedure_resource_performed_Period_start_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Procedure\"  \n     where (resource#>>'{performed,Period,start}')::text NOT SIMILAR TO  '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{performed,Period,start}'", "file_key_name": "models.Procedure", "attached_node": "model.aidbox.Procedure"}, "test.AidboxProject.aidbox_fhir_date_Condition_resource_onset_dateTime_.ee1749cc82": {"test_metadata": {"name": "fhir_date", "kwargs": {"column_name": "resource#>>'{onset,dateTime}'", "model": "{{ get_where_subquery(ref('Condition')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_date_Condition_resource_onset_dateTime_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_date_Condition_resource_onset_dateTime_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_date_Condition_resource_onset_dateTime_.ee1749cc82", "fqn": ["AidboxProject", "views", "aidbox_fhir_date_Condition_resource_onset_dateTime_"], "alias": "aidbox_fhir_date_Condition_resource_onset_dateTime_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.5924659, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_date(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Condition", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_date", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Condition"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_date_Condition_resource_onset_dateTime_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Condition\"  \n     where (resource#>>'{onset,dateTime}')::text NOT SIMILAR TO  '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{onset,dateTime}'", "file_key_name": "models.Condition", "attached_node": "model.aidbox.Condition"}, "test.AidboxProject.aidbox_fhir_date_Condition_resource_abatement_dateTime_.0a5f2d826e": {"test_metadata": {"name": "fhir_date", "kwargs": {"column_name": "resource#>>'{abatement,dateTime}'", "model": "{{ get_where_subquery(ref('Condition')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_date_Condition_resource_abatement_dateTime_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_date_Condition_resource_abatement_dateTime_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_date_Condition_resource_abatement_dateTime_.0a5f2d826e", "fqn": ["AidboxProject", "views", "aidbox_fhir_date_Condition_resource_abatement_dateTime_"], "alias": "aidbox_fhir_date_Condition_resource_abatement_dateTime_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.594678, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_date(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Condition", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_date", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Condition"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_date_Condition_resource_abatement_dateTime_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Condition\"  \n     where (resource#>>'{abatement,dateTime}')::text NOT SIMILAR TO  '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{abatement,dateTime}'", "file_key_name": "models.Condition", "attached_node": "model.aidbox.Condition"}, "test.AidboxProject.aidbox_fhir_date_Condition_resource_recordedDate_.f102b59941": {"test_metadata": {"name": "fhir_date", "kwargs": {"column_name": "resource#>>'{recordedDate}'", "model": "{{ get_where_subquery(ref('Condition')) }}"}, "namespace": "aidbox"}, "database": "cdrdemo", "schema": "dbt_dbt_test__audit", "name": "aidbox_fhir_date_Condition_resource_recordedDate_", "resource_type": "test", "package_name": "AidboxProject", "path": "aidbox_fhir_date_Condition_resource_recordedDate_.sql", "original_file_path": "models/views/schema.yml", "unique_id": "test.AidboxProject.aidbox_fhir_date_Condition_resource_recordedDate_.f102b59941", "fqn": ["AidboxProject", "views", "aidbox_fhir_date_Condition_resource_recordedDate_"], "alias": "aidbox_fhir_date_Condition_resource_recordedDate_", "checksum": {"name": "none", "checksum": ""}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "group": null, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "tags": [], "description": "", "columns": {}, "meta": {}, "group": null, "docs": {"show": true, "node_color": null}, "patch_path": null, "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1687530333.597274, "relation_name": null, "raw_code": "{{ aidbox.test_fhir_date(**_dbt_generic_test_kwargs) }}", "language": "sql", "refs": [{"name": "Condition", "package": null, "version": null}], "sources": [], "metrics": [], "depends_on": {"macros": ["macro.aidbox.test_fhir_date", "macro.dbt.get_where_subquery"], "nodes": ["model.aidbox.Condition"]}, "compiled_path": "docs/compiled/AidboxProject/models/views/schema.yml/aidbox_fhir_date_Condition_resource_recordedDate_.sql", "compiled": true, "compiled_code": "select id \n      from \"cdrdemo\".\"dbt_fhir\".\"Condition\"  \n     where (resource#>>'{recordedDate}')::text NOT SIMILAR TO  '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?'", "extra_ctes_injected": true, "extra_ctes": [], "contract": {"enforced": false, "checksum": null}, "column_name": "resource#>>'{recordedDate}'", "file_key_name": "models.Condition", "attached_node": "model.aidbox.Condition"}}, "sources": {}, "macros": {"macro.dbt_postgres.postgres__current_timestamp": {"name": "postgres__current_timestamp", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__current_timestamp", "macro_sql": "{% macro postgres__current_timestamp() -%}\n    now()\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.973442, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_string_as_time": {"name": "postgres__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__snapshot_string_as_time", "macro_sql": "{% macro postgres__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp without time zone\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.974292, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_get_time": {"name": "postgres__snapshot_get_time", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__snapshot_get_time", "macro_sql": "{% macro postgres__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp without time zone\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.974487, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_backcompat": {"name": "postgres__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__current_timestamp_backcompat", "macro_sql": "{% macro postgres__current_timestamp_backcompat() %}\n    current_timestamp::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9745972, "supported_languages": null}, "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat": {"name": "postgres__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/timestamps.sql", "original_file_path": "macros/timestamps.sql", "unique_id": "macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro postgres__current_timestamp_in_utc_backcompat() %}\n    (current_timestamp at time zone 'utc')::{{ type_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.974751, "supported_languages": null}, "macro.dbt_postgres.postgres__get_catalog": {"name": "postgres__get_catalog", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "unique_id": "macro.dbt_postgres.postgres__get_catalog", "macro_sql": "{% macro postgres__get_catalog(information_schema, schemas) -%}\n\n  {%- call statement('catalog', fetch_result=True) -%}\n    {#\n      If the user has multiple databases set and the first one is wrong, this will fail.\n      But we won't fail in the case where there are multiple quoting-difference-only dbs, which is better.\n    #}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    select\n        '{{ database }}' as table_database,\n        sch.nspname as table_schema,\n        tbl.relname as table_name,\n        case tbl.relkind\n            when 'v' then 'VIEW'\n            else 'BASE TABLE'\n        end as table_type,\n        tbl_desc.description as table_comment,\n        col.attname as column_name,\n        col.attnum as column_index,\n        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n        col_desc.description as column_comment,\n        pg_get_userbyid(tbl.relowner) as table_owner\n\n    from pg_catalog.pg_namespace sch\n    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session\n      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables\n      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view\n      and col.attnum > 0 -- negative numbers are used for system columns such as oid\n      and not col.attisdropped -- column as not been dropped\n\n    order by\n        sch.nspname,\n        tbl.relname,\n        col.attnum\n\n  {%- endcall -%}\n\n  {{ return(load_result('catalog').table) }}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.975639, "supported_languages": null}, "macro.dbt_postgres.postgres_get_relations": {"name": "postgres_get_relations", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "unique_id": "macro.dbt_postgres.postgres_get_relations", "macro_sql": "{% macro postgres_get_relations () -%}\n\n  {#\n      -- in pg_depend, objid is the dependent, refobjid is the referenced object\n      --  > a pg_depend entry indicates that the referenced object cannot be\n      --  > dropped without also dropping the dependent object.\n  #}\n\n  {%- call statement('relations', fetch_result=True) -%}\n    with relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select distinct\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\n\n  {%- endcall -%}\n\n  {{ return(load_result('relations').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9761379, "supported_languages": null}, "macro.dbt_postgres.postgres__create_table_as": {"name": "postgres__create_table_as", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__create_table_as", "macro_sql": "{% macro postgres__create_table_as(temporary, relation, sql) -%}\n  {%- set unlogged = config.get('unlogged', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}\n    temporary\n  {%- elif unlogged -%}\n    unlogged\n  {%- endif %} table {{ relation }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }} ;\n    insert into {{ relation }} {{ get_column_names() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% else %}\n    as\n  {% endif %}\n  (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt_postgres.get_column_names", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.981514, "supported_languages": null}, "macro.dbt_postgres.postgres__get_create_index_sql": {"name": "postgres__get_create_index_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_create_index_sql", "macro_sql": "{% macro postgres__get_create_index_sql(relation, index_dict) -%}\n  {%- set index_config = adapter.parse_index(index_dict) -%}\n  {%- set comma_separated_columns = \", \".join(index_config.columns) -%}\n  {%- set index_name = index_config.render(relation) -%}\n\n  create {% if index_config.unique -%}\n    unique\n  {%- endif %} index if not exists\n  \"{{ index_name }}\"\n  on {{ relation }} {% if index_config.type -%}\n    using {{ index_config.type }}\n  {%- endif %}\n  ({{ comma_separated_columns }});\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9818828, "supported_languages": null}, "macro.dbt_postgres.postgres__create_schema": {"name": "postgres__create_schema", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__create_schema", "macro_sql": "{% macro postgres__create_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.982118, "supported_languages": null}, "macro.dbt_postgres.postgres__drop_schema": {"name": "postgres__drop_schema", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__drop_schema", "macro_sql": "{% macro postgres__drop_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9823518, "supported_languages": null}, "macro.dbt_postgres.postgres__get_columns_in_relation": {"name": "postgres__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_columns_in_relation", "macro_sql": "{% macro postgres__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from {{ relation.information_schema('columns') }}\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.982697, "supported_languages": null}, "macro.dbt_postgres.postgres__list_relations_without_caching": {"name": "postgres__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__list_relations_without_caching", "macro_sql": "{% macro postgres__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.983043, "supported_languages": null}, "macro.dbt_postgres.postgres__information_schema_name": {"name": "postgres__information_schema_name", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__information_schema_name", "macro_sql": "{% macro postgres__information_schema_name(database) -%}\n  {% if database_name -%}\n    {{ adapter.verify_database(database_name) }}\n  {%- endif -%}\n  information_schema\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9831738, "supported_languages": null}, "macro.dbt_postgres.postgres__list_schemas": {"name": "postgres__list_schemas", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__list_schemas", "macro_sql": "{% macro postgres__list_schemas(database) %}\n  {% if database -%}\n    {{ adapter.verify_database(database) }}\n  {%- endif -%}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select distinct nspname from pg_namespace\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.983433, "supported_languages": null}, "macro.dbt_postgres.postgres__check_schema_exists": {"name": "postgres__check_schema_exists", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__check_schema_exists", "macro_sql": "{% macro postgres__check_schema_exists(information_schema, schema) -%}\n  {% if information_schema.database -%}\n    {{ adapter.verify_database(information_schema.database) }}\n  {%- endif -%}\n  {% call statement('check_schema_exists', fetch_result=True, auto_begin=False) %}\n    select count(*) from pg_namespace where nspname = '{{ schema }}'\n  {% endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9837198, "supported_languages": null}, "macro.dbt_postgres.postgres__make_relation_with_suffix": {"name": "postgres__make_relation_with_suffix", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_relation_with_suffix", "macro_sql": "{% macro postgres__make_relation_with_suffix(base_relation, suffix, dstring) %}\n    {% if dstring %}\n      {% set dt = modules.datetime.datetime.now() %}\n      {% set dtstring = dt.strftime(\"%H%M%S%f\") %}\n      {% set suffix = suffix ~ dtstring %}\n    {% endif %}\n    {% set suffix_length = suffix|length %}\n    {% set relation_max_name_length = base_relation.relation_max_name_length() %}\n    {% if suffix_length > relation_max_name_length %}\n        {% do exceptions.raise_compiler_error('Relation suffix is too long (' ~ suffix_length ~ ' characters). Maximum length is ' ~ relation_max_name_length ~ ' characters.') %}\n    {% endif %}\n    {% set identifier = base_relation.identifier[:relation_max_name_length - suffix_length] ~ suffix %}\n\n    {{ return(base_relation.incorporate(path={\"identifier\": identifier })) }}\n\n  {% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.984544, "supported_languages": null}, "macro.dbt_postgres.postgres__make_intermediate_relation": {"name": "postgres__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_intermediate_relation", "macro_sql": "{% macro postgres__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(postgres__make_relation_with_suffix(base_relation, suffix, dstring=False)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.98484, "supported_languages": null}, "macro.dbt_postgres.postgres__make_temp_relation": {"name": "postgres__make_temp_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_temp_relation", "macro_sql": "{% macro postgres__make_temp_relation(base_relation, suffix) %}\n    {% set temp_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=True) %}\n    {{ return(temp_relation.incorporate(path={\"schema\": none,\n                                              \"database\": none})) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.985127, "supported_languages": null}, "macro.dbt_postgres.postgres__make_backup_relation": {"name": "postgres__make_backup_relation", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__make_backup_relation", "macro_sql": "{% macro postgres__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {% set backup_relation = postgres__make_relation_with_suffix(base_relation, suffix, dstring=False) %}\n    {{ return(backup_relation.incorporate(type=backup_relation_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_relation_with_suffix"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.985353, "supported_languages": null}, "macro.dbt_postgres.postgres_escape_comment": {"name": "postgres_escape_comment", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres_escape_comment", "macro_sql": "{% macro postgres_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.985696, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_relation_comment": {"name": "postgres__alter_relation_comment", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__alter_relation_comment", "macro_sql": "{% macro postgres__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = postgres_escape_comment(comment) %}\n  comment on {{ relation.type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.985873, "supported_languages": null}, "macro.dbt_postgres.postgres__alter_column_comment": {"name": "postgres__alter_column_comment", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__alter_column_comment", "macro_sql": "{% macro postgres__alter_column_comment(relation, column_dict) %}\n  {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n  {% for column_name in column_dict if (column_name in existing_columns) %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = postgres_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9863522, "supported_languages": null}, "macro.dbt_postgres.postgres__get_show_grant_sql": {"name": "postgres__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__get_show_grant_sql", "macro_sql": "\n\n{%- macro postgres__get_show_grant_sql(relation) -%}\n  select grantee, privilege_type\n  from {{ relation.information_schema('role_table_grants') }}\n      where grantor = current_role\n        and grantee != current_role\n        and table_schema = '{{ relation.schema }}'\n        and table_name = '{{ relation.identifier }}'\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.986523, "supported_languages": null}, "macro.dbt_postgres.postgres__copy_grants": {"name": "postgres__copy_grants", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "unique_id": "macro.dbt_postgres.postgres__copy_grants", "macro_sql": "{% macro postgres__copy_grants() %}\n    {{ return(False) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.986615, "supported_languages": null}, "macro.dbt_postgres.postgres__get_incremental_default_sql": {"name": "postgres__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/materializations/incremental_strategies.sql", "original_file_path": "macros/materializations/incremental_strategies.sql", "unique_id": "macro.dbt_postgres.postgres__get_incremental_default_sql", "macro_sql": "{% macro postgres__get_incremental_default_sql(arg_dict) %}\n\n  {% if arg_dict[\"unique_key\"] %}\n    {% do return(get_incremental_delete_insert_sql(arg_dict)) %}\n  {% else %}\n    {% do return(get_incremental_append_sql(arg_dict)) %}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_delete_insert_sql", "macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.98696, "supported_languages": null}, "macro.dbt_postgres.postgres__snapshot_merge_sql": {"name": "postgres__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "unique_id": "macro.dbt_postgres.postgres__snapshot_merge_sql", "macro_sql": "{% macro postgres__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    update {{ target }}\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = {{ target }}.dbt_scd_id::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      and {{ target }}.dbt_valid_to is null;\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9875252, "supported_languages": null}, "macro.dbt_postgres.get_column_names": {"name": "get_column_names", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/columns_spec_ddl.sql", "original_file_path": "macros/utils/columns_spec_ddl.sql", "unique_id": "macro.dbt_postgres.get_column_names", "macro_sql": "{% macro get_column_names() %}\n  {# loop through user_provided_columns to get column names #}\n    {%- set user_provided_columns = model['columns'] -%}\n    (\n    {% for i in user_provided_columns %}\n      {% set col = user_provided_columns[i] %}\n      {{ col['name'] }} {{ \",\" if not loop.last }}\n    {% endfor %}\n  )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9879072, "supported_languages": null}, "macro.dbt_postgres.postgres__dateadd": {"name": "postgres__dateadd", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt_postgres.postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.988087, "supported_languages": null}, "macro.dbt_postgres.postgres__listagg": {"name": "postgres__listagg", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt_postgres.postgres__listagg", "macro_sql": "{% macro postgres__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        (array_agg(\n            {{ measure }}\n            {% if order_by_clause -%}\n            {{ order_by_clause }}\n            {%- endif %}\n        ))[1:{{ limit_num }}],\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    string_agg(\n        {{ measure }},\n        {{ delimiter_text }}\n        {% if order_by_clause -%}\n        {{ order_by_clause }}\n        {%- endif %}\n        )\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.988569, "supported_languages": null}, "macro.dbt_postgres.postgres__datediff": {"name": "postgres__datediff", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt_postgres.postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) -%}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.991015, "supported_languages": null}, "macro.dbt_postgres.postgres__any_value": {"name": "postgres__any_value", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt_postgres.postgres__any_value", "macro_sql": "{% macro postgres__any_value(expression) -%}\n\n    min({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.991128, "supported_languages": null}, "macro.dbt_postgres.postgres__last_day": {"name": "postgres__last_day", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt_postgres.postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd('month', '3', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc", "macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9914932, "supported_languages": null}, "macro.dbt_postgres.postgres__split_part": {"name": "postgres__split_part", "resource_type": "macro", "package_name": "dbt_postgres", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt_postgres.postgres__split_part", "macro_sql": "{% macro postgres__split_part(string_text, delimiter_text, part_number) %}\n\n  {% if part_number >= 0 %}\n    {{ dbt.default__split_part(string_text, delimiter_text, part_number) }}\n  {% else %}\n    {{ dbt._split_part_negative(string_text, delimiter_text, part_number) }}\n  {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__split_part", "macro.dbt._split_part_negative"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.992024, "supported_languages": null}, "macro.dbt.run_hooks": {"name": "run_hooks", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.992956, "supported_languages": null}, "macro.dbt.make_hook_config": {"name": "make_hook_config", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.993112, "supported_languages": null}, "macro.dbt.before_begin": {"name": "before_begin", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.993233, "supported_languages": null}, "macro.dbt.in_transaction": {"name": "in_transaction", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.993349, "supported_languages": null}, "macro.dbt.after_commit": {"name": "after_commit", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "unique_id": "macro.dbt.after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.993452, "supported_languages": null}, "macro.dbt.set_sql_header": {"name": "set_sql_header", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.993739, "supported_languages": null}, "macro.dbt.should_full_refresh": {"name": "should_full_refresh", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9940732, "supported_languages": null}, "macro.dbt.should_store_failures": {"name": "should_store_failures", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "unique_id": "macro.dbt.should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.994297, "supported_languages": null}, "macro.dbt.snapshot_merge_sql": {"name": "snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9946828, "supported_languages": null}, "macro.dbt.default__snapshot_merge_sql": {"name": "default__snapshot_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "unique_id": "macro.dbt.default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9948852, "supported_languages": null}, "macro.dbt.strategy_dispatch": {"name": "strategy_dispatch", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9977741, "supported_languages": null}, "macro.dbt.snapshot_hash_arguments": {"name": "snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.997911, "supported_languages": null}, "macro.dbt.default__snapshot_hash_arguments": {"name": "default__snapshot_hash_arguments", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.9980822, "supported_languages": null}, "macro.dbt.snapshot_timestamp_strategy": {"name": "snapshot_timestamp_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.998626, "supported_languages": null}, "macro.dbt.snapshot_string_as_time": {"name": "snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.998751, "supported_languages": null}, "macro.dbt.default__snapshot_string_as_time": {"name": "default__snapshot_string_as_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.998882, "supported_languages": null}, "macro.dbt.snapshot_check_all_get_existing_columns": {"name": "snapshot_check_all_get_existing_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) -%}\n    {%- if not target_exists -%}\n        {#-- no table yet -> return whatever the query does --#}\n        {{ return((false, query_columns)) }}\n    {%- endif -%}\n\n    {#-- handle any schema changes --#}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=node.alias) -%}\n\n    {% if check_cols_config == 'all' %}\n        {%- set query_columns = get_columns_in_query(node['compiled_code']) -%}\n\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {#-- query for proper casing/quoting, to support comparison below --#}\n        {%- set select_check_cols_from_target -%}\n            {#-- N.B. The whitespace below is necessary to avoid edge case issue with comments --#}\n            {#-- See: https://github.com/dbt-labs/dbt-core/issues/6781 --#}\n            select {{ check_cols_config | join(', ') }} from (\n                {{ node['compiled_code'] }}\n            ) subq\n        {%- endset -%}\n        {% set query_columns = get_columns_in_query(select_check_cols_from_target) %}\n\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set existing_cols = adapter.get_columns_in_relation(target_relation) | map(attribute = 'name') | list -%}\n    {%- set ns = namespace() -%} {#-- handle for-loop scoping with a namespace --#}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(adapter.quote(col)) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return((ns.column_added, intersection)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530332.999928, "supported_languages": null}, "macro.dbt.snapshot_check_strategy": {"name": "snapshot_check_strategy", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "unique_id": "macro.dbt.snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists, check_cols_config) %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0008771, "supported_languages": null}, "macro.dbt.create_columns": {"name": "create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.004032, "supported_languages": null}, "macro.dbt.default__create_columns": {"name": "default__create_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0042381, "supported_languages": null}, "macro.dbt.post_snapshot": {"name": "post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0043662, "supported_languages": null}, "macro.dbt.default__post_snapshot": {"name": "default__post_snapshot", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.004529, "supported_languages": null}, "macro.dbt.get_true_sql": {"name": "get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0047622, "supported_languages": null}, "macro.dbt.default__get_true_sql": {"name": "default__get_true_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0048692, "supported_languages": null}, "macro.dbt.snapshot_staging_table": {"name": "snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.005037, "supported_languages": null}, "macro.dbt.default__snapshot_staging_table": {"name": "default__snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.005853, "supported_languages": null}, "macro.dbt.build_snapshot_table": {"name": "build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.006037, "supported_languages": null}, "macro.dbt.default__build_snapshot_table": {"name": "default__build_snapshot_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.006239, "supported_languages": null}, "macro.dbt.build_snapshot_staging_table": {"name": "build_snapshot_staging_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "unique_id": "macro.dbt.build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set temp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, temp_relation, select) }}\n    {% endcall %}\n\n    {% do return(temp_relation) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.006572, "supported_languages": null}, "macro.dbt.materialization_snapshot_default": {"name": "materialization_snapshot_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "unique_id": "macro.dbt.materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n  -- grab current tables grants config for comparision later on\n  {%- set grant_config = config.get('grants') -%}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_code']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% set should_revoke = should_revoke(target_relation_exists, full_refresh_mode=False) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.011415, "supported_languages": ["sql"]}, "macro.dbt.materialization_test_default": {"name": "materialization_test_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "unique_id": "macro.dbt.materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0129752, "supported_languages": ["sql"]}, "macro.dbt.get_test_sql": {"name": "get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0133219, "supported_languages": null}, "macro.dbt.default__get_test_sql": {"name": "default__get_test_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "unique_id": "macro.dbt.default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.01356, "supported_languages": null}, "macro.dbt.get_where_subquery": {"name": "get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.013843, "supported_languages": null}, "macro.dbt.default__get_where_subquery": {"name": "default__get_where_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "unique_id": "macro.dbt.default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0141308, "supported_languages": null}, "macro.dbt.get_quoted_csv": {"name": "get_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.015578, "supported_languages": null}, "macro.dbt.diff_columns": {"name": "diff_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.016012, "supported_languages": null}, "macro.dbt.diff_column_data_types": {"name": "diff_column_data_types", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type and not sc.can_expand_to(other_column=tc) %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0165162, "supported_languages": null}, "macro.dbt.get_merge_update_columns": {"name": "get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.get_merge_update_columns", "macro_sql": "{% macro get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {{ return(adapter.dispatch('get_merge_update_columns', 'dbt')(merge_update_columns, merge_exclude_columns, dest_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.016696, "supported_languages": null}, "macro.dbt.default__get_merge_update_columns": {"name": "default__get_merge_update_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "unique_id": "macro.dbt.default__get_merge_update_columns", "macro_sql": "{% macro default__get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) %}\n  {%- set default_cols = dest_columns | map(attribute=\"quoted\") | list -%}\n\n  {%- if merge_update_columns and merge_exclude_columns -%}\n    {{ exceptions.raise_compiler_error(\n        'Model cannot specify merge_update_columns and merge_exclude_columns. Please update model to use only one config'\n    )}}\n  {%- elif merge_update_columns -%}\n    {%- set update_columns = merge_update_columns -%}\n  {%- elif merge_exclude_columns -%}\n    {%- set update_columns = [] -%}\n    {%- for column in dest_columns -%}\n      {% if column.column | lower not in merge_exclude_columns | map(\"lower\") | list %}\n        {%- do update_columns.append(column.quoted) -%}\n      {% endif %}\n    {%- endfor -%}\n  {%- else -%}\n    {%- set update_columns = default_cols -%}\n  {%- endif -%}\n\n  {{ return(update_columns) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.017249, "supported_languages": null}, "macro.dbt.get_merge_sql": {"name": "get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n   -- back compat for old kwarg name\n  {% set incremental_predicates = kwargs.get('predicates', incremental_predicates) %}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.022366, "supported_languages": null}, "macro.dbt.default__get_merge_sql": {"name": "default__get_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, incremental_predicates=none) -%}\n    {%- set predicates = [] if incremental_predicates is none else [] + incremental_predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set merge_update_columns = config.get('merge_update_columns') -%}\n    {%- set merge_exclude_columns = config.get('merge_exclude_columns') -%}\n    {%- set update_columns = get_merge_update_columns(merge_update_columns, merge_exclude_columns, dest_columns) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{\"(\" ~ predicates | join(\") and (\") ~ \")\"}}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv", "macro.dbt.get_merge_update_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.023662, "supported_languages": null}, "macro.dbt.get_delete_insert_merge_sql": {"name": "get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns, incremental_predicates) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.023873, "supported_languages": null}, "macro.dbt.default__get_delete_insert_merge_sql": {"name": "default__get_delete_insert_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns, incremental_predicates) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last}}\n                {% endfor %}\n                {% if incremental_predicates %}\n                    {% for predicate in incremental_predicates %}\n                        and {{ predicate }}\n                    {% endfor %}\n                {% endif %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            )\n            {%- if incremental_predicates %}\n                {% for predicate in incremental_predicates %}\n                    and {{ predicate }}\n                {% endfor %}\n            {%- endif -%};\n\n        {% endif %}\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0246432, "supported_languages": null}, "macro.dbt.get_insert_overwrite_merge_sql": {"name": "get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0248451, "supported_languages": null}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"name": "default__get_insert_overwrite_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {#-- The only time include_sql_header is True: --#}\n    {#-- BigQuery + insert_overwrite strategy + \"static\" partitions config --#}\n    {#-- We should consider including the sql header at the materialization level instead --#}\n\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.025346, "supported_languages": null}, "macro.dbt.is_incremental": {"name": "is_incremental", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "unique_id": "macro.dbt.is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.02586, "supported_languages": null}, "macro.dbt.get_incremental_append_sql": {"name": "get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_append_sql", "macro_sql": "{% macro get_incremental_append_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_append_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.026562, "supported_languages": null}, "macro.dbt.default__get_incremental_append_sql": {"name": "default__get_incremental_append_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_append_sql", "macro_sql": "{% macro default__get_incremental_append_sql(arg_dict) %}\n\n  {% do return(get_insert_into_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_into_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.026743, "supported_languages": null}, "macro.dbt.get_incremental_delete_insert_sql": {"name": "get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_delete_insert_sql", "macro_sql": "{% macro get_incremental_delete_insert_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_delete_insert_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_delete_insert_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.026885, "supported_languages": null}, "macro.dbt.default__get_incremental_delete_insert_sql": {"name": "default__get_incremental_delete_insert_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_delete_insert_sql", "macro_sql": "{% macro default__get_incremental_delete_insert_sql(arg_dict) %}\n\n  {% do return(get_delete_insert_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0271082, "supported_languages": null}, "macro.dbt.get_incremental_merge_sql": {"name": "get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_merge_sql", "macro_sql": "{% macro get_incremental_merge_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_merge_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.027244, "supported_languages": null}, "macro.dbt.default__get_incremental_merge_sql": {"name": "default__get_incremental_merge_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_merge_sql", "macro_sql": "{% macro default__get_incremental_merge_sql(arg_dict) %}\n\n  {% do return(get_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"unique_key\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.02747, "supported_languages": null}, "macro.dbt.get_incremental_insert_overwrite_sql": {"name": "get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_insert_overwrite_sql", "macro_sql": "{% macro get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_insert_overwrite_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_incremental_insert_overwrite_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.027613, "supported_languages": null}, "macro.dbt.default__get_incremental_insert_overwrite_sql": {"name": "default__get_incremental_insert_overwrite_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_insert_overwrite_sql", "macro_sql": "{% macro default__get_incremental_insert_overwrite_sql(arg_dict) %}\n\n  {% do return(get_insert_overwrite_merge_sql(arg_dict[\"target_relation\"], arg_dict[\"temp_relation\"], arg_dict[\"dest_columns\"], arg_dict[\"incremental_predicates\"])) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.02781, "supported_languages": null}, "macro.dbt.get_incremental_default_sql": {"name": "get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_incremental_default_sql", "macro_sql": "{% macro get_incremental_default_sql(arg_dict) %}\n\n  {{ return(adapter.dispatch('get_incremental_default_sql', 'dbt')(arg_dict)) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_incremental_default_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.028116, "supported_languages": null}, "macro.dbt.default__get_incremental_default_sql": {"name": "default__get_incremental_default_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.default__get_incremental_default_sql", "macro_sql": "{% macro default__get_incremental_default_sql(arg_dict) %}\n\n  {% do return(get_incremental_append_sql(arg_dict)) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_incremental_append_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0282571, "supported_languages": null}, "macro.dbt.get_insert_into_sql": {"name": "get_insert_into_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/strategies.sql", "original_file_path": "macros/materializations/models/incremental/strategies.sql", "unique_id": "macro.dbt.get_insert_into_sql", "macro_sql": "{% macro get_insert_into_sql(target_relation, temp_relation, dest_columns) %}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ temp_relation }}\n    )\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.028487, "supported_languages": null}, "macro.dbt.materialization_incremental_default": {"name": "materialization_incremental_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "unique_id": "macro.dbt.materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  -- relations\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') -%}\n  {%- set temp_relation = make_temp_relation(target_relation)-%}\n  {%- set intermediate_relation = make_intermediate_relation(target_relation)-%}\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n\n  -- configs\n  {%- set unique_key = config.get('unique_key') -%}\n  {%- set full_refresh_mode = (should_full_refresh()  or existing_relation.is_view) -%}\n  {%- set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') -%}\n\n  -- the temp_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation)-%}\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n   -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = get_create_table_as_sql(False, target_relation, sql) %}\n  {% elif full_refresh_mode %}\n      {% set build_sql = get_create_table_as_sql(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n  {% else %}\n    {% do run_query(get_create_table_as_sql(True, temp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=temp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, temp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n\n    {#-- Get the incremental_strategy, the macro to use for the strategy, and build the sql --#}\n    {% set incremental_strategy = config.get('incremental_strategy') or 'default' %}\n    {% set incremental_predicates = config.get('predicates', none) or config.get('incremental_predicates', none) %}\n    {% set strategy_sql_macro_func = adapter.get_incremental_strategy_macro(context, incremental_strategy) %}\n    {% set strategy_arg_dict = ({'target_relation': target_relation, 'temp_relation': temp_relation, 'unique_key': unique_key, 'dest_columns': dest_columns, 'incremental_predicates': incremental_predicates }) %}\n    {% set build_sql = strategy_sql_macro_func(strategy_arg_dict) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n      {% do to_drop.append(backup_relation) %}\n  {% endif %}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_temp_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.get_create_table_as_sql", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.statement", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.032207, "supported_languages": ["sql"]}, "macro.dbt.incremental_validate_on_schema_change": {"name": "incremental_validate_on_schema_change", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0364642, "supported_languages": null}, "macro.dbt.check_for_schema_changes": {"name": "check_for_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.037333, "supported_languages": null}, "macro.dbt.sync_column_schemas": {"name": "sync_column_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0383081, "supported_languages": null}, "macro.dbt.process_schema_changes": {"name": "process_schema_changes", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "unique_id": "macro.dbt.process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n\n              Additional troubleshooting context:\n                 Source columns not in target: {{ schema_changes_dict['source_not_in_target'] }}\n                 Target columns not in source: {{ schema_changes_dict['target_not_in_source'] }}\n                 New column types: {{ schema_changes_dict['new_target_types'] }}\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0389278, "supported_languages": null}, "macro.dbt.get_table_columns_and_constraints": {"name": "get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_table_columns_and_constraints", "macro_sql": "{%- macro get_table_columns_and_constraints() -%}\n  {{ adapter.dispatch('get_table_columns_and_constraints', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.039695, "supported_languages": null}, "macro.dbt.default__get_table_columns_and_constraints": {"name": "default__get_table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_table_columns_and_constraints", "macro_sql": "{% macro default__get_table_columns_and_constraints() -%}\n  {{ return(table_columns_and_constraints()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.table_columns_and_constraints"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.039786, "supported_languages": null}, "macro.dbt.table_columns_and_constraints": {"name": "table_columns_and_constraints", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.table_columns_and_constraints", "macro_sql": "{% macro table_columns_and_constraints() %}\n  {# loop through user_provided_columns to create DDL with data types and constraints #}\n    {%- set raw_column_constraints = adapter.render_raw_columns_constraints(raw_columns=model['columns']) -%}\n    {%- set raw_model_constraints = adapter.render_raw_model_constraints(raw_constraints=model['constraints']) -%}\n    (\n    {% for c in raw_column_constraints -%}\n      {{ c }}{{ \",\" if not loop.last or raw_model_constraints }}\n    {% endfor %}\n    {% for c in raw_model_constraints -%}\n        {{ c }}{{ \",\" if not loop.last }}\n    {% endfor -%}\n    )\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.040187, "supported_languages": null}, "macro.dbt.get_assert_columns_equivalent": {"name": "get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.get_assert_columns_equivalent", "macro_sql": "\n\n{%- macro get_assert_columns_equivalent(sql) -%}\n  {{ adapter.dispatch('get_assert_columns_equivalent', 'dbt')(sql) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.040321, "supported_languages": null}, "macro.dbt.default__get_assert_columns_equivalent": {"name": "default__get_assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__get_assert_columns_equivalent", "macro_sql": "{% macro default__get_assert_columns_equivalent(sql) -%}\n  {{ return(assert_columns_equivalent(sql)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.040423, "supported_languages": null}, "macro.dbt.assert_columns_equivalent": {"name": "assert_columns_equivalent", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.assert_columns_equivalent", "macro_sql": "{% macro assert_columns_equivalent(sql) %}\n  {#-- Obtain the column schema provided by sql file. #}\n  {%- set sql_file_provided_columns = get_column_schema_from_query(sql) -%}\n  {#--Obtain the column schema provided by the schema file by generating an 'empty schema' query from the model's columns. #}\n  {%- set schema_file_provided_columns = get_column_schema_from_query(get_empty_schema_sql(model['columns'])) -%}\n\n  {#-- create dictionaries with name and formatted data type and strings for exception #}\n  {%- set sql_columns = format_columns(sql_file_provided_columns) -%}\n  {%- set yaml_columns = format_columns(schema_file_provided_columns)  -%}\n\n  {%- if sql_columns|length != yaml_columns|length -%}\n    {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n  {%- endif -%}\n\n  {%- for sql_col in sql_columns -%}\n    {%- set yaml_col = [] -%}\n    {%- for this_col in yaml_columns -%}\n      {%- if this_col['name'] == sql_col['name'] -%}\n        {%- do yaml_col.append(this_col) -%}\n        {%- break -%}\n      {%- endif -%}\n    {%- endfor -%}\n    {%- if not yaml_col -%}\n      {#-- Column with name not found in yaml #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n    {%- if sql_col['formatted'] != yaml_col[0]['formatted'] -%}\n      {#-- Column data types don't match #}\n      {%- do exceptions.raise_contract_error(yaml_columns, sql_columns) -%}\n    {%- endif -%}\n  {%- endfor -%}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_column_schema_from_query", "macro.dbt.get_empty_schema_sql", "macro.dbt.format_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.04123, "supported_languages": null}, "macro.dbt.format_columns": {"name": "format_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.format_columns", "macro_sql": "{% macro format_columns(columns) %}\n  {% set formatted_columns = [] %}\n  {% for column in columns %}\n    {%- set formatted_column = adapter.dispatch('format_column', 'dbt')(column) -%}\n    {%- do formatted_columns.append(formatted_column) -%}\n  {% endfor %}\n  {{ return(formatted_columns) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__format_column"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0415108, "supported_languages": null}, "macro.dbt.default__format_column": {"name": "default__format_column", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/columns_spec_ddl.sql", "original_file_path": "macros/materializations/models/table/columns_spec_ddl.sql", "unique_id": "macro.dbt.default__format_column", "macro_sql": "{% macro default__format_column(column) -%}\n  {% set data_type = column.dtype %}\n  {% set formatted = column.column.lower() ~ \" \" ~ data_type %}\n  {{ return({'name': column.name, 'data_type': data_type, 'formatted': formatted}) }}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.041767, "supported_languages": null}, "macro.dbt.materialization_table_default": {"name": "materialization_table_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "unique_id": "macro.dbt.materialization_table_default", "macro_sql": "{% materialization table, default %}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='table') %}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if existing_relation is not none %}\n      {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.043726, "supported_languages": ["sql"]}, "macro.dbt.get_create_table_as_sql": {"name": "get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.044411, "supported_languages": null}, "macro.dbt.default__get_create_table_as_sql": {"name": "default__get_create_table_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.044547, "supported_languages": null}, "macro.dbt.create_table_as": {"name": "create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, compiled_code, language='sql') -%}\n  {# backward compatibility for create_table_as that does not support language #}\n  {% if language == \"sql\" %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code)}}\n  {% else %}\n    {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, compiled_code, language) }}\n  {% endif %}\n\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.044864, "supported_languages": null}, "macro.dbt.default__create_table_as": {"name": "default__create_table_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  {% set contract_config = config.get('contract') %}\n  {% if contract_config.enforced %}\n    {{ get_assert_columns_equivalent(sql) }}\n    {{ get_table_columns_and_constraints() }}\n    {%- set sql = get_select_subquery(sql) %}\n  {% endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent", "macro.dbt.get_table_columns_and_constraints", "macro.dbt.get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.045351, "supported_languages": null}, "macro.dbt.get_select_subquery": {"name": "get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.get_select_subquery", "macro_sql": "{% macro get_select_subquery(sql) %}\n  {{ return(adapter.dispatch('get_select_subquery', 'dbt')(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_select_subquery"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.045491, "supported_languages": null}, "macro.dbt.default__get_select_subquery": {"name": "default__get_select_subquery", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "unique_id": "macro.dbt.default__get_select_subquery", "macro_sql": "{% macro default__get_select_subquery(sql) %}\n    select\n    {% for column in model['columns'] %}\n      {{ column }}{{ \", \" if not loop.last }}\n    {% endfor %}\n    from (\n        {{ sql }}\n    ) as model_subq\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.045683, "supported_languages": null}, "macro.dbt.materialization_view_default": {"name": "materialization_view_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "unique_id": "macro.dbt.materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set existing_relation = load_cached_relation(this) -%}\n  {%- set target_relation = this.incorporate(type='view') -%}\n  {%- set intermediate_relation =  make_intermediate_relation(target_relation) -%}\n\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = load_cached_relation(intermediate_relation) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"existing_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the existing_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the existing_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if existing_relation is none else existing_relation.type -%}\n  {%- set backup_relation = make_backup_relation(target_relation, backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = load_cached_relation(backup_relation) -%}\n  -- grab current tables grants config for comparision later on\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if existing_relation is not none %}\n    {{ adapter.rename_relation(existing_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% set should_revoke = should_revoke(existing_relation, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "depends_on": {"macros": ["macro.dbt.load_cached_relation", "macro.dbt.make_intermediate_relation", "macro.dbt.make_backup_relation", "macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.047745, "supported_languages": ["sql"]}, "macro.dbt.handle_existing_table": {"name": "handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "unique_id": "macro.dbt.handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0479841, "supported_languages": null}, "macro.dbt.default__handle_existing_table": {"name": "default__handle_existing_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "unique_id": "macro.dbt.default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0482528, "supported_languages": null}, "macro.dbt.create_or_replace_view": {"name": "create_or_replace_view", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "unique_id": "macro.dbt.create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n  {% set grant_config = config.get('grants') %}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {% set should_revoke = should_revoke(exists_as_view, full_refresh_mode=True) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.049611, "supported_languages": null}, "macro.dbt.get_create_view_as_sql": {"name": "get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0499709, "supported_languages": null}, "macro.dbt.default__get_create_view_as_sql": {"name": "default__get_create_view_as_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0500941, "supported_languages": null}, "macro.dbt.create_view_as": {"name": "create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.050229, "supported_languages": null}, "macro.dbt.default__create_view_as": {"name": "default__create_view_as", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "unique_id": "macro.dbt.default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }}\n    {% set contract_config = config.get('contract') %}\n    {% if contract_config.enforced %}\n      {{ get_assert_columns_equivalent(sql) }}\n    {%- endif %}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.get_assert_columns_equivalent"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.050553, "supported_languages": null}, "macro.dbt.materialization_seed_default": {"name": "materialization_seed_default", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "unique_id": "macro.dbt.materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set grant_config = config.get('grants') -%}\n  {%- set agate_table = load_agate_table() -%}\n  -- grab current tables grants config for comparision later on\n\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ get_csv_sql(create_table_sql, sql) }};\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n\n  {% set should_revoke = should_revoke(old_relation, full_refresh_mode) %}\n  {% do apply_grants(target_relation, grant_config, should_revoke=should_revoke) %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.get_csv_sql", "macro.dbt.should_revoke", "macro.dbt.apply_grants", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.053121, "supported_languages": ["sql"]}, "macro.dbt.create_csv_table": {"name": "create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.05726, "supported_languages": null}, "macro.dbt.default__create_csv_table": {"name": "default__create_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0579882, "supported_languages": null}, "macro.dbt.reset_csv_table": {"name": "reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0581892, "supported_languages": null}, "macro.dbt.default__reset_csv_table": {"name": "default__reset_csv_table", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0585642, "supported_languages": null}, "macro.dbt.get_csv_sql": {"name": "get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_csv_sql", "macro_sql": "{% macro get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ adapter.dispatch('get_csv_sql', 'dbt')(create_or_truncate_sql, insert_sql) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_csv_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.058727, "supported_languages": null}, "macro.dbt.default__get_csv_sql": {"name": "default__get_csv_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_csv_sql", "macro_sql": "{% macro default__get_csv_sql(create_or_truncate_sql, insert_sql) %}\n    {{ create_or_truncate_sql }};\n    -- dbt seed --\n    {{ insert_sql }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.058829, "supported_languages": null}, "macro.dbt.get_binding_char": {"name": "get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.058936, "supported_languages": null}, "macro.dbt.default__get_binding_char": {"name": "default__get_binding_char", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0590248, "supported_languages": null}, "macro.dbt.get_batch_size": {"name": "get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.059159, "supported_languages": null}, "macro.dbt.default__get_batch_size": {"name": "default__get_batch_size", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0592582, "supported_languages": null}, "macro.dbt.get_seed_column_quoted_csv": {"name": "get_seed_column_quoted_csv", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.059628, "supported_languages": null}, "macro.dbt.load_csv_rows": {"name": "load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.059774, "supported_languages": null}, "macro.dbt.default__load_csv_rows": {"name": "default__load_csv_rows", "resource_type": "macro", "package_name": "dbt", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "unique_id": "macro.dbt.default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0608141, "supported_languages": null}, "macro.dbt.generate_alias_name": {"name": "generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.061188, "supported_languages": null}, "macro.dbt.default__generate_alias_name": {"name": "default__generate_alias_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "unique_id": "macro.dbt.default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- elif node.version -%}\n\n        {{ return(node.name ~ \"_v\" ~ (node.version | replace(\".\", \"_\"))) }}\n\n    {%- else -%}\n\n        {{ node.name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.061557, "supported_languages": null}, "macro.dbt.generate_schema_name": {"name": "generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0620039, "supported_languages": null}, "macro.dbt.default__generate_schema_name": {"name": "default__generate_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.062218, "supported_languages": null}, "macro.dbt.generate_schema_name_for_env": {"name": "generate_schema_name_for_env", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "unique_id": "macro.dbt.generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.062449, "supported_languages": null}, "macro.dbt.generate_database_name": {"name": "generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.062769, "supported_languages": null}, "macro.dbt.default__generate_database_name": {"name": "default__generate_database_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "unique_id": "macro.dbt.default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.062964, "supported_languages": null}, "macro.dbt.default__test_relationships": {"name": "default__test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "unique_id": "macro.dbt.default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.063238, "supported_languages": null}, "macro.dbt.default__test_not_null": {"name": "default__test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "unique_id": "macro.dbt.default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.063471, "supported_languages": null}, "macro.dbt.default__test_unique": {"name": "default__test_unique", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "unique_id": "macro.dbt.default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.063659, "supported_languages": null}, "macro.dbt.default__test_accepted_values": {"name": "default__test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "unique_id": "macro.dbt.default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0641038, "supported_languages": null}, "macro.dbt.statement": {"name": "statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.statement", "macro_sql": "\n{%- macro statement(name=None, fetch_result=False, auto_begin=True, language='sql') -%}\n  {%- if execute: -%}\n    {%- set compiled_code = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime {} for node \"{}\"'.format(language, model['unique_id'])) }}\n      {{ write(compiled_code) }}\n    {%- endif -%}\n    {%- if language == 'sql'-%}\n      {%- set res, table = adapter.execute(compiled_code, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- elif language == 'python' -%}\n      {%- set res = submit_python_job(model, compiled_code) -%}\n      {#-- TODO: What should table be for python models? --#}\n      {%- set table = None -%}\n    {%- else -%}\n      {% do exceptions.raise_compiler_error(\"statement macro didn't get supported language\") %}\n    {%- endif -%}\n\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.065254, "supported_languages": null}, "macro.dbt.noop_statement": {"name": "noop_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.065702, "supported_languages": null}, "macro.dbt.run_query": {"name": "run_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "unique_id": "macro.dbt.run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.065931, "supported_languages": null}, "macro.dbt.convert_datetime": {"name": "convert_datetime", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.067436, "supported_languages": null}, "macro.dbt.dates_in_range": {"name": "dates_in_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.068362, "supported_languages": null}, "macro.dbt.partition_range": {"name": "partition_range", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.068937, "supported_languages": null}, "macro.dbt.py_current_timestring": {"name": "py_current_timestring", "resource_type": "macro", "package_name": "dbt", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "unique_id": "macro.dbt.py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.069124, "supported_languages": null}, "macro.dbt.except": {"name": "except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__except"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.069314, "supported_languages": null}, "macro.dbt.default__except": {"name": "default__except", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/except.sql", "original_file_path": "macros/utils/except.sql", "unique_id": "macro.dbt.default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.069373, "supported_languages": null}, "macro.dbt.replace": {"name": "replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt') (field, old_chars, new_chars)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.069629, "supported_languages": null}, "macro.dbt.default__replace": {"name": "default__replace", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/replace.sql", "original_file_path": "macros/utils/replace.sql", "unique_id": "macro.dbt.default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.069769, "supported_languages": null}, "macro.dbt.concat": {"name": "concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt')(fields)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.069961, "supported_languages": null}, "macro.dbt.default__concat": {"name": "default__concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/concat.sql", "original_file_path": "macros/utils/concat.sql", "unique_id": "macro.dbt.default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.070059, "supported_languages": null}, "macro.dbt.length": {"name": "length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__length"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0702589, "supported_languages": null}, "macro.dbt.default__length": {"name": "default__length", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/length.sql", "original_file_path": "macros/utils/length.sql", "unique_id": "macro.dbt.default__length", "macro_sql": "{% macro default__length(expression) %}\n\n    length(\n        {{ expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.070341, "supported_languages": null}, "macro.dbt.dateadd": {"name": "dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0707278, "supported_languages": null}, "macro.dbt.default__dateadd": {"name": "default__dateadd", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/dateadd.sql", "original_file_path": "macros/utils/dateadd.sql", "unique_id": "macro.dbt.default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.070861, "supported_languages": null}, "macro.dbt.intersect": {"name": "intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.071035, "supported_languages": null}, "macro.dbt.default__intersect": {"name": "default__intersect", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/intersect.sql", "original_file_path": "macros/utils/intersect.sql", "unique_id": "macro.dbt.default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.071094, "supported_languages": null}, "macro.dbt.escape_single_quotes": {"name": "escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.escape_single_quotes", "macro_sql": "{% macro escape_single_quotes(expression) %}\n      {{ return(adapter.dispatch('escape_single_quotes', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__escape_single_quotes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.071291, "supported_languages": null}, "macro.dbt.default__escape_single_quotes": {"name": "default__escape_single_quotes", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/escape_single_quotes.sql", "original_file_path": "macros/utils/escape_single_quotes.sql", "unique_id": "macro.dbt.default__escape_single_quotes", "macro_sql": "{% macro default__escape_single_quotes(expression) -%}\n{{ expression | replace(\"'\",\"''\") }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0714052, "supported_languages": null}, "macro.dbt.right": {"name": "right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt') (string_text, length_expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__right"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.071625, "supported_languages": null}, "macro.dbt.default__right": {"name": "default__right", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/right.sql", "original_file_path": "macros/utils/right.sql", "unique_id": "macro.dbt.default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.071729, "supported_languages": null}, "macro.dbt.listagg": {"name": "listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.listagg", "macro_sql": "{% macro listagg(measure, delimiter_text=\"','\", order_by_clause=none, limit_num=none) -%}\n    {{ return(adapter.dispatch('listagg', 'dbt') (measure, delimiter_text, order_by_clause, limit_num)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__listagg"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.072217, "supported_languages": null}, "macro.dbt.default__listagg": {"name": "default__listagg", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/listagg.sql", "original_file_path": "macros/utils/listagg.sql", "unique_id": "macro.dbt.default__listagg", "macro_sql": "{% macro default__listagg(measure, delimiter_text, order_by_clause, limit_num) -%}\n\n    {% if limit_num -%}\n    array_to_string(\n        array_slice(\n            array_agg(\n                {{ measure }}\n            ){% if order_by_clause -%}\n            within group ({{ order_by_clause }})\n            {%- endif %}\n            ,0\n            ,{{ limit_num }}\n        ),\n        {{ delimiter_text }}\n        )\n    {%- else %}\n    listagg(\n        {{ measure }},\n        {{ delimiter_text }}\n        )\n        {% if order_by_clause -%}\n        within group ({{ order_by_clause }})\n        {%- endif %}\n    {%- endif %}\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.072531, "supported_languages": null}, "macro.dbt.datediff": {"name": "datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt')(first_date, second_date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__datediff"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.072793, "supported_languages": null}, "macro.dbt.default__datediff": {"name": "default__datediff", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/datediff.sql", "original_file_path": "macros/utils/datediff.sql", "unique_id": "macro.dbt.default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) -%}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.072924, "supported_languages": null}, "macro.dbt.safe_cast": {"name": "safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt') (field, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.073143, "supported_languages": null}, "macro.dbt.default__safe_cast": {"name": "default__safe_cast", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/safe_cast.sql", "original_file_path": "macros/utils/safe_cast.sql", "unique_id": "macro.dbt.default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.073251, "supported_languages": null}, "macro.dbt.hash": {"name": "hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt') (field)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.073449, "supported_languages": null}, "macro.dbt.default__hash": {"name": "default__hash", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/hash.sql", "original_file_path": "macros/utils/hash.sql", "unique_id": "macro.dbt.default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{ field }} as {{ api.Column.translate_type('string') }}))\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.073577, "supported_languages": null}, "macro.dbt.cast_bool_to_text": {"name": "cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt') (field) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.073764, "supported_languages": null}, "macro.dbt.default__cast_bool_to_text": {"name": "default__cast_bool_to_text", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/cast_bool_to_text.sql", "original_file_path": "macros/utils/cast_bool_to_text.sql", "unique_id": "macro.dbt.default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ api.Column.translate_type('string') }})\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0738828, "supported_languages": null}, "macro.dbt.any_value": {"name": "any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.any_value", "macro_sql": "{% macro any_value(expression) -%}\n    {{ return(adapter.dispatch('any_value', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__any_value"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.074065, "supported_languages": null}, "macro.dbt.default__any_value": {"name": "default__any_value", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/any_value.sql", "original_file_path": "macros/utils/any_value.sql", "unique_id": "macro.dbt.default__any_value", "macro_sql": "{% macro default__any_value(expression) -%}\n\n    any_value({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.074144, "supported_languages": null}, "macro.dbt.position": {"name": "position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt') (substring_text, string_text)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__position"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.074364, "supported_languages": null}, "macro.dbt.default__position": {"name": "default__position", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/position.sql", "original_file_path": "macros/utils/position.sql", "unique_id": "macro.dbt.default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0744681, "supported_languages": null}, "macro.dbt.string_literal": {"name": "string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt') (value)) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.074647, "supported_languages": null}, "macro.dbt.default__string_literal": {"name": "default__string_literal", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/literal.sql", "original_file_path": "macros/utils/literal.sql", "unique_id": "macro.dbt.default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0747259, "supported_languages": null}, "macro.dbt.type_string": {"name": "type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_string"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.075489, "supported_languages": null}, "macro.dbt.default__type_string": {"name": "default__type_string", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_string", "macro_sql": "{% macro default__type_string() %}\n    {{ return(api.Column.translate_type(\"string\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.075605, "supported_languages": null}, "macro.dbt.type_timestamp": {"name": "type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0757298, "supported_languages": null}, "macro.dbt.default__type_timestamp": {"name": "default__type_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    {{ return(api.Column.translate_type(\"timestamp\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0759501, "supported_languages": null}, "macro.dbt.type_float": {"name": "type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.076073, "supported_languages": null}, "macro.dbt.default__type_float": {"name": "default__type_float", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_float", "macro_sql": "{% macro default__type_float() %}\n    {{ return(api.Column.translate_type(\"float\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.07619, "supported_languages": null}, "macro.dbt.type_numeric": {"name": "type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.076311, "supported_languages": null}, "macro.dbt.default__type_numeric": {"name": "default__type_numeric", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    {{ return(api.Column.numeric_type(\"numeric\", 28, 6)) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0764449, "supported_languages": null}, "macro.dbt.type_bigint": {"name": "type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.076564, "supported_languages": null}, "macro.dbt.default__type_bigint": {"name": "default__type_bigint", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    {{ return(api.Column.translate_type(\"bigint\")) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0766752, "supported_languages": null}, "macro.dbt.type_int": {"name": "type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.076798, "supported_languages": null}, "macro.dbt.default__type_int": {"name": "default__type_int", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_int", "macro_sql": "{%- macro default__type_int() -%}\n  {{ return(api.Column.translate_type(\"integer\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.076905, "supported_languages": null}, "macro.dbt.type_boolean": {"name": "type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.type_boolean", "macro_sql": "\n\n{%- macro type_boolean() -%}\n  {{ return(adapter.dispatch('type_boolean', 'dbt')()) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.default__type_boolean"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.077023, "supported_languages": null}, "macro.dbt.default__type_boolean": {"name": "default__type_boolean", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/data_types.sql", "original_file_path": "macros/utils/data_types.sql", "unique_id": "macro.dbt.default__type_boolean", "macro_sql": "{%- macro default__type_boolean() -%}\n  {{ return(api.Column.translate_type(\"boolean\")) }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.077129, "supported_languages": null}, "macro.dbt.array_concat": {"name": "array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.array_concat", "macro_sql": "{% macro array_concat(array_1, array_2) -%}\n  {{ return(adapter.dispatch('array_concat', 'dbt')(array_1, array_2)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_concat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0773408, "supported_languages": null}, "macro.dbt.default__array_concat": {"name": "default__array_concat", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_concat.sql", "original_file_path": "macros/utils/array_concat.sql", "unique_id": "macro.dbt.default__array_concat", "macro_sql": "{% macro default__array_concat(array_1, array_2) -%}\n    array_cat({{ array_1 }}, {{ array_2 }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.077444, "supported_languages": null}, "macro.dbt.bool_or": {"name": "bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.bool_or", "macro_sql": "{% macro bool_or(expression) -%}\n    {{ return(adapter.dispatch('bool_or', 'dbt') (expression)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__bool_or"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.077632, "supported_languages": null}, "macro.dbt.default__bool_or": {"name": "default__bool_or", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/bool_or.sql", "original_file_path": "macros/utils/bool_or.sql", "unique_id": "macro.dbt.default__bool_or", "macro_sql": "{% macro default__bool_or(expression) -%}\n\n    bool_or({{ expression }})\n\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.077711, "supported_languages": null}, "macro.dbt.last_day": {"name": "last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt') (date, datepart)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.077973, "supported_languages": null}, "macro.dbt.default_last_day": {"name": "default_last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default_last_day", "macro_sql": "\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt.dateadd('day', '-1',\n        dbt.dateadd(datepart, '1', dbt.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt.dateadd", "macro.dbt.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0781739, "supported_languages": null}, "macro.dbt.default__last_day": {"name": "default__last_day", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/last_day.sql", "original_file_path": "macros/utils/last_day.sql", "unique_id": "macro.dbt.default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt.default_last_day(date, datepart)}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0782819, "supported_languages": null}, "macro.dbt.split_part": {"name": "split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__split_part"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0787032, "supported_languages": null}, "macro.dbt.default__split_part": {"name": "default__split_part", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt.default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.078836, "supported_languages": null}, "macro.dbt._split_part_negative": {"name": "_split_part_negative", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/split_part.sql", "original_file_path": "macros/utils/split_part.sql", "unique_id": "macro.dbt._split_part_negative", "macro_sql": "{% macro _split_part_negative(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n          length({{ string_text }})\n          - length(\n              replace({{ string_text }},  {{ delimiter_text }}, '')\n          ) + 2 {{ part_number }}\n        )\n\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0790029, "supported_languages": null}, "macro.dbt.date_trunc": {"name": "date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt') (datepart, date)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.079217, "supported_languages": null}, "macro.dbt.default__date_trunc": {"name": "default__date_trunc", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/date_trunc.sql", "original_file_path": "macros/utils/date_trunc.sql", "unique_id": "macro.dbt.default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) -%}\n    date_trunc('{{datepart}}', {{date}})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.079318, "supported_languages": null}, "macro.dbt.array_construct": {"name": "array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.array_construct", "macro_sql": "{% macro array_construct(inputs=[], data_type=api.Column.translate_type('integer')) -%}\n  {{ return(adapter.dispatch('array_construct', 'dbt')(inputs, data_type)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_construct"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.079605, "supported_languages": null}, "macro.dbt.default__array_construct": {"name": "default__array_construct", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_construct.sql", "original_file_path": "macros/utils/array_construct.sql", "unique_id": "macro.dbt.default__array_construct", "macro_sql": "{% macro default__array_construct(inputs, data_type) -%}\n    {% if inputs|length > 0 %}\n    array[ {{ inputs|join(' , ') }} ]\n    {% else %}\n    array[]::{{data_type}}[]\n    {% endif %}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.079807, "supported_languages": null}, "macro.dbt.array_append": {"name": "array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.array_append", "macro_sql": "{% macro array_append(array, new_element) -%}\n  {{ return(adapter.dispatch('array_append', 'dbt')(array, new_element)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__array_append"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0800252, "supported_languages": null}, "macro.dbt.default__array_append": {"name": "default__array_append", "resource_type": "macro", "package_name": "dbt", "path": "macros/utils/array_append.sql", "original_file_path": "macros/utils/array_append.sql", "unique_id": "macro.dbt.default__array_append", "macro_sql": "{% macro default__array_append(array, new_element) -%}\n    array_append({{ array }}, {{ new_element }})\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0801878, "supported_languages": null}, "macro.dbt.create_schema": {"name": "create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.080514, "supported_languages": null}, "macro.dbt.default__create_schema": {"name": "default__create_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0810618, "supported_languages": null}, "macro.dbt.drop_schema": {"name": "drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.081187, "supported_languages": null}, "macro.dbt.default__drop_schema": {"name": "default__drop_schema", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "unique_id": "macro.dbt.default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0813189, "supported_languages": null}, "macro.dbt.current_timestamp": {"name": "current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp", "macro_sql": "{%- macro current_timestamp() -%}\n    {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0816882, "supported_languages": null}, "macro.dbt.default__current_timestamp": {"name": "default__current_timestamp", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter ' + adapter.type()) }}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.081803, "supported_languages": null}, "macro.dbt.snapshot_get_time": {"name": "snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.snapshot_get_time", "macro_sql": "\n\n{%- macro snapshot_get_time() -%}\n    {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.081907, "supported_languages": null}, "macro.dbt.default__snapshot_get_time": {"name": "default__snapshot_get_time", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() %}\n    {{ current_timestamp() }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.081982, "supported_languages": null}, "macro.dbt.current_timestamp_backcompat": {"name": "current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_backcompat", "macro_sql": "{% macro current_timestamp_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.082098, "supported_languages": null}, "macro.dbt.default__current_timestamp_backcompat": {"name": "default__current_timestamp_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_backcompat", "macro_sql": "{% macro default__current_timestamp_backcompat() %}\n    current_timestamp::timestamp\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.082151, "supported_languages": null}, "macro.dbt.current_timestamp_in_utc_backcompat": {"name": "current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.current_timestamp_in_utc_backcompat", "macro_sql": "{% macro current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_in_utc_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp_in_utc_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0822752, "supported_languages": null}, "macro.dbt.default__current_timestamp_in_utc_backcompat": {"name": "default__current_timestamp_in_utc_backcompat", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/timestamps.sql", "original_file_path": "macros/adapters/timestamps.sql", "unique_id": "macro.dbt.default__current_timestamp_in_utc_backcompat", "macro_sql": "{% macro default__current_timestamp_in_utc_backcompat() %}\n    {{ return(adapter.dispatch('current_timestamp_backcompat', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.current_timestamp_backcompat", "macro.dbt_postgres.postgres__current_timestamp_backcompat"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.082397, "supported_languages": null}, "macro.dbt.get_create_index_sql": {"name": "get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.082741, "supported_languages": null}, "macro.dbt.default__get_create_index_sql": {"name": "default__get_create_index_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.082849, "supported_languages": null}, "macro.dbt.create_indexes": {"name": "create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.082962, "supported_languages": null}, "macro.dbt.default__create_indexes": {"name": "default__create_indexes", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "unique_id": "macro.dbt.default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.083252, "supported_languages": null}, "macro.dbt.make_intermediate_relation": {"name": "make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_intermediate_relation", "macro_sql": "{% macro make_intermediate_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_intermediate_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_intermediate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.085823, "supported_languages": null}, "macro.dbt.default__make_intermediate_relation": {"name": "default__make_intermediate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_intermediate_relation", "macro_sql": "{% macro default__make_intermediate_relation(base_relation, suffix) %}\n    {{ return(default__make_temp_relation(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.085941, "supported_languages": null}, "macro.dbt.make_temp_relation": {"name": "make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0860958, "supported_languages": null}, "macro.dbt.default__make_temp_relation": {"name": "default__make_temp_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {%- set temp_identifier = base_relation.identifier ~ suffix -%}\n    {%- set temp_relation = base_relation.incorporate(\n                                path={\"identifier\": temp_identifier}) -%}\n\n    {{ return(temp_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.086308, "supported_languages": null}, "macro.dbt.make_backup_relation": {"name": "make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.make_backup_relation", "macro_sql": "{% macro make_backup_relation(base_relation, backup_relation_type, suffix='__dbt_backup') %}\n    {{ return(adapter.dispatch('make_backup_relation', 'dbt')(base_relation, backup_relation_type, suffix)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_backup_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.086488, "supported_languages": null}, "macro.dbt.default__make_backup_relation": {"name": "default__make_backup_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__make_backup_relation", "macro_sql": "{% macro default__make_backup_relation(base_relation, backup_relation_type, suffix) %}\n    {%- set backup_identifier = base_relation.identifier ~ suffix -%}\n    {%- set backup_relation = base_relation.incorporate(\n                                  path={\"identifier\": backup_identifier},\n                                  type=backup_relation_type\n    ) -%}\n    {{ return(backup_relation) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.0867178, "supported_languages": null}, "macro.dbt.drop_relation": {"name": "drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.086849, "supported_languages": null}, "macro.dbt.default__drop_relation": {"name": "default__drop_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.087004, "supported_languages": null}, "macro.dbt.truncate_relation": {"name": "truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.087137, "supported_languages": null}, "macro.dbt.default__truncate_relation": {"name": "default__truncate_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.087252, "supported_languages": null}, "macro.dbt.rename_relation": {"name": "rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.087394, "supported_languages": null}, "macro.dbt.default__rename_relation": {"name": "default__rename_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.109283, "supported_languages": null}, "macro.dbt.get_or_create_relation": {"name": "get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1095319, "supported_languages": null}, "macro.dbt.default__get_or_create_relation": {"name": "default__get_or_create_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.109975, "supported_languages": null}, "macro.dbt.load_cached_relation": {"name": "load_cached_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_cached_relation", "macro_sql": "{% macro load_cached_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1101592, "supported_languages": null}, "macro.dbt.load_relation": {"name": "load_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.load_relation", "macro_sql": "{% macro load_relation(relation) %}\n    {{ return(load_cached_relation(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.load_cached_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.11027, "supported_languages": null}, "macro.dbt.drop_relation_if_exists": {"name": "drop_relation_if_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "unique_id": "macro.dbt.drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.110427, "supported_languages": null}, "macro.dbt.collect_freshness": {"name": "collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.110774, "supported_languages": null}, "macro.dbt.default__collect_freshness": {"name": "default__collect_freshness", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "unique_id": "macro.dbt.default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness')) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.111077, "supported_languages": null}, "macro.dbt.copy_grants": {"name": "copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.copy_grants", "macro_sql": "{% macro copy_grants() %}\n    {{ return(adapter.dispatch('copy_grants', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.112434, "supported_languages": null}, "macro.dbt.default__copy_grants": {"name": "default__copy_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__copy_grants", "macro_sql": "{% macro default__copy_grants() %}\n    {{ return(True) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.11252, "supported_languages": null}, "macro.dbt.support_multiple_grantees_per_dcl_statement": {"name": "support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.support_multiple_grantees_per_dcl_statement", "macro_sql": "{% macro support_multiple_grantees_per_dcl_statement() %}\n    {{ return(adapter.dispatch('support_multiple_grantees_per_dcl_statement', 'dbt')()) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1126442, "supported_languages": null}, "macro.dbt.default__support_multiple_grantees_per_dcl_statement": {"name": "default__support_multiple_grantees_per_dcl_statement", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__support_multiple_grantees_per_dcl_statement", "macro_sql": "\n\n{%- macro default__support_multiple_grantees_per_dcl_statement() -%}\n    {{ return(True) }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.11273, "supported_languages": null}, "macro.dbt.should_revoke": {"name": "should_revoke", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.should_revoke", "macro_sql": "{% macro should_revoke(existing_relation, full_refresh_mode=True) %}\n\n    {% if not existing_relation %}\n        {#-- The table doesn't already exist, so no grants to copy over --#}\n        {{ return(False) }}\n    {% elif full_refresh_mode %}\n        {#-- The object is being REPLACED -- whether grants are copied over depends on the value of user config --#}\n        {{ return(copy_grants()) }}\n    {% else %}\n        {#-- The table is being merged/upserted/inserted -- grants will be carried over --#}\n        {{ return(True) }}\n    {% endif %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.copy_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.112986, "supported_languages": null}, "macro.dbt.get_show_grant_sql": {"name": "get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_show_grant_sql", "macro_sql": "{% macro get_show_grant_sql(relation) %}\n    {{ return(adapter.dispatch(\"get_show_grant_sql\", \"dbt\")(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_show_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.113121, "supported_languages": null}, "macro.dbt.default__get_show_grant_sql": {"name": "default__get_show_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_show_grant_sql", "macro_sql": "{% macro default__get_show_grant_sql(relation) %}\n    show grants on {{ relation }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.113199, "supported_languages": null}, "macro.dbt.get_grant_sql": {"name": "get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_grant_sql", "macro_sql": "{% macro get_grant_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_grant_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_grant_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.113371, "supported_languages": null}, "macro.dbt.default__get_grant_sql": {"name": "default__get_grant_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_grant_sql", "macro_sql": "\n\n{%- macro default__get_grant_sql(relation, privilege, grantees) -%}\n    grant {{ privilege }} on {{ relation }} to {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1135108, "supported_languages": null}, "macro.dbt.get_revoke_sql": {"name": "get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_revoke_sql", "macro_sql": "{% macro get_revoke_sql(relation, privilege, grantees) %}\n    {{ return(adapter.dispatch('get_revoke_sql', 'dbt')(relation, privilege, grantees)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_revoke_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.113676, "supported_languages": null}, "macro.dbt.default__get_revoke_sql": {"name": "default__get_revoke_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_revoke_sql", "macro_sql": "\n\n{%- macro default__get_revoke_sql(relation, privilege, grantees) -%}\n    revoke {{ privilege }} on {{ relation }} from {{ grantees | join(', ') }}\n{%- endmacro -%}\n\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.113815, "supported_languages": null}, "macro.dbt.get_dcl_statement_list": {"name": "get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.get_dcl_statement_list", "macro_sql": "{% macro get_dcl_statement_list(relation, grant_config, get_dcl_macro) %}\n    {{ return(adapter.dispatch('get_dcl_statement_list', 'dbt')(relation, grant_config, get_dcl_macro)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_dcl_statement_list"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.113992, "supported_languages": null}, "macro.dbt.default__get_dcl_statement_list": {"name": "default__get_dcl_statement_list", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__get_dcl_statement_list", "macro_sql": "\n\n{%- macro default__get_dcl_statement_list(relation, grant_config, get_dcl_macro) -%}\n    {#\n      -- Unpack grant_config into specific privileges and the set of users who need them granted/revoked.\n      -- Depending on whether this database supports multiple grantees per statement, pass in the list of\n      -- all grantees per privilege, or (if not) template one statement per privilege-grantee pair.\n      -- `get_dcl_macro` will be either `get_grant_sql` or `get_revoke_sql`\n    #}\n    {%- set dcl_statements = [] -%}\n    {%- for privilege, grantees in grant_config.items() %}\n        {%- if support_multiple_grantees_per_dcl_statement() and grantees -%}\n          {%- set dcl = get_dcl_macro(relation, privilege, grantees) -%}\n          {%- do dcl_statements.append(dcl) -%}\n        {%- else -%}\n          {%- for grantee in grantees -%}\n              {% set dcl = get_dcl_macro(relation, privilege, [grantee]) %}\n              {%- do dcl_statements.append(dcl) -%}\n          {% endfor -%}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return(dcl_statements) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt.support_multiple_grantees_per_dcl_statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.114499, "supported_languages": null}, "macro.dbt.call_dcl_statements": {"name": "call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.call_dcl_statements", "macro_sql": "{% macro call_dcl_statements(dcl_statement_list) %}\n    {{ return(adapter.dispatch(\"call_dcl_statements\", \"dbt\")(dcl_statement_list)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1146429, "supported_languages": null}, "macro.dbt.default__call_dcl_statements": {"name": "default__call_dcl_statements", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__call_dcl_statements", "macro_sql": "{% macro default__call_dcl_statements(dcl_statement_list) %}\n    {#\n      -- By default, supply all grant + revoke statements in a single semicolon-separated block,\n      -- so that they're all processed together.\n\n      -- Some databases do not support this. Those adapters will need to override this macro\n      -- to run each statement individually.\n    #}\n    {% call statement('grants') %}\n        {% for dcl_statement in dcl_statement_list %}\n            {{ dcl_statement }};\n        {% endfor %}\n    {% endcall %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.114825, "supported_languages": null}, "macro.dbt.apply_grants": {"name": "apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.apply_grants", "macro_sql": "{% macro apply_grants(relation, grant_config, should_revoke) %}\n    {{ return(adapter.dispatch(\"apply_grants\", \"dbt\")(relation, grant_config, should_revoke)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__apply_grants"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1150641, "supported_languages": null}, "macro.dbt.default__apply_grants": {"name": "default__apply_grants", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/apply_grants.sql", "original_file_path": "macros/adapters/apply_grants.sql", "unique_id": "macro.dbt.default__apply_grants", "macro_sql": "{% macro default__apply_grants(relation, grant_config, should_revoke=True) %}\n    {#-- If grant_config is {} or None, this is a no-op --#}\n    {% if grant_config %}\n        {% if should_revoke %}\n            {#-- We think previous grants may have carried over --#}\n            {#-- Show current grants and calculate diffs --#}\n            {% set current_grants_table = run_query(get_show_grant_sql(relation)) %}\n            {% set current_grants_dict = adapter.standardize_grants_dict(current_grants_table) %}\n            {% set needs_granting = diff_of_two_dicts(grant_config, current_grants_dict) %}\n            {% set needs_revoking = diff_of_two_dicts(current_grants_dict, grant_config) %}\n            {% if not (needs_granting or needs_revoking) %}\n                {{ log('On ' ~ relation ~': All grants are in place, no revocation or granting needed.')}}\n            {% endif %}\n        {% else %}\n            {#-- We don't think there's any chance of previous grants having carried over. --#}\n            {#-- Jump straight to granting what the user has configured. --#}\n            {% set needs_revoking = {} %}\n            {% set needs_granting = grant_config %}\n        {% endif %}\n        {% if needs_granting or needs_revoking %}\n            {% set revoke_statement_list = get_dcl_statement_list(relation, needs_revoking, get_revoke_sql) %}\n            {% set grant_statement_list = get_dcl_statement_list(relation, needs_granting, get_grant_sql) %}\n            {% set dcl_statement_list = revoke_statement_list + grant_statement_list %}\n            {% if dcl_statement_list %}\n                {{ call_dcl_statements(dcl_statement_list) }}\n            {% endif %}\n        {% endif %}\n    {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.get_show_grant_sql", "macro.dbt.get_dcl_statement_list", "macro.dbt.call_dcl_statements"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1158988, "supported_languages": null}, "macro.dbt.alter_column_comment": {"name": "alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.116431, "supported_languages": null}, "macro.dbt.default__alter_column_comment": {"name": "default__alter_column_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1165571, "supported_languages": null}, "macro.dbt.alter_relation_comment": {"name": "alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.116708, "supported_languages": null}, "macro.dbt.default__alter_relation_comment": {"name": "default__alter_relation_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1168451, "supported_languages": null}, "macro.dbt.persist_docs": {"name": "persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.117043, "supported_languages": null}, "macro.dbt.default__persist_docs": {"name": "default__persist_docs", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "unique_id": "macro.dbt.default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.117395, "supported_languages": null}, "macro.dbt.get_catalog": {"name": "get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.118558, "supported_languages": null}, "macro.dbt.default__get_catalog": {"name": "default__get_catalog", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.118749, "supported_languages": null}, "macro.dbt.information_schema_name": {"name": "information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.118887, "supported_languages": null}, "macro.dbt.default__information_schema_name": {"name": "default__information_schema_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1190028, "supported_languages": null}, "macro.dbt.list_schemas": {"name": "list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.119138, "supported_languages": null}, "macro.dbt.default__list_schemas": {"name": "default__list_schemas", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1193228, "supported_languages": null}, "macro.dbt.check_schema_exists": {"name": "check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1194859, "supported_languages": null}, "macro.dbt.default__check_schema_exists": {"name": "default__check_schema_exists", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1197078, "supported_languages": null}, "macro.dbt.list_relations_without_caching": {"name": "list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.11985, "supported_languages": null}, "macro.dbt.default__list_relations_without_caching": {"name": "default__list_relations_without_caching", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "unique_id": "macro.dbt.default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1199942, "supported_languages": null}, "macro.dbt.get_columns_in_relation": {"name": "get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.121639, "supported_languages": null}, "macro.dbt.default__get_columns_in_relation": {"name": "default__get_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.121759, "supported_languages": null}, "macro.dbt.sql_convert_columns_in_relation": {"name": "sql_convert_columns_in_relation", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.121987, "supported_languages": null}, "macro.dbt.get_empty_subquery_sql": {"name": "get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_subquery_sql", "macro_sql": "{% macro get_empty_subquery_sql(select_sql) -%}\n  {{ return(adapter.dispatch('get_empty_subquery_sql', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.122135, "supported_languages": null}, "macro.dbt.default__get_empty_subquery_sql": {"name": "default__get_empty_subquery_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_subquery_sql", "macro_sql": "{% macro default__get_empty_subquery_sql(select_sql) %}\n    select * from (\n        {{ select_sql }}\n    ) as __dbt_sbq\n    where false\n    limit 0\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1222148, "supported_languages": null}, "macro.dbt.get_empty_schema_sql": {"name": "get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_empty_schema_sql", "macro_sql": "{% macro get_empty_schema_sql(columns) -%}\n  {{ return(adapter.dispatch('get_empty_schema_sql', 'dbt')(columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_empty_schema_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.122347, "supported_languages": null}, "macro.dbt.default__get_empty_schema_sql": {"name": "default__get_empty_schema_sql", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_empty_schema_sql", "macro_sql": "{% macro default__get_empty_schema_sql(columns) %}\n    {%- set col_err = [] -%}\n    select\n    {% for i in columns %}\n      {%- set col = columns[i] -%}\n      {%- if col['data_type'] is not defined -%}\n        {{ col_err.append(col['name']) }}\n      {%- endif -%}\n      cast(null as {{ col['data_type'] }}) as {{ col['name'] }}{{ \", \" if not loop.last }}\n    {%- endfor -%}\n    {%- if (col_err | length) > 0 -%}\n      {{ exceptions.column_type_missing(column_names=col_err) }}\n    {%- endif -%}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.122803, "supported_languages": null}, "macro.dbt.get_column_schema_from_query": {"name": "get_column_schema_from_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_column_schema_from_query", "macro_sql": "{% macro get_column_schema_from_query(select_sql) -%}\n    {% set columns = [] %}\n    {# -- Using an 'empty subquery' here to get the same schema as the given select_sql statement, without necessitating a data scan.#}\n    {% set sql = get_empty_subquery_sql(select_sql) %}\n    {% set column_schema = adapter.get_column_schema_from_query(sql) %}\n    {{ return(column_schema) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.123109, "supported_languages": null}, "macro.dbt.get_columns_in_query": {"name": "get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.123245, "supported_languages": null}, "macro.dbt.default__get_columns_in_query": {"name": "default__get_columns_in_query", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        {{ get_empty_subquery_sql(select_sql) }}\n    {% endcall %}\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.get_empty_subquery_sql"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1235142, "supported_languages": null}, "macro.dbt.alter_column_type": {"name": "alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1236842, "supported_languages": null}, "macro.dbt.default__alter_column_type": {"name": "default__alter_column_type", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.124115, "supported_languages": null}, "macro.dbt.alter_relation_add_remove_columns": {"name": "alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.124305, "supported_languages": null}, "macro.dbt.default__alter_relation_add_remove_columns": {"name": "default__alter_relation_add_remove_columns", "resource_type": "macro", "package_name": "dbt", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1248791, "supported_languages": null}, "macro.dbt.resolve_model_name": {"name": "resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.resolve_model_name", "macro_sql": "{% macro resolve_model_name(input_model_name) %}\n    {{ return(adapter.dispatch('resolve_model_name', 'dbt')(input_model_name)) }}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.default__resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1261492, "supported_languages": null}, "macro.dbt.default__resolve_model_name": {"name": "default__resolve_model_name", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.default__resolve_model_name", "macro_sql": "\n\n{%- macro default__resolve_model_name(input_model_name) -%}\n    {{  input_model_name | string | replace('\"', '\\\"') }}\n{%- endmacro -%}\n\n", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.126264, "supported_languages": null}, "macro.dbt.build_ref_function": {"name": "build_ref_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_ref_function", "macro_sql": "{% macro build_ref_function(model) %}\n\n    {%- set ref_dict = {} -%}\n    {%- for _ref in model.refs -%}\n        {% set _ref_args = [_ref.get('package'), _ref['name']] if _ref.get('package') else [_ref['name'],] %}\n        {%- set resolved = ref(*_ref_args, v=_ref.get('version')) -%}\n        {%- if _ref.get('version') -%}\n            {% do _ref_args.extend([\"v\" ~ _ref['version']]) %}\n        {%- endif -%}\n       {%- do ref_dict.update({_ref_args | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef ref(*args, **kwargs):\n    refs = {{ ref_dict | tojson }}\n    key = '.'.join(args)\n    version = kwargs.get(\"v\") or kwargs.get(\"version\")\n    if version:\n        key += f\".v{version}\"\n    dbt_load_df_function = kwargs.get(\"dbt_load_df_function\")\n    return dbt_load_df_function(refs[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.126852, "supported_languages": null}, "macro.dbt.build_source_function": {"name": "build_source_function", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_source_function", "macro_sql": "{% macro build_source_function(model) %}\n\n    {%- set source_dict = {} -%}\n    {%- for _source in model.sources -%}\n        {%- set resolved = source(*_source) -%}\n        {%- do source_dict.update({_source | join('.'): resolve_model_name(resolved)}) -%}\n    {%- endfor -%}\n\ndef source(*args, dbt_load_df_function):\n    sources = {{ source_dict | tojson }}\n    key = '.'.join(args)\n    return dbt_load_df_function(sources[key])\n\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.resolve_model_name"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.12715, "supported_languages": null}, "macro.dbt.build_config_dict": {"name": "build_config_dict", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.build_config_dict", "macro_sql": "{% macro build_config_dict(model) %}\n    {%- set config_dict = {} -%}\n    {% set config_dbt_used = zip(model.config.config_keys_used, model.config.config_keys_defaults) | list %}\n    {%- for key, default in config_dbt_used -%}\n        {# weird type testing with enum, would be much easier to write this logic in Python! #}\n        {%- if key == \"language\" -%}\n          {%- set value = \"python\" -%}\n        {%- endif -%}\n        {%- set value = model.config.get(key, default) -%}\n        {%- do config_dict.update({key: value}) -%}\n    {%- endfor -%}\nconfig_dict = {{ config_dict }}\n{% endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.127585, "supported_languages": null}, "macro.dbt.py_script_postfix": {"name": "py_script_postfix", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_postfix", "macro_sql": "{% macro py_script_postfix(model) %}\n# This part is user provided model code\n# you will need to copy the next section to run the code\n# COMMAND ----------\n# this part is dbt logic for get ref work, do not modify\n\n{{ build_ref_function(model ) }}\n{{ build_source_function(model ) }}\n{{ build_config_dict(model) }}\n\nclass config:\n    def __init__(self, *args, **kwargs):\n        pass\n\n    @staticmethod\n    def get(key, default=None):\n        return config_dict.get(key, default)\n\nclass this:\n    \"\"\"dbt.this() or dbt.this.identifier\"\"\"\n    database = \"{{ this.database }}\"\n    schema = \"{{ this.schema }}\"\n    identifier = \"{{ this.identifier }}\"\n    {% set this_relation_name = resolve_model_name(this) %}\n    def __repr__(self):\n        return '{{ this_relation_name  }}'\n\n\nclass dbtObj:\n    def __init__(self, load_df_function) -> None:\n        self.source = lambda *args: source(*args, dbt_load_df_function=load_df_function)\n        self.ref = lambda *args, **kwargs: ref(*args, **kwargs, dbt_load_df_function=load_df_function)\n        self.config = config\n        self.this = this()\n        self.is_incremental = {{ is_incremental() }}\n\n# COMMAND ----------\n{{py_script_comment()}}\n{% endmacro %}", "depends_on": {"macros": ["macro.dbt.build_ref_function", "macro.dbt.build_source_function", "macro.dbt.build_config_dict", "macro.dbt.resolve_model_name", "macro.dbt.is_incremental", "macro.dbt.py_script_comment"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.127933, "supported_languages": null}, "macro.dbt.py_script_comment": {"name": "py_script_comment", "resource_type": "macro", "package_name": "dbt", "path": "macros/python_model/python.sql", "original_file_path": "macros/python_model/python.sql", "unique_id": "macro.dbt.py_script_comment", "macro_sql": "{%macro py_script_comment()%}\n{%endmacro%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.127986, "supported_languages": null}, "macro.dbt.test_unique": {"name": "test_unique", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.128372, "supported_languages": null}, "macro.dbt.test_not_null": {"name": "test_not_null", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1285498, "supported_languages": null}, "macro.dbt.test_accepted_values": {"name": "test_accepted_values", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.128769, "supported_languages": null}, "macro.dbt.test_relationships": {"name": "test_relationships", "resource_type": "macro", "package_name": "dbt", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "unique_id": "macro.dbt.test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1289752, "supported_languages": null}, "macro.aidbox.path": {"name": "path", "resource_type": "macro", "package_name": "aidbox", "path": "macros/jsonb.sql", "original_file_path": "macros/jsonb.sql", "unique_id": "macro.aidbox.path", "macro_sql": "{% macro path(path,resource=none ) -%}\n    ({{aidbox.if_res(resource)}}#>>'{ {{path}} }')\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.129301, "supported_languages": null}, "macro.aidbox.if_res": {"name": "if_res", "resource_type": "macro", "package_name": "aidbox", "path": "macros/jsonb.sql", "original_file_path": "macros/jsonb.sql", "unique_id": "macro.aidbox.if_res", "macro_sql": "{% macro if_res(resource=None) -%}\n  {%- if resource -%}\n    {{resource}}\n  {%- else -%}\n    \"resource\"\n  {%- endif -%}\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.129421, "supported_languages": null}, "macro.aidbox.jsonpath_equal_fn": {"name": "jsonpath_equal_fn", "resource_type": "macro", "package_name": "aidbox", "path": "macros/jsonb.sql", "original_file_path": "macros/jsonb.sql", "unique_id": "macro.aidbox.jsonpath_equal_fn", "macro_sql": "\n\n{%- macro jsonpath_equal_fn (key, value=None) -%}\n    {%- if value is string -%}\n        @.{{key}} == \"{{ value }}\"\n    {%- elif value is iterable -%}\n        ( {% for v in value -%} @.{{key}} == \"{{ v }}\" {{\"|| \" if not loop.last }} {%- endfor %}) \n    {%- endif -%}\n{%- endmacro -%}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.129695, "supported_languages": null}, "macro.aidbox.codesystem_get_system": {"name": "codesystem_get_system", "resource_type": "macro", "package_name": "aidbox", "path": "macros/codesystem.sql", "original_file_path": "macros/codesystem.sql", "unique_id": "macro.aidbox.codesystem_get_system", "macro_sql": "{% macro codesystem_get_system(alias) -%}\n  (SELECT system FROM {{ ref('seed_codesystems') }} WHERE alias = '{{alias}}' limit 1)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1300218, "supported_languages": null}, "macro.aidbox.codesystem_text": {"name": "codesystem_text", "resource_type": "macro", "package_name": "aidbox", "path": "macros/codesystem.sql", "original_file_path": "macros/codesystem.sql", "unique_id": "macro.aidbox.codesystem_text", "macro_sql": "{% macro codesystem_text(jpath,  resource=None) -%}\n  (trim('\"' FROM (jsonb_path_query_first({{aidbox.if_res(resource)}}, '$.{{jpath}}.text'))::text))\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1301491, "supported_languages": null}, "macro.aidbox.codesystem_code": {"name": "codesystem_code", "resource_type": "macro", "package_name": "aidbox", "path": "macros/codesystem.sql", "original_file_path": "macros/codesystem.sql", "unique_id": "macro.aidbox.codesystem_code", "macro_sql": "{% macro codesystem_code(jpath, alias, resource=None) -%}\n  (trim('\"' FROM (jsonb_path_query_first({{aidbox.if_res(resource)}}, concat('$.{{jpath}}.coding ?(@.system==\"', {{aidbox.codesystem_get_system(alias)}}, '\").code')::jsonpath))::text))\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res", "macro.aidbox.codesystem_get_system"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.130324, "supported_languages": null}, "macro.aidbox.codesystem_display": {"name": "codesystem_display", "resource_type": "macro", "package_name": "aidbox", "path": "macros/codesystem.sql", "original_file_path": "macros/codesystem.sql", "unique_id": "macro.aidbox.codesystem_display", "macro_sql": "{% macro codesystem_display(jpath, alias, resource=None) -%}\n  (trim('\"' FROM (jsonb_path_query_first({{aidbox.if_res(resource)}}, concat('$.{{jpath}}.coding ?(@.system==\"', {{aidbox.codesystem_get_system(alias)}}, '\").display')::jsonpath))::text))\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res", "macro.aidbox.codesystem_get_system"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.130492, "supported_languages": null}, "macro.aidbox.extension_get_system": {"name": "extension_get_system", "resource_type": "macro", "package_name": "aidbox", "path": "macros/extension.sql", "original_file_path": "macros/extension.sql", "unique_id": "macro.aidbox.extension_get_system", "macro_sql": "{% macro extension_get_system(alias) -%}\n  (SELECT url FROM {{ ref('seed_extension') }} WHERE alias = '{{alias}}' limit 1)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.130683, "supported_languages": null}, "macro.aidbox.extension": {"name": "extension", "resource_type": "macro", "package_name": "aidbox", "path": "macros/extension.sql", "original_file_path": "macros/extension.sql", "unique_id": "macro.aidbox.extension", "macro_sql": "{% macro extension(alias, jpath, resource=None) -%}\n   (trim('\"' FROM (jsonb_path_query_first({{ aidbox.if_res(resource) }}, concat('$.extension ? (@.url == \"', {{ aidbox.extension_get_system(alias) }}, '\").{{jpath}}')::jsonpath))::TEXT))\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res", "macro.aidbox.extension_get_system"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1308532, "supported_languages": null}, "macro.aidbox.trim": {"name": "trim", "resource_type": "macro", "package_name": "aidbox", "path": "macros/text.sql", "original_file_path": "macros/text.sql", "unique_id": "macro.aidbox.trim", "macro_sql": "{% macro trim(expr) -%}\n    trim('\"' FROM ( {{ expr }} ) ::TEXT)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "Remove surround `\"..\"` double quotes from string\n\n__Example__\n```sql\nselect { { aidbox.trim('s') } } \n  from (select '\"Hello\"') t(s);\n-- Result\nHello\n```\n", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": "aidbox://macros/text.yml", "arguments": [{"name": "expr", "type": "string", "description": "SQL expression"}], "created_at": 1687530333.601975, "supported_languages": null}, "macro.aidbox.identifier_get_system": {"name": "identifier_get_system", "resource_type": "macro", "package_name": "aidbox", "path": "macros/identifier.sql", "original_file_path": "macros/identifier.sql", "unique_id": "macro.aidbox.identifier_get_system", "macro_sql": "{% macro identifier_get_system(alias) -%}\n  (SELECT system FROM {{ ref('seed_identifiers') }} WHERE alias = '{{alias}}' limit 1)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.131171, "supported_languages": null}, "macro.aidbox.identifier": {"name": "identifier", "resource_type": "macro", "package_name": "aidbox", "path": "macros/identifier.sql", "original_file_path": "macros/identifier.sql", "unique_id": "macro.aidbox.identifier", "macro_sql": "{% macro identifier(alias, resource=None) -%}\n  (trim('\"' FROM (jsonb_path_query_first({{aidbox.if_res(resource)}}, concat('$.identifier ?(@.system==\"', {{aidbox.identifier_get_system(alias)}}, '\").value')::jsonpath))::text))\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res", "macro.aidbox.identifier_get_system"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.131475, "supported_languages": null}, "macro.aidbox.identifier_from_uri": {"name": "identifier_from_uri", "resource_type": "macro", "package_name": "aidbox", "path": "macros/identifier.sql", "original_file_path": "macros/identifier.sql", "unique_id": "macro.aidbox.identifier_from_uri", "macro_sql": "{% macro identifier_from_uri(path, resource=None) -%}\n  (substring ({{aidbox.if_res(resource)}}#>>'{ {{path}} }' FROM '.+\\|(.+)$'))\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1316109, "supported_languages": null}, "macro.aidbox.test_fhir_re": {"name": "test_fhir_re", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_re", "macro_sql": "{% macro test_fhir_re(column_name, model, re) -%}\n    select id \n      from {{model}}  \n     where ({{column_name}})::text NOT SIMILAR TO  '{{re}}'\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.133533, "supported_languages": null}, "macro.aidbox.test_fhir_id": {"name": "test_fhir_id", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_id", "macro_sql": "{% macro test_fhir_id(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '[A-Za-z0-9\\-\\.]{1,64}')}}\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.133706, "supported_languages": null}, "macro.aidbox.test_fhir_base64Binary": {"name": "test_fhir_base64Binary", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_base64Binary", "macro_sql": "\n\n{%- macro test_fhir_base64Binary(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1338382, "supported_languages": null}, "macro.aidbox.test_fhir_canonical": {"name": "test_fhir_canonical", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_canonical", "macro_sql": "{%- macro test_fhir_canonical(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '\\S*')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.133984, "supported_languages": null}, "macro.aidbox.test_fhir_instant": {"name": "test_fhir_instant", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_instant", "macro_sql": "{%- macro test_fhir_instant(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?(Z|(\\+|-)((0[0-9]|1[0-3]):[0-5][0-9]|14:00))')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.13412, "supported_languages": null}, "macro.aidbox.test_fhir_code": {"name": "test_fhir_code", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_code", "macro_sql": "{%- macro test_fhir_code(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '[^\\s]+( [^\\s]+)*')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.134252, "supported_languages": null}, "macro.aidbox.test_fhir_date": {"name": "test_fhir_date", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_date", "macro_sql": "{%- macro test_fhir_date(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1]))?)?')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1343749, "supported_languages": null}, "macro.aidbox.test_fhir_oid": {"name": "test_fhir_oid", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_oid", "macro_sql": "{%- macro test_fhir_oid(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, 'urn:oid:[0-2](\\.(0|[1-9][0-9]*))+')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.134503, "supported_languages": null}, "macro.aidbox.test_fhir_dateTime": {"name": "test_fhir_dateTime", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_dateTime", "macro_sql": "{%- macro test_fhir_dateTime(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '([0-9]([0-9]([0-9][1-9]|[1-9]0)|[1-9]00)|[1-9]000)(-(0[1-9]|1[0-2])(-(0[1-9]|[1-2][0-9]|3[0-1])(T([01][0-9]|2[0-3]):[0-5][0-9]:([0-5][0-9]|60)(\\.[0-9]{1,9})?)?)?(Z|(\\+|-)((0[0-9]|1[0-3]):[0- ][0-9]|14:00)?)?)?')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.134637, "supported_languages": null}, "macro.aidbox.test_fhir_string": {"name": "test_fhir_string", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_string", "macro_sql": "{%- macro test_fhir_string(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '^[\\s\\S]+$')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.134768, "supported_languages": null}, "macro.aidbox.test_fhir_markdown": {"name": "test_fhir_markdown", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_markdown", "macro_sql": "{%- macro test_fhir_markdown(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '^[\\s\\S]+$')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.134905, "supported_languages": null}, "macro.aidbox.test_fhir_uri": {"name": "test_fhir_uri", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_uri", "macro_sql": "{%- macro test_fhir_uri(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '\\S*')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.135029, "supported_languages": null}, "macro.aidbox.test_fhir_url": {"name": "test_fhir_url", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_url", "macro_sql": "{%- macro test_fhir_url(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '\\S*')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.135154, "supported_languages": null}, "macro.aidbox.test_fhir_uuid": {"name": "test_fhir_uuid", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_uuid", "macro_sql": "{%- macro test_fhir_uuid(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1352818, "supported_languages": null}, "macro.aidbox.test_fhir_boolean": {"name": "test_fhir_boolean", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_boolean", "macro_sql": "{%- macro test_fhir_boolean(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, 'true|false')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.135403, "supported_languages": null}, "macro.aidbox.test_fhir_decimal": {"name": "test_fhir_decimal", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_decimal", "macro_sql": "{%- macro test_fhir_decimal(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '-?(0|[1-9][0-9]{0,17})(\\.[0-9]{1,17})?([eE][+-]?[0-9]{1,9}})?')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.135529, "supported_languages": null}, "macro.aidbox.test_fhir_positiveInt": {"name": "test_fhir_positiveInt", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_positiveInt", "macro_sql": "{%- macro test_fhir_positiveInt(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '[1-9][0-9]*')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.135645, "supported_languages": null}, "macro.aidbox.test_fhir_unsignedInt": {"name": "test_fhir_unsignedInt", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_unsignedInt", "macro_sql": "{%- macro test_fhir_unsignedInt(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '[0]|([1-9][0-9]*)')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.135762, "supported_languages": null}, "macro.aidbox.test_fhir_integer": {"name": "test_fhir_integer", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_integer", "macro_sql": "{%- macro test_fhir_integer(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '[0]|[-+]?[1-9][0-9]*')}}\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.13588, "supported_languages": null}, "macro.aidbox.test_fhir_integer64": {"name": "test_fhir_integer64", "resource_type": "macro", "package_name": "aidbox", "path": "macros/tests/test.sql", "original_file_path": "macros/tests/test.sql", "unique_id": "macro.aidbox.test_fhir_integer64", "macro_sql": "{%- macro test_fhir_integer64(column_name, model) -%}\n  {{ aidbox.test_fhir_re(column_name, model, '[0]|[-+]?[1-9][0-9]*')}}\n{%- endmacro -%}", "depends_on": {"macros": ["macro.aidbox.test_fhir_re"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1359959, "supported_languages": null}, "macro.aidbox.has_encounter": {"name": "has_encounter", "resource_type": "macro", "package_name": "aidbox", "path": "macros/cohort/visit.sql", "original_file_path": "macros/cohort/visit.sql", "unique_id": "macro.aidbox.has_encounter", "macro_sql": "{% macro has_encounter(\n  patient_id, \n  class=None,         classSystem=None,     classDisplay=None,\n  reason=None,        reasonSystem=None,    reasonDisplay=None,\n  discharge=None,     dischargeSystem=None, dischargeDisplay=None,\n  admissionDate=None, admissionLookBack=None,\n  dischargeDate=None, dischargeLookBack=None\n) -%}\n EXISTS (\n  SELECT e.id\n    FROM {{ ref('Encounter') }} AS e\n   WHERE e.resource#>>'{subject, id}' = {{ patient_id }} \n     AND e.resource#>>'{status}' IN ('in-progress', 'finished')\n     AND date(e.resource#>>'{period,start}') <= NOW() \n     {%- if class -%}\n      AND {{ get('class,code', \"e.resource\") }} = '{{class}}'\n     {%- endif -%}\n)\n{%- endmacro %}", "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.136502, "supported_languages": null}, "macro.aidbox.age": {"name": "age", "resource_type": "macro", "package_name": "aidbox", "path": "macros/cohort/demographics.sql", "original_file_path": "macros/cohort/demographics.sql", "unique_id": "macro.aidbox.age", "macro_sql": "{% macro age(resource=None) -%}\n    DATE_PART('year', AGE(date({{ aidbox.if_res(resource) }} #>>'{birthDate}')))\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.136925, "supported_languages": null}, "macro.aidbox.gender": {"name": "gender", "resource_type": "macro", "package_name": "aidbox", "path": "macros/cohort/demographics.sql", "original_file_path": "macros/cohort/demographics.sql", "unique_id": "macro.aidbox.gender", "macro_sql": "\n\n{%- macro gender(resource=None) -%}\n    ({{ aidbox.if_res(resource) }} #>>'{gender}' )\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1370392, "supported_languages": null}, "macro.aidbox.alive": {"name": "alive", "resource_type": "macro", "package_name": "aidbox", "path": "macros/cohort/demographics.sql", "original_file_path": "macros/cohort/demographics.sql", "unique_id": "macro.aidbox.alive", "macro_sql": "\n\n{%- macro alive(resource=None) -%}\n    (COALESCE((({{ aidbox.if_res(resource) }}#>>'{deceased, dateTime}')::timestamp > NOW()),\n              (not(({{ aidbox.if_res(resource) }}#>>'{deceased, boolean}')::boolean)),\n              true))\n{%- endmacro -%}\n\n", "depends_on": {"macros": ["macro.aidbox.if_res"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.137183, "supported_languages": null}, "macro.aidbox.race": {"name": "race", "resource_type": "macro", "package_name": "aidbox", "path": "macros/cohort/demographics.sql", "original_file_path": "macros/cohort/demographics.sql", "unique_id": "macro.aidbox.race", "macro_sql": "{% macro race(resource=None) -%}\n    {{ aidbox.extension('us-race', 'extension.valueString', resource) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.extension"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.1373062, "supported_languages": null}, "macro.aidbox.ethnicity": {"name": "ethnicity", "resource_type": "macro", "package_name": "aidbox", "path": "macros/cohort/demographics.sql", "original_file_path": "macros/cohort/demographics.sql", "unique_id": "macro.aidbox.ethnicity", "macro_sql": "{% macro ethnicity(resource=None) -%}\n    {{ aidbox.extension('us-ethnicity', 'extension.valueString', resource) }}\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.extension"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.137512, "supported_languages": null}, "macro.aidbox.death": {"name": "death", "resource_type": "macro", "package_name": "aidbox", "path": "macros/cohort/demographics.sql", "original_file_path": "macros/cohort/demographics.sql", "unique_id": "macro.aidbox.death", "macro_sql": "{% macro death(resource=None) -%}\n    (COALESCE((({{ aidbox.if_res(resource) }}#>>'{deceased, dateTime}')::timestamp < NOW()),\n              (({{ aidbox.if_res(resource) }}#>>'{deceased, boolean}')::boolean),\n              false))\n{%- endmacro %}", "depends_on": {"macros": ["macro.aidbox.if_res"]}, "description": "", "meta": {}, "docs": {"show": true, "node_color": null}, "patch_path": null, "arguments": [], "created_at": 1687530333.137673, "supported_languages": null}}, "docs": {"doc.dbt.__overview__": {"name": "__overview__", "resource_type": "doc", "package_name": "dbt", "path": "overview.md", "original_file_path": "docs/overview.md", "unique_id": "doc.dbt.__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "groups": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.AidboxProject.patient_age": ["model.AidboxProject.dim_patient"], "model.AidboxProject.administration": ["model.AidboxProject.dim_location", "model.AidboxProject.dim_location", "model.AidboxProject.dim_location", "model.AidboxProject.dim_location", "model.AidboxProject.dim_organization", "model.AidboxProject.dim_organization", "model.AidboxProject.dim_organization", "model.AidboxProject.dim_organization", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter"], "model.AidboxProject.demographics": ["model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient", "model.AidboxProject.fact_observable_period"], "model.AidboxProject.death_age": ["model.AidboxProject.dim_patient"], "model.AidboxProject.dim_location": ["model.aidbox.Location", "seed.AidboxProject.seed_identifiers", "seed.AidboxProject.seed_identifiers"], "model.AidboxProject.fact_condition": ["model.aidbox.Condition", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems"], "model.AidboxProject.fact_observable_period": ["model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient"], "model.AidboxProject.fact_procedure": ["model.aidbox.Procedure", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems"], "model.AidboxProject.fact_encounter": ["model.aidbox.Encounter", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_identifiers"], "model.AidboxProject.dim_practitioner": ["model.aidbox.Practitioner", "seed.AidboxProject.seed_identifiers"], "model.AidboxProject.fact_allergyintolerance": ["model.aidbox.AllergyIntolerance", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems"], "model.AidboxProject.fact_observation_quantity": ["model.aidbox.Observation", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems"], "model.AidboxProject.dim_patient": ["model.aidbox.Patient", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_extension", "seed.AidboxProject.seed_extension", "seed.AidboxProject.seed_extension", "seed.AidboxProject.seed_identifiers", "seed.AidboxProject.seed_identifiers", "seed.AidboxProject.seed_identifiers"], "model.AidboxProject.dim_organization": ["model.aidbox.Organization", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_codesystems", "seed.AidboxProject.seed_identifiers"], "seed.AidboxProject.seed_identifiers": [], "seed.AidboxProject.seed_extension": [], "seed.AidboxProject.seed_codesystems": [], "model.aidbox.MedicinalProductAuthorization": [], "model.aidbox.ChargeItem": [], "model.aidbox.SubstanceNucleicAcid": [], "model.aidbox.FamilyMemberHistory": [], "model.aidbox.AuditEvent": [], "model.aidbox.CoverageEligibilityRequest": [], "model.aidbox.ClinicalImpression": [], "model.aidbox.SubstanceSourceMaterial": [], "model.aidbox.AppointmentResponse": [], "model.aidbox.Procedure": [], "model.aidbox.CatalogEntry": [], "model.aidbox.MedicinalProductIngredient": [], "model.aidbox.SupplyDelivery": [], "model.aidbox.MedicationStatement": [], "model.aidbox.ConceptMap": [], "model.aidbox.ExampleScenario": [], "model.aidbox.EnrollmentRequest": [], "model.aidbox.Practitioner": [], "model.aidbox.Invoice": [], "model.aidbox.Communication": [], "model.aidbox.SubstanceProtein": [], "model.aidbox.DeviceDefinition": [], "model.aidbox.Encounter": [], "model.aidbox.ImmunizationEvaluation": [], "model.aidbox.Consent": [], "model.aidbox.EpisodeOfCare": [], "model.aidbox.CommunicationRequest": [], "model.aidbox.Schedule": [], "model.aidbox.OrganizationAffiliation": [], "model.aidbox.SubstanceSpecification": [], "model.aidbox.Location": [], "model.aidbox.NutritionOrder": [], "model.aidbox.Device": [], "model.aidbox.PaymentNotice": [], "model.aidbox.Endpoint": [], "model.aidbox.EffectEvidenceSynthesis": [], "model.aidbox.Composition": [], "model.aidbox.Evidence": [], "model.aidbox.DeviceMetric": [], "model.aidbox.CodeSystem": [], "model.aidbox.Provenance": [], "model.aidbox.Coverage": [], "model.aidbox.NamingSystem": [], "model.aidbox.PractitionerRole": [], "model.aidbox.Patient": [], "model.aidbox.Measure": [], "model.aidbox.ImagingStudy": [], "model.aidbox.Substance": [], "model.aidbox.MolecularSequence": [], "model.aidbox.Media": [], "model.aidbox.Parameters": [], "model.aidbox.Condition": [], "model.aidbox.CarePlan": [], "model.aidbox.Medication": [], "model.aidbox.MedicinalProductInteraction": [], "model.aidbox.ClaimResponse": [], "model.aidbox.CoverageEligibilityResponse": [], "model.aidbox.ActivityDefinition": [], "model.aidbox.Contract": [], "model.aidbox.EnrollmentResponse": [], "model.aidbox.DiagnosticReport": [], "model.aidbox.RequestGroup": [], "model.aidbox.PlanDefinition": [], "model.aidbox.ImmunizationRecommendation": [], "model.aidbox.Basic": [], "model.aidbox.Specimen": [], "model.aidbox.SubstancePolymer": [], "model.aidbox.GuidanceResponse": [], "model.aidbox.Linkage": [], "model.aidbox.MedicinalProductIndication": [], "model.aidbox.Organization": [], "model.aidbox.ResearchSubject": [], "model.aidbox.VisionPrescription": [], "model.aidbox.DeviceRequest": [], "model.aidbox.AdverseEvent": [], "model.aidbox.DetectedIssue": [], "model.aidbox.DocumentReference": [], "model.aidbox.MedicinalProductUndesirableEffect": [], "model.aidbox.ValueSet": [], "model.aidbox.MedicinalProduct": [], "model.aidbox.Observation": [], "model.aidbox.SpecimenDefinition": [], "model.aidbox.Flag": [], "model.aidbox.ChargeItemDefinition": [], "model.aidbox.RelatedPerson": [], "model.aidbox.Goal": [], "model.aidbox.Immunization": [], "model.aidbox.BodyStructure": [], "model.aidbox.MessageDefinition": [], "model.aidbox.ResearchDefinition": [], "model.aidbox.MeasureReport": [], "model.aidbox.MedicinalProductManufactured": [], "model.aidbox.ServiceRequest": [], "model.aidbox.ResearchElementDefinition": [], "model.aidbox.MedicationKnowledge": [], "model.aidbox.AllergyIntolerance": [], "model.aidbox.CompartmentDefinition": [], "model.aidbox.Questionnaire": [], "model.aidbox.ImplementationGuide": [], "model.aidbox.StructureMap": [], "model.aidbox.ResearchStudy": [], "model.aidbox.CareTeam": [], "model.aidbox.Appointment": [], "model.aidbox.InsurancePlan": [], "model.aidbox.VerificationResult": [], "model.aidbox.SubstanceReferenceInformation": [], "model.aidbox.RiskEvidenceSynthesis": [], "model.aidbox.Claim": [], "model.aidbox.EvidenceVariable": [], "model.aidbox.EventDefinition": [], "model.aidbox.OperationDefinition": [], "model.aidbox.MedicationAdministration": [], "model.aidbox.RiskAssessment": [], "model.aidbox.QuestionnaireResponse": [], "model.aidbox.DocumentManifest": [], "model.aidbox.Library": [], "model.aidbox.HealthcareService": [], "model.aidbox.MedicinalProductPackaged": [], "model.aidbox.PaymentReconciliation": [], "model.aidbox.Bundle": [], "model.aidbox.Person": [], "model.aidbox.MessageHeader": [], "model.aidbox.Slot": [], "model.aidbox.Account": [], "model.aidbox.SupplyRequest": [], "model.aidbox.ExplanationOfBenefit": [], "model.aidbox.DeviceUseStatement": [], "model.aidbox.Attribute": [], "model.aidbox.MedicinalProductContraindication": [], "model.aidbox.MedicinalProductPharmaceutical": [], "model.aidbox.MedicationDispense": [], "model.aidbox.ObservationDefinition": [], "model.aidbox.MedicationRequest": [], "model.aidbox.GraphDefinition": [], "model.aidbox.List": [], "model.aidbox.BiologicallyDerivedProduct": [], "model.aidbox.Task": [], "test.AidboxProject.aidbox_fhir_uuid_Patient_id.7a9ba10641": ["model.aidbox.Patient"], "test.AidboxProject.aidbox_fhir_date_Observation_resource_issued_.d42bc11b5b": ["model.aidbox.Observation"], "test.AidboxProject.aidbox_fhir_date_Observation_resource_effective_dateTime_.47838c609f": ["model.aidbox.Observation"], "test.AidboxProject.aidbox_fhir_uuid_Observation_id.1cd2e987b3": ["model.aidbox.Observation"], "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_subject_id_.3dca4d07d3": ["model.aidbox.Observation"], "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_encounter_id_.b1bb43a423": ["model.aidbox.Observation"], "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_start_.4ad69321d0": ["model.aidbox.Encounter"], "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_end_.32a824a49b": ["model.aidbox.Encounter"], "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_end_.5afca47e34": ["model.aidbox.Procedure"], "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_start_.bda7848306": ["model.aidbox.Procedure"], "test.AidboxProject.aidbox_fhir_date_Condition_resource_onset_dateTime_.ee1749cc82": ["model.aidbox.Condition"], "test.AidboxProject.aidbox_fhir_date_Condition_resource_abatement_dateTime_.0a5f2d826e": ["model.aidbox.Condition"], "test.AidboxProject.aidbox_fhir_date_Condition_resource_recordedDate_.f102b59941": ["model.aidbox.Condition"]}, "child_map": {"model.AidboxProject.patient_age": [], "model.AidboxProject.administration": [], "model.AidboxProject.demographics": [], "model.AidboxProject.death_age": [], "model.AidboxProject.dim_location": ["model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration"], "model.AidboxProject.fact_condition": [], "model.AidboxProject.fact_observable_period": ["model.AidboxProject.demographics"], "model.AidboxProject.fact_procedure": [], "model.AidboxProject.fact_encounter": ["model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration"], "model.AidboxProject.dim_practitioner": [], "model.AidboxProject.fact_allergyintolerance": [], "model.AidboxProject.fact_observation_quantity": [], "model.AidboxProject.dim_patient": ["model.AidboxProject.death_age", "model.AidboxProject.demographics", "model.AidboxProject.demographics", "model.AidboxProject.fact_observable_period", "model.AidboxProject.fact_observable_period", "model.AidboxProject.patient_age"], "model.AidboxProject.dim_organization": ["model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration", "model.AidboxProject.administration"], "seed.AidboxProject.seed_identifiers": ["model.AidboxProject.dim_location", "model.AidboxProject.dim_location", "model.AidboxProject.dim_organization", "model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient", "model.AidboxProject.dim_practitioner", "model.AidboxProject.fact_encounter"], "seed.AidboxProject.seed_extension": ["model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient"], "seed.AidboxProject.seed_codesystems": ["model.AidboxProject.dim_organization", "model.AidboxProject.dim_organization", "model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient", "model.AidboxProject.dim_patient", "model.AidboxProject.fact_allergyintolerance", "model.AidboxProject.fact_allergyintolerance", "model.AidboxProject.fact_allergyintolerance", "model.AidboxProject.fact_allergyintolerance", "model.AidboxProject.fact_allergyintolerance", "model.AidboxProject.fact_allergyintolerance", "model.AidboxProject.fact_condition", "model.AidboxProject.fact_condition", "model.AidboxProject.fact_condition", "model.AidboxProject.fact_condition", "model.AidboxProject.fact_condition", "model.AidboxProject.fact_condition", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_encounter", "model.AidboxProject.fact_observation_quantity", "model.AidboxProject.fact_observation_quantity", "model.AidboxProject.fact_observation_quantity", "model.AidboxProject.fact_procedure", "model.AidboxProject.fact_procedure"], "model.aidbox.MedicinalProductAuthorization": [], "model.aidbox.ChargeItem": [], "model.aidbox.SubstanceNucleicAcid": [], "model.aidbox.FamilyMemberHistory": [], "model.aidbox.AuditEvent": [], "model.aidbox.CoverageEligibilityRequest": [], "model.aidbox.ClinicalImpression": [], "model.aidbox.SubstanceSourceMaterial": [], "model.aidbox.AppointmentResponse": [], "model.aidbox.Procedure": ["model.AidboxProject.fact_procedure", "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_end_.5afca47e34", "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_start_.bda7848306"], "model.aidbox.CatalogEntry": [], "model.aidbox.MedicinalProductIngredient": [], "model.aidbox.SupplyDelivery": [], "model.aidbox.MedicationStatement": [], "model.aidbox.ConceptMap": [], "model.aidbox.ExampleScenario": [], "model.aidbox.EnrollmentRequest": [], "model.aidbox.Practitioner": ["model.AidboxProject.dim_practitioner"], "model.aidbox.Invoice": [], "model.aidbox.Communication": [], "model.aidbox.SubstanceProtein": [], "model.aidbox.DeviceDefinition": [], "model.aidbox.Encounter": ["model.AidboxProject.fact_encounter", "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_end_.32a824a49b", "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_start_.4ad69321d0"], "model.aidbox.ImmunizationEvaluation": [], "model.aidbox.Consent": [], "model.aidbox.EpisodeOfCare": [], "model.aidbox.CommunicationRequest": [], "model.aidbox.Schedule": [], "model.aidbox.OrganizationAffiliation": [], "model.aidbox.SubstanceSpecification": [], "model.aidbox.Location": ["model.AidboxProject.dim_location"], "model.aidbox.NutritionOrder": [], "model.aidbox.Device": [], "model.aidbox.PaymentNotice": [], "model.aidbox.Endpoint": [], "model.aidbox.EffectEvidenceSynthesis": [], "model.aidbox.Composition": [], "model.aidbox.Evidence": [], "model.aidbox.DeviceMetric": [], "model.aidbox.CodeSystem": [], "model.aidbox.Provenance": [], "model.aidbox.Coverage": [], "model.aidbox.NamingSystem": [], "model.aidbox.PractitionerRole": [], "model.aidbox.Patient": ["model.AidboxProject.dim_patient", "test.AidboxProject.aidbox_fhir_uuid_Patient_id.7a9ba10641"], "model.aidbox.Measure": [], "model.aidbox.ImagingStudy": [], "model.aidbox.Substance": [], "model.aidbox.MolecularSequence": [], "model.aidbox.Media": [], "model.aidbox.Parameters": [], "model.aidbox.Condition": ["model.AidboxProject.fact_condition", "test.AidboxProject.aidbox_fhir_date_Condition_resource_abatement_dateTime_.0a5f2d826e", "test.AidboxProject.aidbox_fhir_date_Condition_resource_onset_dateTime_.ee1749cc82", "test.AidboxProject.aidbox_fhir_date_Condition_resource_recordedDate_.f102b59941"], "model.aidbox.CarePlan": [], "model.aidbox.Medication": [], "model.aidbox.MedicinalProductInteraction": [], "model.aidbox.ClaimResponse": [], "model.aidbox.CoverageEligibilityResponse": [], "model.aidbox.ActivityDefinition": [], "model.aidbox.Contract": [], "model.aidbox.EnrollmentResponse": [], "model.aidbox.DiagnosticReport": [], "model.aidbox.RequestGroup": [], "model.aidbox.PlanDefinition": [], "model.aidbox.ImmunizationRecommendation": [], "model.aidbox.Basic": [], "model.aidbox.Specimen": [], "model.aidbox.SubstancePolymer": [], "model.aidbox.GuidanceResponse": [], "model.aidbox.Linkage": [], "model.aidbox.MedicinalProductIndication": [], "model.aidbox.Organization": ["model.AidboxProject.dim_organization"], "model.aidbox.ResearchSubject": [], "model.aidbox.VisionPrescription": [], "model.aidbox.DeviceRequest": [], "model.aidbox.AdverseEvent": [], "model.aidbox.DetectedIssue": [], "model.aidbox.DocumentReference": [], "model.aidbox.MedicinalProductUndesirableEffect": [], "model.aidbox.ValueSet": [], "model.aidbox.MedicinalProduct": [], "model.aidbox.Observation": ["model.AidboxProject.fact_observation_quantity", "test.AidboxProject.aidbox_fhir_date_Observation_resource_effective_dateTime_.47838c609f", "test.AidboxProject.aidbox_fhir_date_Observation_resource_issued_.d42bc11b5b", "test.AidboxProject.aidbox_fhir_uuid_Observation_id.1cd2e987b3", "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_encounter_id_.b1bb43a423", "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_subject_id_.3dca4d07d3"], "model.aidbox.SpecimenDefinition": [], "model.aidbox.Flag": [], "model.aidbox.ChargeItemDefinition": [], "model.aidbox.RelatedPerson": [], "model.aidbox.Goal": [], "model.aidbox.Immunization": [], "model.aidbox.BodyStructure": [], "model.aidbox.MessageDefinition": [], "model.aidbox.ResearchDefinition": [], "model.aidbox.MeasureReport": [], "model.aidbox.MedicinalProductManufactured": [], "model.aidbox.ServiceRequest": [], "model.aidbox.ResearchElementDefinition": [], "model.aidbox.MedicationKnowledge": [], "model.aidbox.AllergyIntolerance": ["model.AidboxProject.fact_allergyintolerance"], "model.aidbox.CompartmentDefinition": [], "model.aidbox.Questionnaire": [], "model.aidbox.ImplementationGuide": [], "model.aidbox.StructureMap": [], "model.aidbox.ResearchStudy": [], "model.aidbox.CareTeam": [], "model.aidbox.Appointment": [], "model.aidbox.InsurancePlan": [], "model.aidbox.VerificationResult": [], "model.aidbox.SubstanceReferenceInformation": [], "model.aidbox.RiskEvidenceSynthesis": [], "model.aidbox.Claim": [], "model.aidbox.EvidenceVariable": [], "model.aidbox.EventDefinition": [], "model.aidbox.OperationDefinition": [], "model.aidbox.MedicationAdministration": [], "model.aidbox.RiskAssessment": [], "model.aidbox.QuestionnaireResponse": [], "model.aidbox.DocumentManifest": [], "model.aidbox.Library": [], "model.aidbox.HealthcareService": [], "model.aidbox.MedicinalProductPackaged": [], "model.aidbox.PaymentReconciliation": [], "model.aidbox.Bundle": [], "model.aidbox.Person": [], "model.aidbox.MessageHeader": [], "model.aidbox.Slot": [], "model.aidbox.Account": [], "model.aidbox.SupplyRequest": [], "model.aidbox.ExplanationOfBenefit": [], "model.aidbox.DeviceUseStatement": [], "model.aidbox.Attribute": [], "model.aidbox.MedicinalProductContraindication": [], "model.aidbox.MedicinalProductPharmaceutical": [], "model.aidbox.MedicationDispense": [], "model.aidbox.ObservationDefinition": [], "model.aidbox.MedicationRequest": [], "model.aidbox.GraphDefinition": [], "model.aidbox.List": [], "model.aidbox.BiologicallyDerivedProduct": [], "model.aidbox.Task": [], "test.AidboxProject.aidbox_fhir_uuid_Patient_id.7a9ba10641": [], "test.AidboxProject.aidbox_fhir_date_Observation_resource_issued_.d42bc11b5b": [], "test.AidboxProject.aidbox_fhir_date_Observation_resource_effective_dateTime_.47838c609f": [], "test.AidboxProject.aidbox_fhir_uuid_Observation_id.1cd2e987b3": [], "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_subject_id_.3dca4d07d3": [], "test.AidboxProject.aidbox_fhir_uuid_Observation_resource_encounter_id_.b1bb43a423": [], "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_start_.4ad69321d0": [], "test.AidboxProject.aidbox_fhir_date_Encounter_resource_period_end_.32a824a49b": [], "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_end_.5afca47e34": [], "test.AidboxProject.aidbox_fhir_date_Procedure_resource_performed_Period_start_.bda7848306": [], "test.AidboxProject.aidbox_fhir_date_Condition_resource_onset_dateTime_.ee1749cc82": [], "test.AidboxProject.aidbox_fhir_date_Condition_resource_abatement_dateTime_.0a5f2d826e": [], "test.AidboxProject.aidbox_fhir_date_Condition_resource_recordedDate_.f102b59941": []}, "group_map": {}}